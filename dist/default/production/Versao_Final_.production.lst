

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Nov 18 11:52:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;;___wmul@product	offset	0
    78 ;;___wmul@multiplier	offset=-2 (param)
    79 ;;___wmul@multiplicand	offset=-4 (param)
    80 ;;sem_wait@s	offset=-2 (param)
    81 ;;sem_post@s	offset=-2 (param)
    82 ;;delay@time_ms	offset=-2 (param)
    83 ;;dispatcher@state	offset=-1 (param)
    84 ;;rr_scheduler@next_task_to_run	offset	0
    85 ;;___wmul@product	offset	0
    86 ;;___wmul@multiplier	offset=-2 (param)
    87 ;;___wmul@multiplicand	offset=-4 (param)
    88 ;;___lwmod@counter	offset	0
    89 ;;___lwmod@dividend	offset=-2 (param)
    90 ;;___lwmod@divisor	offset=-4 (param)
    91 ;;write_pipe@pipe	offset=-2 (param)
    92 ;;write_pipe@data	offset=-3 (param)
    93 ;;create_pipe@pipe	offset=-2 (param)
    94 ;;tluzes@dado	offset	0
    95 ;;read_pipe@dado	offset	0
    96 ;;read_pipe@pipe	offset=-2 (param)
    97 ;;dispatcher@state	offset=-1 (param)
    98 ;;rr_scheduler@next_task_to_run	offset	0
    99 ;;___wmul@product	offset	0
   100 ;;___wmul@multiplier	offset=-2 (param)
   101 ;;___wmul@multiplicand	offset=-4 (param)
   102 ;;___lwmod@counter	offset	0
   103 ;;___lwmod@dividend	offset=-2 (param)
   104 ;;___lwmod@divisor	offset=-4 (param)
   105                           
   106                           	psect	idataCOMRAM
   107  001896                     __pidataCOMRAM:
   108                           	opt stack 0
   109                           
   110                           ;initializer for _quantum
   111  001896  0004               	dw	4
   112                           
   113                           	psect	smallconst
   114  000600                     __psmallconst:
   115                           	opt stack 0
   116  000600  00                 	db	0
   117  000601  001F               	dw	31
   118  000603                     __end_of_STACK_SIZE:
   119                           	opt stack 0
   120  0000                     _TOS	set	4093
   121  0000                     _PORTEbits	set	3972
   122  0000                     _PORTCbits	set	3970
   123  0000                     _TRISCbits	set	3988
   124  0000                     _PORTDbits	set	3971
   125  0000                     _TRISD	set	3989
   126  0000                     _PORTBbits	set	3969
   127  0000                     _PORTB	set	3969
   128  0000                     _TRISB	set	3987
   129  0000                     _TMR0L	set	4054
   130  0000                     _T0CONbits	set	4053
   131  0000                     _STKPTR	set	4092
   132  0000                     _TOSH	set	4094
   133  0000                     _TOSL	set	4093
   134  0000                     _TOSU	set	4095
   135  0000                     _WREG	set	4072
   136  0000                     _STATUS	set	4056
   137  0000                     _BSR	set	4064
   138  0000                     _INTCONbits	set	4082
   139  000603  61                 	db	97	;'a'
   140  000604  00                 	db	0
   141  000605  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146  00175A                     __pcinit:
   147                           	opt stack 0
   148  00175A                     start_initialization:
   149                           	opt stack 0
   150  00175A                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (2 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  00175A  0E96               	movlw	low __pidataCOMRAM
   156  00175C  6EF6               	movwf	tblptrl,c
   157  00175E  0E18               	movlw	high __pidataCOMRAM
   158  001760  6EF7               	movwf	tblptrh,c
   159  001762  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  001764  6EF8               	movwf	tblptru,c
   161  001766  0009               	tblrd		*+	;fetch initializer
   162  001768  CFF5 F060          	movff	tablat,__pdataCOMRAM
   163  00176C  0009               	tblrd		*+	;fetch initializer
   164  00176E  CFF5 F061          	movff	tablat,__pdataCOMRAM+1
   165                           
   166                           ; Clear objects allocated to BIGRAM (512 bytes)
   167  001772  EE01  F0AA         	lfsr	0,__pbssBIGRAM
   168  001776  EE22 F000          	lfsr	2,512
   169  00177A                     clear_0:
   170  00177A  6AEE               	clrf	postinc0,c
   171  00177C  50DD               	movf	postdec2,w,c
   172  00177E  50D9               	movf	fsr2l,w,c
   173  001780  E1FC               	bnz	clear_0
   174  001782  50DA               	movf	fsr2h,w,c
   175  001784  E1FA               	bnz	clear_0
   176                           
   177                           ; Clear objects allocated to BANK1 (170 bytes)
   178  001786  EE01  F000         	lfsr	0,__pbssBANK1
   179  00178A  0EAA               	movlw	170
   180  00178C                     clear_1:
   181  00178C  6AEE               	clrf	postinc0,c
   182  00178E  06E8               	decf	wreg,f,c
   183  001790  E1FD               	bnz	clear_1
   184                           
   185                           ; Clear objects allocated to COMRAM (43 bytes)
   186  001792  EE00  F001         	lfsr	0,__pbssCOMRAM
   187  001796  0E2B               	movlw	43
   188  001798                     clear_2:
   189  001798  6AEE               	clrf	postinc0,c
   190  00179A  06E8               	decf	wreg,f,c
   191  00179C  E1FD               	bnz	clear_2
   192  00179E                     end_of_initialization:
   193                           	opt stack 0
   194  00179E                     __end_of__initialization:
   195                           	opt stack 0
   196  00179E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   197  0017A0  6EF8               	movwf	tblptru,c
   198  0017A2  0E06               	movlw	high __Lsmallconst
   199  0017A4  6EF7               	movwf	tblptrh,c
   200  0017A6  0100               	movlb	0
   201  0017A8  EFB6  F009         	goto	_main	;jump to C main() function
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           postdec2	equ	0xFDD
   209                           fsr2h	equ	0xFDA
   210                           fsr2l	equ	0xFD9
   211                           
   212                           	psect	bssCOMRAM
   213  000001                     __pbssCOMRAM:
   214                           	opt stack 0
   215  000001                     _cont:
   216                           	opt stack 0
   217  000001                     	ds	2
   218  000003                     _task_running:
   219                           	opt stack 0
   220  000003                     	ds	2
   221  000005                     _tasks_installed:
   222                           	opt stack 0
   223  000005                     	ds	2
   224  000007                     _spista:
   225                           	opt stack 0
   226  000007                     	ds	26
   227  000021                     _pipeluzes:
   228                           	opt stack 0
   229  000021                     	ds	11
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec2	equ	0xFDD
   237                           fsr2h	equ	0xFDA
   238                           fsr2l	equ	0xFD9
   239                           
   240                           	psect	dataCOMRAM
   241  000060                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000060                     _quantum:
   244                           	opt stack 0
   245  000060                     	ds	2
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           postdec2	equ	0xFDD
   253                           fsr2h	equ	0xFDA
   254                           fsr2l	equ	0xFD9
   255                           
   256                           	psect	bssBANK1
   257  000100                     __pbssBANK1:
   258                           	opt stack 0
   259  000100                     _F_APTOS:
   260                           	opt stack 0
   261  000100                     	ds	170
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec2	equ	0xFDD
   269                           fsr2h	equ	0xFDA
   270                           fsr2l	equ	0xFD9
   271                           
   272                           	psect	bssBIGRAM
   273  0001AA                     __pbssBIGRAM:
   274                           	opt stack 0
   275  0001AA                     __uDynamicHeap:
   276                           	opt stack 0
   277  0001AA                     	ds	512
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec2	equ	0xFDD
   285                           fsr2h	equ	0xFDA
   286                           fsr2l	equ	0xFD9
   287                           
   288                           	psect	cstackCOMRAM
   289  00002C                     __pcstackCOMRAM:
   290                           	opt stack 0
   291  00002C                     ??_int_high:
   292  00002C                     
   293                           ; 1 bytes @ 0x0
   294  00002C                     	ds	15
   295  00003B                     int_high@i:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xF
   299  00003B                     	ds	2
   300  00003D                     create_task@id:
   301                           	opt stack 0
   302  00003D                     sem_init@s:
   303                           	opt stack 0
   304  00003D                     SRAMInitHeap@count:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x11
   308  00003D                     	ds	2
   309  00003F                     create_task@prior:
   310                           	opt stack 0
   311  00003F                     sem_init@value:
   312                           	opt stack 0
   313  00003F                     SRAMInitHeap@pHeap:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x13
   317  00003F                     	ds	2
   318  000041                     create_task@task_f:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x15
   322  000041                     	ds	2
   323  000043                     create_task@task:
   324                           	opt stack 0
   325                           
   326                           ; 17 bytes @ 0x17
   327  000043                     	ds	17
   328  000054                     tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec2	equ	0xFDD
   335                           fsr2h	equ	0xFDA
   336                           fsr2l	equ	0xFD9
   337                           
   338                           ; 1 bytes @ 0x28
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 17 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;		None
   349 ;; Return value:  Size  Location     Type
   350 ;;                  1    wreg      void 
   351 ;; Registers used:
   352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   358 ;;      Params:         0       0       0       0       0       0       0
   359 ;;      Locals:         0       0       0       0       0       0       0
   360 ;;      Temps:          0       0       0       0       0       0       0
   361 ;;      Totals:         0       0       0       0       0       0       0
   362 ;;Total ram usage:        0 bytes
   363 ;; Hardware stack levels required when called:   12
   364 ;; This function calls:
   365 ;;		_SRAMInitHeap
   366 ;;		_confi_port
   367 ;;		_create_task
   368 ;;		_sem_init
   369 ;;		_setupOS
   370 ;;		_start_os
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377  00136C                     __ptext0:
   378                           	opt stack 0
   379  00136C                     _main:
   380                           	opt stack 19
   381                           
   382                           ;main.c: 19: setupOS();
   383                           
   384                           ;incstack = 0
   385  00136C  EC19  F00C         	call	_setupOS	;wreg free
   386                           
   387                           ;main.c: 20: SRAMInitHeap();
   388  001370  EC54  F00B         	call	_SRAMInitHeap	;wreg free
   389                           
   390                           ;main.c: 21: extern sem_t spista;
   391                           ;main.c: 25: confi_port();
   392  001374  EC44  F00C         	call	_confi_port	;wreg free
   393                           
   394                           ;main.c: 26: sem_init(&spista, 1);
   395  001378  0E07               	movlw	low _spista
   396  00137A  6E3D               	movwf	sem_init@s,c
   397  00137C  0E00               	movlw	high _spista
   398  00137E  6E3E               	movwf	sem_init@s+1,c
   399  001380  0E00               	movlw	0
   400  001382  6E40               	movwf	sem_init@value+1,c
   401  001384  0E01               	movlw	1
   402  001386  6E3F               	movwf	sem_init@value,c
   403  001388  ECFA  F00B         	call	_sem_init	;wreg free
   404                           
   405                           ;main.c: 31: create_task(2, 3, &aviao1);
   406  00138C  0E00               	movlw	0
   407  00138E  6E3E               	movwf	create_task@id+1,c
   408  001390  0E02               	movlw	2
   409  001392  6E3D               	movwf	create_task@id,c
   410  001394  0E00               	movlw	0
   411  001396  6E40               	movwf	create_task@prior+1,c
   412  001398  0E03               	movlw	3
   413  00139A  6E3F               	movwf	create_task@prior,c
   414  00139C  0ED0               	movlw	low _aviao1
   415  00139E  6E41               	movwf	create_task@task_f,c
   416  0013A0  0E12               	movlw	high _aviao1
   417  0013A2  6E42               	movwf	create_task@task_f+1,c
   418  0013A4  EC81  F00B         	call	_create_task	;wreg free
   419                           
   420                           ;main.c: 32: create_task(3, 3, &aviao2);
   421  0013A8  0E00               	movlw	0
   422  0013AA  6E3E               	movwf	create_task@id+1,c
   423  0013AC  0E03               	movlw	3
   424  0013AE  6E3D               	movwf	create_task@id,c
   425  0013B0  0E00               	movlw	0
   426  0013B2  6E40               	movwf	create_task@prior+1,c
   427  0013B4  0E03               	movlw	3
   428  0013B6  6E3F               	movwf	create_task@prior,c
   429  0013B8  0E98               	movlw	low _aviao2
   430  0013BA  6E41               	movwf	create_task@task_f,c
   431  0013BC  0E14               	movlw	high _aviao2
   432  0013BE  6E42               	movwf	create_task@task_f+1,c
   433  0013C0  EC81  F00B         	call	_create_task	;wreg free
   434                           
   435                           ;main.c: 36: create_task(5, 3, &tluzesescreve);
   436  0013C4  0E00               	movlw	0
   437  0013C6  6E3E               	movwf	create_task@id+1,c
   438  0013C8  0E05               	movlw	5
   439  0013CA  6E3D               	movwf	create_task@id,c
   440  0013CC  0E00               	movlw	0
   441  0013CE  6E40               	movwf	create_task@prior+1,c
   442  0013D0  0E03               	movlw	3
   443  0013D2  6E3F               	movwf	create_task@prior,c
   444  0013D4  0E6A               	movlw	low _tluzesescreve
   445  0013D6  6E41               	movwf	create_task@task_f,c
   446  0013D8  0E18               	movlw	high _tluzesescreve
   447  0013DA  6E42               	movwf	create_task@task_f+1,c
   448  0013DC  EC81  F00B         	call	_create_task	;wreg free
   449                           
   450                           ;main.c: 37: create_task(6, 3, &tluzes);
   451  0013E0  0E00               	movlw	0
   452  0013E2  6E3E               	movwf	create_task@id+1,c
   453  0013E4  0E06               	movlw	6
   454  0013E6  6E3D               	movwf	create_task@id,c
   455  0013E8  0E00               	movlw	0
   456  0013EA  6E40               	movwf	create_task@prior+1,c
   457  0013EC  0E03               	movlw	3
   458  0013EE  6E3F               	movwf	create_task@prior,c
   459  0013F0  0E30               	movlw	low _tluzes
   460  0013F2  6E41               	movwf	create_task@task_f,c
   461  0013F4  0E16               	movlw	high _tluzes
   462  0013F6  6E42               	movwf	create_task@task_f+1,c
   463  0013F8  EC81  F00B         	call	_create_task	;wreg free
   464                           
   465                           ;main.c: 50: start_os();
   466  0013FC  EC47  F00C         	call	_start_os	;wreg free
   467  001400                     l29:
   468                           
   469                           ;main.c: 52: {
   470  001400  D7FF               	goto	l29
   471  001402                     __end_of_main:
   472                           	opt stack 0
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec2	equ	0xFDD
   480                           fsr2h	equ	0xFDA
   481                           fsr2l	equ	0xFD9
   482                           
   483 ;; *************** function _start_os *****************
   484 ;; Defined at:
   485 ;;		line 153 in file "kernel.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		None
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   499 ;;      Params:         0       0       0       0       0       0       0
   500 ;;      Locals:         0       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0
   502 ;;      Totals:         0       0       0       0       0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    9
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514  00188E                     __ptext1:
   515                           	opt stack 0
   516  00188E                     _start_os:
   517                           	opt stack 21
   518                           
   519                           ;kernel.c: 157: T0CONbits.TMR0ON = 1;
   520                           
   521                           ;incstack = 0
   522  00188E  8ED5               	bsf	4053,7,c	;volatile
   523  001890  0012               	return		;funcret
   524  001892                     __end_of_start_os:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec2	equ	0xFDD
   533                           fsr2h	equ	0xFDA
   534                           fsr2l	equ	0xFD9
   535                           
   536 ;; *************** function _setupOS *****************
   537 ;; Defined at:
   538 ;;		line 85 in file "kernel.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   552 ;;      Params:         0       0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:   11
   559 ;; This function calls:
   560 ;;		_SRAMInitHeap
   561 ;;		_create_task
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text2
   568  001832                     __ptext2:
   569                           	opt stack 0
   570  001832                     _setupOS:
   571                           	opt stack 19
   572                           
   573                           ;kernel.c: 97: T0CONbits.T0CS = 0;
   574                           
   575                           ;incstack = 0
   576  001832  9AD5               	bcf	4053,5,c	;volatile
   577                           
   578                           ;kernel.c: 98: T0CONbits.PSA = 0;
   579  001834  96D5               	bcf	4053,3,c	;volatile
   580                           
   581                           ;kernel.c: 99: T0CONbits.T0PS = 0b111;
   582  001836  80D5               	bsf	4053,0,c	;volatile
   583  001838  82D5               	bsf	4053,1,c	;volatile
   584  00183A  84D5               	bsf	4053,2,c	;volatile
   585                           
   586                           ;kernel.c: 100: INTCONbits.PEIE = 1;
   587  00183C  8CF2               	bsf	intcon,6,c	;volatile
   588                           
   589                           ;kernel.c: 101: INTCONbits.TMR0IE = 1;
   590  00183E  8AF2               	bsf	intcon,5,c	;volatile
   591                           
   592                           ;kernel.c: 102: TMR0L = 252;
   593  001840  0EFC               	movlw	252
   594  001842  6ED6               	movwf	4054,c	;volatile
   595                           
   596                           ;kernel.c: 104: T0CONbits.TMR0ON = 1;
   597  001844  8ED5               	bsf	4053,7,c	;volatile
   598                           
   599                           ;kernel.c: 109: create_task(1,5, &task_idle);
   600  001846  0E00               	movlw	0
   601  001848  6E3E               	movwf	create_task@id+1,c
   602  00184A  0E01               	movlw	1
   603  00184C  6E3D               	movwf	create_task@id,c
   604  00184E  0E00               	movlw	0
   605  001850  6E40               	movwf	create_task@prior+1,c
   606  001852  0E05               	movlw	5
   607  001854  6E3F               	movwf	create_task@prior,c
   608  001856  0E92               	movlw	low _task_idle
   609  001858  6E41               	movwf	create_task@task_f,c
   610  00185A  0E18               	movlw	high _task_idle
   611  00185C  6E42               	movwf	create_task@task_f+1,c
   612  00185E  EC81  F00B         	call	_create_task	;wreg free
   613                           
   614                           ;kernel.c: 122: SRAMInitHeap();
   615  001862  EC54  F00B         	call	_SRAMInitHeap	;wreg free
   616                           
   617                           ;kernel.c: 124: (INTCONbits.GIE = 1);
   618  001866  8EF2               	bsf	intcon,7,c	;volatile
   619  001868  0012               	return		;funcret
   620  00186A                     __end_of_setupOS:
   621                           	opt stack 0
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           intcon	equ	0xFF2
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec2	equ	0xFDD
   630                           fsr2h	equ	0xFDA
   631                           fsr2l	equ	0xFD9
   632                           
   633 ;; *************** function _create_task *****************
   634 ;; Defined at:
   635 ;;		line 21 in file "kernel.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  id              2   17[COMRAM] unsigned int 
   638 ;;  prior           2   19[COMRAM] unsigned int 
   639 ;;  task_f          2   21[COMRAM] PTR FTN()void 
   640 ;;		 -> task_idle(1), tluzes(1), tluzesescreve(1), aviao2(1), 
   641 ;;		 -> aviao1(1), 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  task           17   23[COMRAM] struct tcb
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   653 ;;      Params:         6       0       0       0       0       0       0
   654 ;;      Locals:        17       0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0
   656 ;;      Totals:        23       0       0       0       0       0       0
   657 ;;Total ram usage:       23 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:   10
   660 ;; This function calls:
   661 ;;		___wmul
   662 ;; This function is called by:
   663 ;;		_main
   664 ;;		_setupOS
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  001702                     __ptext3:
   670                           	opt stack 0
   671  001702                     _create_task:
   672                           	opt stack 19
   673                           
   674                           ;kernel.c: 24: tcb_t task;
   675                           ;kernel.c: 26: task.task_id = id;
   676                           
   677                           ;incstack = 0
   678  001702  C03D  F043         	movff	create_task@id,create_task@task
   679  001706  C03E  F044         	movff	create_task@id+1,create_task@task+1
   680                           
   681                           ;kernel.c: 27: task.task_prior = prior;
   682  00170A  C03F  F045         	movff	create_task@prior,create_task@task+2
   683  00170E  C040  F046         	movff	create_task@prior+1,create_task@task+3
   684                           
   685                           ;kernel.c: 28: task.task_f = task_f;
   686  001712  C041  F047         	movff	create_task@task_f,create_task@task+4
   687  001716  C042  F048         	movff	create_task@task_f+1,create_task@task+5
   688                           
   689                           ;kernel.c: 29: task.task_stack.stack_size = 0;
   690  00171A  0E00               	movlw	0
   691  00171C  6E50               	movwf	create_task@task+13,c
   692  00171E  0E00               	movlw	0
   693  001720  6E4F               	movwf	create_task@task+12,c
   694                           
   695                           ;kernel.c: 30: task.task_state = READY;
   696  001722  0E01               	movlw	1
   697  001724  6E4B               	movwf	create_task@task+8,c
   698                           
   699                           ;kernel.c: 32: F_APTOS[tasks_installed] = task;
   700  001726  0E11               	movlw	17
   701  001728  6EE6               	movwf	postinc1,c
   702  00172A  0E00               	movlw	0
   703  00172C  6EE6               	movwf	postinc1,c
   704  00172E  C005  FFE6         	movff	_tasks_installed,postinc1
   705  001732  C006  FFE6         	movff	_tasks_installed+1,postinc1
   706  001736  EC01  F00A         	call	___wmul	;wreg free
   707  00173A  0E00               	movlw	low _F_APTOS
   708  00173C  2454               	addwf	btemp,w,c
   709  00173E  6EE9               	movwf	fsr0l,c
   710  001740  0E01               	movlw	high _F_APTOS
   711  001742  2055               	addwfc	btemp+1,w,c
   712  001744  6EEA               	movwf	fsr0h,c
   713  001746  EE20  F043         	lfsr	2,create_task@task
   714  00174A  0E10               	movlw	16
   715  00174C                     u531:
   716  00174C  CFDB FFEB          	movff	plusw2,plusw0
   717  001750  06E8               	decf	wreg,f,c
   718  001752  E2FC               	bc	u531
   719                           
   720                           ;kernel.c: 33: tasks_installed++;
   721  001754  4A05               	infsnz	_tasks_installed,f,c
   722  001756  2A06               	incf	_tasks_installed+1,f,c
   723  001758  0012               	return		;funcret
   724  00175A                     __end_of_create_task:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           intcon	equ	0xFF2
   731                           postinc0	equ	0xFEE
   732                           plusw0	equ	0xFEB
   733                           fsr0h	equ	0xFEA
   734                           fsr0l	equ	0xFE9
   735                           wreg	equ	0xFE8
   736                           postinc1	equ	0xFE6
   737                           postdec2	equ	0xFDD
   738                           plusw2	equ	0xFDB
   739                           fsr2h	equ	0xFDA
   740                           fsr2l	equ	0xFD9
   741                           
   742 ;; *************** function ___wmul *****************
   743 ;; Defined at:
   744 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  multiplier      2  [STACK] unsigned int 
   747 ;;  multiplicand    2  [STACK] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  product         2  [STACK] unsigned int 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  2  [STACK] unsigned int 
   752 ;; Registers used:
   753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   759 ;;      Params:         0       0       0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0
   762 ;;      Totals:         0       0       0       0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    9
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_create_task
   770 ;;		_dispatcher
   771 ;;		_delay
   772 ;;		_int_high
   773 ;;		_rr_scheduler
   774 ;;		_sem_post
   775 ;;		_write_pipe
   776 ;;		_read_pipe
   777 ;;		_get_id
   778 ;;		_prior_scheduler
   779 ;; This function uses a reentrant model
   780 ;;
   781                           
   782                           	psect	text4
   783  001402                     __ptext4:
   784                           	opt stack 0
   785  001402                     ___wmul:
   786                           	opt stack 0
   787                           
   788                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
   789  001402  52E6               	movf	postinc1,f,c
   790  001404  52E6               	movf	postinc1,f,c
   791                           
   792                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   793                           
   794                           ;incstack = 0
   795  001406  0EFA               	movlw	-6
   796  001408  CFE3 F05F          	movff	plusw1,btemp+11
   797                           
   798                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   799  00140C  0EFC               	movlw	-4
   800  00140E  50E3               	movf	plusw1,w,c
   801  001410  025F               	mulwf	btemp+11,c
   802                           
   803                           ;stkvar	___wmul@product @ sp[(-2)+0]
   804  001412  0EFE               	movlw	-2
   805  001414  CFF3 FFE3          	movff	prodl,plusw1
   806  001418  0EFF               	movlw	-1
   807  00141A  CFF4 FFE3          	movff	prodh,plusw1
   808                           
   809                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   810  00141E  0EFB               	movlw	251
   811  001420  24E1               	addwf	fsr1l,w,c
   812  001422  6ED9               	movwf	fsr2l,c
   813  001424  0EFF               	movlw	255
   814  001426  20E2               	addwfc	fsr1h,w,c
   815  001428  6EDA               	movwf	fsr2h,c
   816  00142A  50DF               	movf	indf2,w,c
   817  00142C  6E5F               	movwf	btemp+11,c
   818                           
   819                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   820  00142E  0EFC               	movlw	-4
   821  001430  50E3               	movf	plusw1,w,c
   822  001432  025F               	mulwf	btemp+11,c
   823  001434  CFF3 FFF4          	movff	prodl,prodh
   824  001438  6AF3               	clrf	prodl,c
   825                           
   826                           ;stkvar	___wmul@product @ sp[(-2)+0]
   827  00143A  50E1               	movf	fsr1l,w,c
   828  00143C  0FFE               	addlw	-2
   829  00143E  6ED9               	movwf	fsr2l,c
   830  001440  50E2               	movf	fsr1h,w,c
   831  001442  6EDA               	movwf	fsr2h,c
   832  001444  0EFF               	movlw	255
   833  001446  22DA               	addwfc	fsr2h,f,c
   834  001448  50F3               	movf	prodl,w,c
   835  00144A  26DE               	addwf	postinc2,f,c
   836  00144C  50F4               	movf	prodh,w,c
   837  00144E  22DD               	addwfc	postdec2,f,c
   838                           
   839                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   840  001450  0EFA               	movlw	-6
   841  001452  CFE3 F05F          	movff	plusw1,btemp+11
   842                           
   843                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   844  001456  0EFD               	movlw	253
   845  001458  24E1               	addwf	fsr1l,w,c
   846  00145A  6ED9               	movwf	fsr2l,c
   847  00145C  0EFF               	movlw	255
   848  00145E  20E2               	addwfc	fsr1h,w,c
   849  001460  6EDA               	movwf	fsr2h,c
   850  001462  50DF               	movf	indf2,w,c
   851  001464  025F               	mulwf	btemp+11,c
   852  001466  CFF3 FFF4          	movff	prodl,prodh
   853  00146A  6AF3               	clrf	prodl,c
   854                           
   855                           ;stkvar	___wmul@product @ sp[(-2)+0]
   856  00146C  50E1               	movf	fsr1l,w,c
   857  00146E  0FFE               	addlw	-2
   858  001470  6ED9               	movwf	fsr2l,c
   859  001472  50E2               	movf	fsr1h,w,c
   860  001474  6EDA               	movwf	fsr2h,c
   861  001476  0EFF               	movlw	255
   862  001478  22DA               	addwfc	fsr2h,f,c
   863  00147A  50F3               	movf	prodl,w,c
   864  00147C  26DE               	addwf	postinc2,f,c
   865  00147E  50F4               	movf	prodh,w,c
   866  001480  22DD               	addwfc	postdec2,f,c
   867                           
   868                           ;stkvar	___wmul@product @ sp[(-2)+0]
   869  001482  0EFE               	movlw	-2
   870  001484  CFE3 F054          	movff	plusw1,btemp
   871  001488  0EFF               	movlw	-1
   872  00148A  CFE3 F055          	movff	plusw1,btemp+1
   873                           
   874                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
   875  00148E  0EFA               	movlw	250
   876  001490  26E1               	addwf	fsr1l,f,c
   877  001492  0EFF               	movlw	255
   878  001494  22E2               	addwfc	fsr1h,f,c
   879  001496  0012               	return		;funcret
   880  001498                     __end_of___wmul:
   881                           	opt stack 0
   882                           tblptru	equ	0xFF8
   883                           tblptrh	equ	0xFF7
   884                           tblptrl	equ	0xFF6
   885                           tablat	equ	0xFF5
   886                           prodh	equ	0xFF4
   887                           prodl	equ	0xFF3
   888                           intcon	equ	0xFF2
   889                           postinc0	equ	0xFEE
   890                           plusw0	equ	0xFEB
   891                           fsr0h	equ	0xFEA
   892                           fsr0l	equ	0xFE9
   893                           wreg	equ	0xFE8
   894                           postinc1	equ	0xFE6
   895                           plusw1	equ	0xFE3
   896                           fsr1h	equ	0xFE2
   897                           fsr1l	equ	0xFE1
   898                           indf2	equ	0xFDF
   899                           postinc2	equ	0xFDE
   900                           postdec2	equ	0xFDD
   901                           plusw2	equ	0xFDB
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           
   905 ;; *************** function _SRAMInitHeap *****************
   906 ;; Defined at:
   907 ;;		line 303 in file "memory.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  count           2   17[COMRAM] unsigned int 
   912 ;;  pHeap           2   19[COMRAM] near PTR unsigned char 
   913 ;;		 -> _uDynamicHeap(512), 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   923 ;;      Params:         0       0       0       0       0       0       0
   924 ;;      Locals:         4       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0
   926 ;;      Totals:         4       0       0       0       0       0       0
   927 ;;Total ram usage:        4 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    9
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;;		_setupOS
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text5
   939  0016A8                     __ptext5:
   940                           	opt stack 0
   941  0016A8                     _SRAMInitHeap:
   942                           	opt stack 20
   943                           
   944                           ;memory.c: 305: unsigned char * near pHeap;
   945                           ;memory.c: 306: near unsigned int count;
   946                           ;memory.c: 308: pHeap = _uDynamicHeap;
   947                           
   948                           ;incstack = 0
   949  0016A8  0EAA               	movlw	low __uDynamicHeap
   950  0016AA  6E3F               	movwf	SRAMInitHeap@pHeap,c
   951  0016AC  0E01               	movlw	high __uDynamicHeap
   952  0016AE  6E40               	movwf	SRAMInitHeap@pHeap+1,c
   953                           
   954                           ;memory.c: 309: count = 0x200-1;
   955  0016B0  0E01               	movlw	1
   956  0016B2  6E3E               	movwf	SRAMInitHeap@count+1,c
   957  0016B4  683D               	setf	SRAMInitHeap@count,c
   958  0016B6                     
   959                           ;memory.c: 312: {
   960                           ;memory.c: 313: if (count > 0x7F)
   961  0016B6  503E               	movf	SRAMInitHeap@count+1,w,c
   962  0016B8  E104               	bnz	u520
   963  0016BA  0E80               	movlw	128
   964  0016BC  5C3D               	subwf	SRAMInitHeap@count,w,c
   965  0016BE  A0D8               	btfss	status,0,c
   966  0016C0  D011               	goto	l292
   967  0016C2                     u520:
   968                           
   969                           ;memory.c: 314: {
   970                           ;memory.c: 315: *pHeap = 0x7F;
   971  0016C2  C03F  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
   972  0016C6  C040  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
   973  0016CA  0E7F               	movlw	127
   974  0016CC  6EDF               	movwf	indf2,c
   975                           
   976                           ;memory.c: 316: pHeap += 0x7F;
   977  0016CE  0E7F               	movlw	127
   978  0016D0  263F               	addwf	SRAMInitHeap@pHeap,f,c
   979  0016D2  0E00               	movlw	0
   980  0016D4  2240               	addwfc	SRAMInitHeap@pHeap+1,f,c
   981                           
   982                           ;memory.c: 317: count = count - 0x7F;
   983  0016D6  0E81               	movlw	129
   984  0016D8  243D               	addwf	SRAMInitHeap@count,w,c
   985  0016DA  6E3D               	movwf	SRAMInitHeap@count,c
   986  0016DC  0EFF               	movlw	255
   987  0016DE  203E               	addwfc	SRAMInitHeap@count+1,w,c
   988  0016E0  6E3E               	movwf	SRAMInitHeap@count+1,c
   989                           
   990                           ;memory.c: 318: }
   991  0016E2  D7E9               	goto	l291
   992  0016E4                     l292:
   993                           
   994                           ;memory.c: 319: else
   995                           ;memory.c: 320: {
   996                           ;memory.c: 321: *pHeap = count;
   997  0016E4  C03F  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
   998  0016E8  C040  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
   999  0016EC  C03D  FFDF         	movff	SRAMInitHeap@count,indf2
  1000                           
  1001                           ;memory.c: 322: *(pHeap + count) = 0;
  1002  0016F0  503D               	movf	SRAMInitHeap@count,w,c
  1003  0016F2  243F               	addwf	SRAMInitHeap@pHeap,w,c
  1004  0016F4  6ED9               	movwf	fsr2l,c
  1005  0016F6  503E               	movf	SRAMInitHeap@count+1,w,c
  1006  0016F8  2040               	addwfc	SRAMInitHeap@pHeap+1,w,c
  1007  0016FA  6EDA               	movwf	fsr2h,c
  1008  0016FC  0E00               	movlw	0
  1009  0016FE  6EDF               	movwf	indf2,c
  1010                           
  1011                           ;memory.c: 323: return;
  1012  001700  0012               	return	
  1013  001702                     __end_of_SRAMInitHeap:
  1014                           	opt stack 0
  1015                           tblptru	equ	0xFF8
  1016                           tblptrh	equ	0xFF7
  1017                           tblptrl	equ	0xFF6
  1018                           tablat	equ	0xFF5
  1019                           prodh	equ	0xFF4
  1020                           prodl	equ	0xFF3
  1021                           intcon	equ	0xFF2
  1022                           postinc0	equ	0xFEE
  1023                           plusw0	equ	0xFEB
  1024                           fsr0h	equ	0xFEA
  1025                           fsr0l	equ	0xFE9
  1026                           wreg	equ	0xFE8
  1027                           postinc1	equ	0xFE6
  1028                           plusw1	equ	0xFE3
  1029                           fsr1h	equ	0xFE2
  1030                           fsr1l	equ	0xFE1
  1031                           indf2	equ	0xFDF
  1032                           postinc2	equ	0xFDE
  1033                           postdec2	equ	0xFDD
  1034                           plusw2	equ	0xFDB
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _sem_init *****************
  1040 ;; Defined at:
  1041 ;;		line 6 in file "semaphore.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  s               2   17[COMRAM] PTR struct sem
  1044 ;;		 -> spista(26), 
  1045 ;;  value           2   19[COMRAM] int 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         4       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         4       0       0       0       0       0       0
  1061 ;;Total ram usage:        4 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    9
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text6
  1072  0017F4                     __ptext6:
  1073                           	opt stack 0
  1074  0017F4                     _sem_init:
  1075                           	opt stack 21
  1076                           
  1077                           ;semaphore.c: 8: (INTCONbits.GIE = 0);
  1078                           
  1079                           ;incstack = 0
  1080  0017F4  9EF2               	bcf	intcon,7,c	;volatile
  1081                           
  1082                           ;semaphore.c: 10: s->contador = value;
  1083  0017F6  C03D  FFD9         	movff	sem_init@s,fsr2l
  1084  0017FA  C03E  FFDA         	movff	sem_init@s+1,fsr2h
  1085  0017FE  C03F  FFDE         	movff	sem_init@value,postinc2
  1086  001802  C040  FFDD         	movff	sem_init@value+1,postdec2
  1087                           
  1088                           ;semaphore.c: 11: s->queue.s_queue_pos_in = 0;
  1089  001806  EE20 F016          	lfsr	2,22
  1090  00180A  503D               	movf	sem_init@s,w,c
  1091  00180C  26D9               	addwf	fsr2l,f,c
  1092  00180E  503E               	movf	sem_init@s+1,w,c
  1093  001810  22DA               	addwfc	fsr2h,f,c
  1094  001812  0E00               	movlw	0
  1095  001814  6EDE               	movwf	postinc2,c
  1096  001816  0E00               	movlw	0
  1097  001818  6EDD               	movwf	postdec2,c
  1098                           
  1099                           ;semaphore.c: 12: s->queue.s_queue_pos_out = 0;
  1100  00181A  EE20 F018          	lfsr	2,24
  1101  00181E  503D               	movf	sem_init@s,w,c
  1102  001820  26D9               	addwf	fsr2l,f,c
  1103  001822  503E               	movf	sem_init@s+1,w,c
  1104  001824  22DA               	addwfc	fsr2h,f,c
  1105  001826  0E00               	movlw	0
  1106  001828  6EDE               	movwf	postinc2,c
  1107  00182A  0E00               	movlw	0
  1108  00182C  6EDD               	movwf	postdec2,c
  1109                           
  1110                           ;semaphore.c: 14: (INTCONbits.GIE = 1);
  1111  00182E  8EF2               	bsf	intcon,7,c	;volatile
  1112  001830  0012               	return		;funcret
  1113  001832                     __end_of_sem_init:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           prodh	equ	0xFF4
  1120                           prodl	equ	0xFF3
  1121                           intcon	equ	0xFF2
  1122                           postinc0	equ	0xFEE
  1123                           plusw0	equ	0xFEB
  1124                           fsr0h	equ	0xFEA
  1125                           fsr0l	equ	0xFE9
  1126                           wreg	equ	0xFE8
  1127                           postinc1	equ	0xFE6
  1128                           plusw1	equ	0xFE3
  1129                           fsr1h	equ	0xFE2
  1130                           fsr1l	equ	0xFE1
  1131                           indf2	equ	0xFDF
  1132                           postinc2	equ	0xFDE
  1133                           postdec2	equ	0xFDD
  1134                           plusw2	equ	0xFDB
  1135                           fsr2h	equ	0xFDA
  1136                           fsr2l	equ	0xFD9
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _confi_port *****************
  1140 ;; Defined at:
  1141 ;;		line 62 in file "tasks.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1155 ;;      Params:         0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    9
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text7
  1170  001888                     __ptext7:
  1171                           	opt stack 0
  1172  001888                     _confi_port:
  1173                           	opt stack 21
  1174                           
  1175                           ;tasks.c: 64: TRISD = 0x00;
  1176                           
  1177                           ;incstack = 0
  1178  001888  0E00               	movlw	0
  1179  00188A  6E95               	movwf	3989,c	;volatile
  1180  00188C  0012               	return		;funcret
  1181  00188E                     __end_of_confi_port:
  1182                           	opt stack 0
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           prodh	equ	0xFF4
  1188                           prodl	equ	0xFF3
  1189                           intcon	equ	0xFF2
  1190                           postinc0	equ	0xFEE
  1191                           plusw0	equ	0xFEB
  1192                           fsr0h	equ	0xFEA
  1193                           fsr0l	equ	0xFE9
  1194                           wreg	equ	0xFE8
  1195                           postinc1	equ	0xFE6
  1196                           plusw1	equ	0xFE3
  1197                           fsr1h	equ	0xFE2
  1198                           fsr1l	equ	0xFE1
  1199                           indf2	equ	0xFDF
  1200                           postinc2	equ	0xFDE
  1201                           postdec2	equ	0xFDD
  1202                           plusw2	equ	0xFDB
  1203                           fsr2h	equ	0xFDA
  1204                           fsr2l	equ	0xFD9
  1205                           status	equ	0xFD8
  1206                           
  1207 ;; *************** function _aviao1 *****************
  1208 ;; Defined at:
  1209 ;;		line 68 in file "tasks.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1  [STACK] void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1223 ;;      Params:         0       0       0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    8
  1230 ;; This function calls:
  1231 ;;		_delay
  1232 ;;		_sem_post
  1233 ;;		_sem_wait
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text8
  1240  0012D0                     __ptext8:
  1241                           	opt stack 0
  1242  0012D0                     _aviao1:
  1243                           	opt stack 19
  1244                           
  1245                           ;tasks.c: 71: PORTDbits.RD3 = 0;
  1246                           
  1247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1248                           ;incstack = 0
  1249  0012D0  9683               	bcf	3971,3,c	;volatile
  1250                           
  1251                           ;tasks.c: 72: PORTDbits.RD6 = 0;
  1252  0012D2  9C83               	bcf	3971,6,c	;volatile
  1253                           
  1254                           ;tasks.c: 73: PORTDbits.RD4 = 0;
  1255  0012D4  9883               	bcf	3971,4,c	;volatile
  1256                           
  1257                           ;tasks.c: 74: PORTDbits.RD0 = 0;
  1258  0012D6  9083               	bcf	3971,0,c	;volatile
  1259  0012D8                     l169:
  1260                           
  1261                           ;tasks.c: 78: PORTDbits.RD3 = 1;
  1262  0012D8  8683               	bsf	3971,3,c	;volatile
  1263                           
  1264                           ;tasks.c: 80: delay(5000);
  1265  0012DA  0E88               	movlw	136
  1266  0012DC  6EE6               	movwf	postinc1,c
  1267  0012DE  0E13               	movlw	19
  1268  0012E0  6EE6               	movwf	postinc1,c
  1269  0012E2  ECD6  F00B         	call	_delay	;wreg free
  1270                           
  1271                           ;tasks.c: 82: sem_wait(&spista);
  1272  0012E6  0E07               	movlw	low _spista
  1273  0012E8  6EE6               	movwf	postinc1,c
  1274  0012EA  0E00               	movlw	high _spista
  1275  0012EC  6EE6               	movwf	postinc1,c
  1276  0012EE  EC49  F008         	call	_sem_wait	;wreg free
  1277                           
  1278                           ;tasks.c: 84: PORTDbits.RD3 = 0;
  1279  0012F2  9683               	bcf	3971,3,c	;volatile
  1280                           
  1281                           ;tasks.c: 86: PORTDbits.RD6 = 1;
  1282  0012F4  8C83               	bsf	3971,6,c	;volatile
  1283                           
  1284                           ;tasks.c: 88: delay(5000);
  1285  0012F6  0E88               	movlw	136
  1286  0012F8  6EE6               	movwf	postinc1,c
  1287  0012FA  0E13               	movlw	19
  1288  0012FC  6EE6               	movwf	postinc1,c
  1289  0012FE  ECD6  F00B         	call	_delay	;wreg free
  1290                           
  1291                           ;tasks.c: 91: PORTDbits.RD6 = 0;
  1292  001302  9C83               	bcf	3971,6,c	;volatile
  1293                           
  1294                           ;tasks.c: 94: sem_post(&spista);
  1295  001304  0E07               	movlw	low _spista
  1296  001306  6EE6               	movwf	postinc1,c
  1297  001308  0E00               	movlw	high _spista
  1298  00130A  6EE6               	movwf	postinc1,c
  1299  00130C  ECB3  F007         	call	_sem_post	;wreg free
  1300                           
  1301                           ;tasks.c: 95: delay(300);
  1302  001310  0E2C               	movlw	44
  1303  001312  6EE6               	movwf	postinc1,c
  1304  001314  0E01               	movlw	1
  1305  001316  6EE6               	movwf	postinc1,c
  1306  001318  ECD6  F00B         	call	_delay	;wreg free
  1307                           
  1308                           ;tasks.c: 97: cont++;
  1309  00131C  4A01               	infsnz	_cont,f,c
  1310  00131E  2A02               	incf	_cont+1,f,c
  1311                           
  1312                           ;tasks.c: 99: PORTDbits.RD0 = 1;
  1313  001320  8083               	bsf	3971,0,c	;volatile
  1314                           
  1315                           ;tasks.c: 101: delay(5000);
  1316  001322  0E88               	movlw	136
  1317  001324  6EE6               	movwf	postinc1,c
  1318  001326  0E13               	movlw	19
  1319  001328  6EE6               	movwf	postinc1,c
  1320  00132A  ECD6  F00B         	call	_delay	;wreg free
  1321                           
  1322                           ;tasks.c: 105: sem_wait(&spista);
  1323  00132E  0E07               	movlw	low _spista
  1324  001330  6EE6               	movwf	postinc1,c
  1325  001332  0E00               	movlw	high _spista
  1326  001334  6EE6               	movwf	postinc1,c
  1327  001336  EC49  F008         	call	_sem_wait	;wreg free
  1328                           
  1329                           ;tasks.c: 107: PORTDbits.RD0 = 0;
  1330  00133A  9083               	bcf	3971,0,c	;volatile
  1331                           
  1332                           ;tasks.c: 109: cont--;
  1333  00133C  0601               	decf	_cont,f,c
  1334  00133E  A0D8               	btfss	status,0,c
  1335  001340  0602               	decf	_cont+1,f,c
  1336                           
  1337                           ;tasks.c: 111: PORTDbits.RD4 = 1;
  1338  001342  8883               	bsf	3971,4,c	;volatile
  1339                           
  1340                           ;tasks.c: 113: delay(5000);
  1341  001344  0E88               	movlw	136
  1342  001346  6EE6               	movwf	postinc1,c
  1343  001348  0E13               	movlw	19
  1344  00134A  6EE6               	movwf	postinc1,c
  1345  00134C  ECD6  F00B         	call	_delay	;wreg free
  1346                           
  1347                           ;tasks.c: 115: PORTDbits.RD4 = 0;
  1348  001350  9883               	bcf	3971,4,c	;volatile
  1349                           
  1350                           ;tasks.c: 117: sem_post(&spista);
  1351  001352  0E07               	movlw	low _spista
  1352  001354  6EE6               	movwf	postinc1,c
  1353  001356  0E00               	movlw	high _spista
  1354  001358  6EE6               	movwf	postinc1,c
  1355  00135A  ECB3  F007         	call	_sem_post	;wreg free
  1356                           
  1357                           ;tasks.c: 118: delay(400);
  1358  00135E  0E90               	movlw	144
  1359  001360  6EE6               	movwf	postinc1,c
  1360  001362  0E01               	movlw	1
  1361  001364  6EE6               	movwf	postinc1,c
  1362  001366  ECD6  F00B         	call	_delay	;wreg free
  1363  00136A  D7B6               	goto	l169
  1364  00136C                     __end_of_aviao1:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           intcon	equ	0xFF2
  1373                           postinc0	equ	0xFEE
  1374                           plusw0	equ	0xFEB
  1375                           fsr0h	equ	0xFEA
  1376                           fsr0l	equ	0xFE9
  1377                           wreg	equ	0xFE8
  1378                           postinc1	equ	0xFE6
  1379                           plusw1	equ	0xFE3
  1380                           fsr1h	equ	0xFE2
  1381                           fsr1l	equ	0xFE1
  1382                           indf2	equ	0xFDF
  1383                           postinc2	equ	0xFDE
  1384                           postdec2	equ	0xFDD
  1385                           plusw2	equ	0xFDB
  1386                           fsr2h	equ	0xFDA
  1387                           fsr2l	equ	0xFD9
  1388                           status	equ	0xFD8
  1389                           
  1390 ;; *************** function _sem_wait *****************
  1391 ;; Defined at:
  1392 ;;		line 17 in file "semaphore.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  s               2  [STACK] PTR struct sem
  1395 ;;		 -> spista(26), 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1  [STACK] void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1407 ;;      Params:         0       0       0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    7
  1414 ;; This function calls:
  1415 ;;		___lwmod
  1416 ;;		_dispatcher
  1417 ;; This function is called by:
  1418 ;;		_aviao1
  1419 ;;		_aviao2
  1420 ;;		_aviao3
  1421 ;; This function uses a reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text9
  1425  001092                     __ptext9:
  1426                           	opt stack 0
  1427  001092                     _sem_wait:
  1428                           	opt stack 19
  1429                           
  1430                           ;semaphore.c: 19: (INTCONbits.GIE = 0);
  1431                           
  1432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1433                           ;incstack = 0
  1434  001092  9EF2               	bcf	intcon,7,c	;volatile
  1435                           
  1436                           ;semaphore.c: 22: s->contador--;
  1437                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1438  001094  0EFE               	movlw	-2
  1439  001096  CFE3 FFD9          	movff	plusw1,fsr2l
  1440  00109A  0EFF               	movlw	-1
  1441  00109C  CFE3 FFDA          	movff	plusw1,fsr2h
  1442  0010A0  06DE               	decf	postinc2,f,c
  1443  0010A2  0E00               	movlw	0
  1444  0010A4  5ADD               	subwfb	postdec2,f,c
  1445                           
  1446                           ;semaphore.c: 23: if (s->contador < 0) {
  1447                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1448  0010A6  0EFE               	movlw	-2
  1449  0010A8  CFE3 FFD9          	movff	plusw1,fsr2l
  1450  0010AC  0EFF               	movlw	-1
  1451  0010AE  CFE3 FFDA          	movff	plusw1,fsr2h
  1452  0010B2  0E01               	movlw	1
  1453  0010B4  AEDB               	btfss	plusw2,7,c
  1454  0010B6  D057               	goto	l1779
  1455                           
  1456                           ;semaphore.c: 24: s->queue.s_queue[s->queue.s_queue_pos_in] = task_running;
  1457                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1458  0010B8  0EFE               	movlw	-2
  1459  0010BA  CFE3 F055          	movff	plusw1,btemp+1
  1460  0010BE  0EFF               	movlw	-1
  1461  0010C0  CFE3 F056          	movff	plusw1,btemp+2
  1462  0010C4  0E16               	movlw	22
  1463  0010C6  2455               	addwf	btemp+1,w,c
  1464  0010C8  6ED9               	movwf	fsr2l,c
  1465  0010CA  0E00               	movlw	0
  1466  0010CC  2056               	addwfc	btemp+2,w,c
  1467  0010CE  6EDA               	movwf	fsr2h,c
  1468  0010D0  CFDE F05E          	movff	postinc2,btemp+10
  1469  0010D4  CFDD F05F          	movff	postdec2,btemp+11
  1470  0010D8  90D8               	bcf	status,0,c
  1471  0010DA  345E               	rlcf	btemp+10,w,c
  1472  0010DC  6E55               	movwf	btemp+1,c
  1473  0010DE  345F               	rlcf	btemp+11,w,c
  1474  0010E0  6E56               	movwf	btemp+2,c
  1475                           
  1476                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1477  0010E2  0EFE               	movlw	-2
  1478  0010E4  50E3               	movf	plusw1,w,c
  1479  0010E6  2655               	addwf	btemp+1,f,c
  1480  0010E8  0EFF               	movlw	-1
  1481  0010EA  50E3               	movf	plusw1,w,c
  1482  0010EC  2256               	addwfc	btemp+2,f,c
  1483  0010EE  0E02               	movlw	2
  1484  0010F0  2455               	addwf	btemp+1,w,c
  1485  0010F2  6ED9               	movwf	fsr2l,c
  1486  0010F4  0E00               	movlw	0
  1487  0010F6  2056               	addwfc	btemp+2,w,c
  1488  0010F8  6EDA               	movwf	fsr2h,c
  1489  0010FA  C003  FFDE         	movff	_task_running,postinc2
  1490  0010FE  C004  FFDD         	movff	_task_running+1,postdec2
  1491                           
  1492                           ;semaphore.c: 25: s->queue.s_queue_pos_in = (s->queue.s_queue_pos_in + 1) % 10;
  1493  001102  0E0A               	movlw	10
  1494  001104  6EE6               	movwf	postinc1,c
  1495  001106  0E00               	movlw	0
  1496  001108  6EE6               	movwf	postinc1,c
  1497                           
  1498                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  1499  00110A  0EFC               	movlw	-4
  1500  00110C  CFE3 F055          	movff	plusw1,btemp+1
  1501  001110  0EFD               	movlw	-3
  1502  001112  CFE3 F056          	movff	plusw1,btemp+2
  1503  001116  0E16               	movlw	22
  1504  001118  2455               	addwf	btemp+1,w,c
  1505  00111A  6ED9               	movwf	fsr2l,c
  1506  00111C  0E00               	movlw	0
  1507  00111E  2056               	addwfc	btemp+2,w,c
  1508  001120  6EDA               	movwf	fsr2h,c
  1509  001122  CFDE F055          	movff	postinc2,btemp+1
  1510  001126  CFDD F056          	movff	postdec2,btemp+2
  1511  00112A  0E01               	movlw	1
  1512  00112C  2655               	addwf	btemp+1,f,c
  1513  00112E  0E00               	movlw	0
  1514  001130  2256               	addwfc	btemp+2,f,c
  1515  001132  C055  FFE6         	movff	btemp+1,postinc1
  1516  001136  C056  FFE6         	movff	btemp+2,postinc1
  1517  00113A  ECB7  F008         	call	___lwmod	;wreg free
  1518                           
  1519                           ;stkvar	sem_wait@s @ sp[(0)+-2]
  1520  00113E  0EFE               	movlw	-2
  1521  001140  CFE3 F05E          	movff	plusw1,btemp+10
  1522  001144  0EFF               	movlw	-1
  1523  001146  CFE3 F05F          	movff	plusw1,btemp+11
  1524  00114A  0E16               	movlw	22
  1525  00114C  245E               	addwf	btemp+10,w,c
  1526  00114E  6ED9               	movwf	fsr2l,c
  1527  001150  0E00               	movlw	0
  1528  001152  205F               	addwfc	btemp+11,w,c
  1529  001154  6EDA               	movwf	fsr2h,c
  1530  001156  C054  FFDE         	movff	btemp,postinc2
  1531  00115A  C055  FFDD         	movff	btemp+1,postdec2
  1532                           
  1533                           ;semaphore.c: 26: dispatcher(WAITING);
  1534  00115E  0E04               	movlw	4
  1535  001160  6EE6               	movwf	postinc1,c
  1536  001162  EC03  F003         	call	_dispatcher	;wreg free
  1537  001166                     l1779:
  1538                           
  1539                           ;semaphore.c: 27: }
  1540                           ;semaphore.c: 29: (INTCONbits.GIE = 1);
  1541  001166  8EF2               	bsf	intcon,7,c	;volatile
  1542                           
  1543                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  1544  001168  52E5               	movf	postdec1,f,c
  1545  00116A  52E5               	movf	postdec1,f,c
  1546  00116C  0012               	return		;funcret
  1547  00116E                     __end_of_sem_wait:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           prodh	equ	0xFF4
  1554                           prodl	equ	0xFF3
  1555                           intcon	equ	0xFF2
  1556                           postinc0	equ	0xFEE
  1557                           plusw0	equ	0xFEB
  1558                           fsr0h	equ	0xFEA
  1559                           fsr0l	equ	0xFE9
  1560                           wreg	equ	0xFE8
  1561                           postinc1	equ	0xFE6
  1562                           postdec1	equ	0xFE5
  1563                           plusw1	equ	0xFE3
  1564                           fsr1h	equ	0xFE2
  1565                           fsr1l	equ	0xFE1
  1566                           indf2	equ	0xFDF
  1567                           postinc2	equ	0xFDE
  1568                           postdec2	equ	0xFDD
  1569                           plusw2	equ	0xFDB
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function _sem_post *****************
  1575 ;; Defined at:
  1576 ;;		line 32 in file "semaphore.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  s               2  [STACK] PTR struct sem
  1579 ;;		 -> spista(26), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1  [STACK] void 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1591 ;;      Params:         0       0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    7
  1598 ;; This function calls:
  1599 ;;		___lwmod
  1600 ;;		___wmul
  1601 ;;		_dispatcher
  1602 ;; This function is called by:
  1603 ;;		_aviao1
  1604 ;;		_aviao2
  1605 ;;		_aviao3
  1606 ;; This function uses a reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text10
  1610  000F66                     __ptext10:
  1611                           	opt stack 0
  1612  000F66                     _sem_post:
  1613                           	opt stack 19
  1614                           
  1615                           ;semaphore.c: 34: (INTCONbits.GIE = 0);
  1616                           
  1617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1618                           ;incstack = 0
  1619  000F66  9EF2               	bcf	intcon,7,c	;volatile
  1620                           
  1621                           ;semaphore.c: 36: s->contador++;
  1622                           ;stkvar	sem_post@s @ sp[(0)+-2]
  1623  000F68  0EFE               	movlw	-2
  1624  000F6A  CFE3 FFD9          	movff	plusw1,fsr2l
  1625  000F6E  0EFF               	movlw	-1
  1626  000F70  CFE3 FFDA          	movff	plusw1,fsr2h
  1627  000F74  2ADE               	incf	postinc2,f,c
  1628  000F76  0E00               	movlw	0
  1629  000F78  22DD               	addwfc	postdec2,f,c
  1630                           
  1631                           ;semaphore.c: 37: if (s->contador <= 0) {
  1632                           ;stkvar	sem_post@s @ sp[(0)+-2]
  1633  000F7A  0EFE               	movlw	-2
  1634  000F7C  CFE3 FFD9          	movff	plusw1,fsr2l
  1635  000F80  0EFF               	movlw	-1
  1636  000F82  CFE3 FFDA          	movff	plusw1,fsr2h
  1637  000F86  0E01               	movlw	1
  1638  000F88  BEDB               	btfsc	plusw2,7,c
  1639  000F8A  D006               	goto	u59_20
  1640  000F8C  0E01               	movlw	1
  1641  000F8E  50DB               	movf	plusw2,w,c
  1642  000F90  E17C               	bnz	l1793
  1643  000F92  04DE               	decf	postinc2,w,c
  1644  000F94  B0D8               	btfsc	status,0,c
  1645  000F96  D079               	goto	l1793
  1646  000F98                     u59_20:
  1647                           
  1648                           ;semaphore.c: 38: F_APTOS[s->queue.s_queue[s->queue.s_queue_pos_out]].task_state = READY
      +                          ;
  1649  000F98  0E11               	movlw	17
  1650  000F9A  6EE6               	movwf	postinc1,c
  1651  000F9C  0E00               	movlw	0
  1652  000F9E  6EE6               	movwf	postinc1,c
  1653                           
  1654                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  1655  000FA0  0EFC               	movlw	-4
  1656  000FA2  CFE3 F055          	movff	plusw1,btemp+1
  1657  000FA6  0EFD               	movlw	-3
  1658  000FA8  CFE3 F056          	movff	plusw1,btemp+2
  1659  000FAC  0E18               	movlw	24
  1660  000FAE  2455               	addwf	btemp+1,w,c
  1661  000FB0  6ED9               	movwf	fsr2l,c
  1662  000FB2  0E00               	movlw	0
  1663  000FB4  2056               	addwfc	btemp+2,w,c
  1664  000FB6  6EDA               	movwf	fsr2h,c
  1665  000FB8  CFDE F05E          	movff	postinc2,btemp+10
  1666  000FBC  CFDD F05F          	movff	postdec2,btemp+11
  1667  000FC0  90D8               	bcf	status,0,c
  1668  000FC2  345E               	rlcf	btemp+10,w,c
  1669  000FC4  6E55               	movwf	btemp+1,c
  1670  000FC6  345F               	rlcf	btemp+11,w,c
  1671  000FC8  6E56               	movwf	btemp+2,c
  1672                           
  1673                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  1674  000FCA  0EFC               	movlw	-4
  1675  000FCC  50E3               	movf	plusw1,w,c
  1676  000FCE  2655               	addwf	btemp+1,f,c
  1677  000FD0  0EFD               	movlw	-3
  1678  000FD2  50E3               	movf	plusw1,w,c
  1679  000FD4  2256               	addwfc	btemp+2,f,c
  1680  000FD6  0E02               	movlw	2
  1681  000FD8  2455               	addwf	btemp+1,w,c
  1682  000FDA  6ED9               	movwf	fsr2l,c
  1683  000FDC  0E00               	movlw	0
  1684  000FDE  2056               	addwfc	btemp+2,w,c
  1685  000FE0  6EDA               	movwf	fsr2h,c
  1686  000FE2  CFDE F055          	movff	postinc2,btemp+1
  1687  000FE6  CFDD F056          	movff	postdec2,btemp+2
  1688  000FEA  C055  FFE6         	movff	btemp+1,postinc1
  1689  000FEE  C056  FFE6         	movff	btemp+2,postinc1
  1690  000FF2  EC01  F00A         	call	___wmul	;wreg free
  1691  000FF6  0E08               	movlw	low (_F_APTOS+8)
  1692  000FF8  2454               	addwf	btemp,w,c
  1693  000FFA  6ED9               	movwf	fsr2l,c
  1694  000FFC  0E01               	movlw	high (_F_APTOS+8)
  1695  000FFE  2055               	addwfc	btemp+1,w,c
  1696  001000  6EDA               	movwf	fsr2h,c
  1697  001002  0E01               	movlw	1
  1698  001004  6EDF               	movwf	indf2,c
  1699                           
  1700                           ;semaphore.c: 39: s->queue.s_queue_pos_out = (s->queue.s_queue_pos_out + 1) % s->queue.s
      +                          _queue_pos_in;
  1701                           ;stkvar	sem_post@s @ sp[(0)+-2]
  1702  001006  0EFE               	movlw	-2
  1703  001008  CFE3 F055          	movff	plusw1,btemp+1
  1704  00100C  0EFF               	movlw	-1
  1705  00100E  CFE3 F056          	movff	plusw1,btemp+2
  1706  001012  0E16               	movlw	22
  1707  001014  2455               	addwf	btemp+1,w,c
  1708  001016  6ED9               	movwf	fsr2l,c
  1709  001018  0E00               	movlw	0
  1710  00101A  2056               	addwfc	btemp+2,w,c
  1711  00101C  6EDA               	movwf	fsr2h,c
  1712  00101E  CFDE F055          	movff	postinc2,btemp+1
  1713  001022  CFDD F056          	movff	postdec2,btemp+2
  1714  001026  C055  FFE6         	movff	btemp+1,postinc1
  1715  00102A  C056  FFE6         	movff	btemp+2,postinc1
  1716                           
  1717                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  1718  00102E  0EFC               	movlw	-4
  1719  001030  CFE3 F055          	movff	plusw1,btemp+1
  1720  001034  0EFD               	movlw	-3
  1721  001036  CFE3 F056          	movff	plusw1,btemp+2
  1722  00103A  0E18               	movlw	24
  1723  00103C  2455               	addwf	btemp+1,w,c
  1724  00103E  6ED9               	movwf	fsr2l,c
  1725  001040  0E00               	movlw	0
  1726  001042  2056               	addwfc	btemp+2,w,c
  1727  001044  6EDA               	movwf	fsr2h,c
  1728  001046  CFDE F055          	movff	postinc2,btemp+1
  1729  00104A  CFDD F056          	movff	postdec2,btemp+2
  1730  00104E  0E01               	movlw	1
  1731  001050  2655               	addwf	btemp+1,f,c
  1732  001052  0E00               	movlw	0
  1733  001054  2256               	addwfc	btemp+2,f,c
  1734  001056  C055  FFE6         	movff	btemp+1,postinc1
  1735  00105A  C056  FFE6         	movff	btemp+2,postinc1
  1736  00105E  ECB7  F008         	call	___lwmod	;wreg free
  1737                           
  1738                           ;stkvar	sem_post@s @ sp[(0)+-2]
  1739  001062  0EFE               	movlw	-2
  1740  001064  CFE3 F05E          	movff	plusw1,btemp+10
  1741  001068  0EFF               	movlw	-1
  1742  00106A  CFE3 F05F          	movff	plusw1,btemp+11
  1743  00106E  0E18               	movlw	24
  1744  001070  245E               	addwf	btemp+10,w,c
  1745  001072  6ED9               	movwf	fsr2l,c
  1746  001074  0E00               	movlw	0
  1747  001076  205F               	addwfc	btemp+11,w,c
  1748  001078  6EDA               	movwf	fsr2h,c
  1749  00107A  C054  FFDE         	movff	btemp,postinc2
  1750  00107E  C055  FFDD         	movff	btemp+1,postdec2
  1751                           
  1752                           ;semaphore.c: 40: dispatcher(READY);
  1753  001082  0E01               	movlw	1
  1754  001084  6EE6               	movwf	postinc1,c
  1755  001086  EC03  F003         	call	_dispatcher	;wreg free
  1756  00108A                     l1793:
  1757                           
  1758                           ;semaphore.c: 41: }
  1759                           ;semaphore.c: 43: (INTCONbits.GIE = 1);
  1760  00108A  8EF2               	bsf	intcon,7,c	;volatile
  1761                           
  1762                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  1763  00108C  52E5               	movf	postdec1,f,c
  1764  00108E  52E5               	movf	postdec1,f,c
  1765  001090  0012               	return		;funcret
  1766  001092                     __end_of_sem_post:
  1767                           	opt stack 0
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           intcon	equ	0xFF2
  1775                           postinc0	equ	0xFEE
  1776                           plusw0	equ	0xFEB
  1777                           fsr0h	equ	0xFEA
  1778                           fsr0l	equ	0xFE9
  1779                           wreg	equ	0xFE8
  1780                           postinc1	equ	0xFE6
  1781                           postdec1	equ	0xFE5
  1782                           plusw1	equ	0xFE3
  1783                           fsr1h	equ	0xFE2
  1784                           fsr1l	equ	0xFE1
  1785                           indf2	equ	0xFDF
  1786                           postinc2	equ	0xFDE
  1787                           postdec2	equ	0xFDD
  1788                           plusw2	equ	0xFDB
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793 ;; *************** function _delay *****************
  1794 ;; Defined at:
  1795 ;;		line 62 in file "kernel.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  time_ms         2  [STACK] unsigned int 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1  [STACK] void 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1809 ;;      Params:         0       0       0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0
  1812 ;;      Totals:         0       0       0       0       0       0       0
  1813 ;;Total ram usage:        0 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    7
  1816 ;; This function calls:
  1817 ;;		___wmul
  1818 ;;		_dispatcher
  1819 ;; This function is called by:
  1820 ;;		_aviao1
  1821 ;;		_aviao2
  1822 ;;		_aviao3
  1823 ;;		_tluzes
  1824 ;;		_numerodeaviosG
  1825 ;;		_Lcd_Write_Char
  1826 ;; This function uses a reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text11
  1830  0017AC                     __ptext11:
  1831                           	opt stack 0
  1832  0017AC                     _delay:
  1833                           	opt stack 19
  1834                           
  1835                           ;kernel.c: 64: (INTCONbits.GIE = 0);
  1836                           
  1837                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1838                           ;incstack = 0
  1839  0017AC  9EF2               	bcf	intcon,7,c	;volatile
  1840                           
  1841                           ;kernel.c: 66: F_APTOS[task_running].delay_time = time_ms;
  1842  0017AE  0E11               	movlw	17
  1843  0017B0  6EE6               	movwf	postinc1,c
  1844  0017B2  0E00               	movlw	0
  1845  0017B4  6EE6               	movwf	postinc1,c
  1846  0017B6  C003  FFE6         	movff	_task_running,postinc1
  1847  0017BA  C004  FFE6         	movff	_task_running+1,postinc1
  1848  0017BE  EC01  F00A         	call	___wmul	;wreg free
  1849  0017C2  0E06               	movlw	low (_F_APTOS+6)
  1850  0017C4  2454               	addwf	btemp,w,c
  1851  0017C6  6EE9               	movwf	fsr0l,c
  1852  0017C8  0E01               	movlw	high (_F_APTOS+6)
  1853  0017CA  2055               	addwfc	btemp+1,w,c
  1854  0017CC  6EEA               	movwf	fsr0h,c
  1855                           
  1856                           ;stkvar	delay@time_ms @ sp[(0)+-2]
  1857  0017CE  50E1               	movf	fsr1l,w,c
  1858  0017D0  0FFE               	addlw	-2
  1859  0017D2  6ED9               	movwf	fsr2l,c
  1860  0017D4  50E2               	movf	fsr1h,w,c
  1861  0017D6  6EDA               	movwf	fsr2h,c
  1862  0017D8  0EFF               	movlw	255
  1863  0017DA  22DA               	addwfc	fsr2h,f,c
  1864  0017DC  CFDE FFEE          	movff	postinc2,postinc0
  1865  0017E0  CFDD FFED          	movff	postdec2,postdec0
  1866                           
  1867                           ;kernel.c: 67: dispatcher(SLEEPING);
  1868  0017E4  0E03               	movlw	3
  1869  0017E6  6EE6               	movwf	postinc1,c
  1870  0017E8  EC03  F003         	call	_dispatcher	;wreg free
  1871                           
  1872                           ;kernel.c: 69: (INTCONbits.GIE = 1);
  1873  0017EC  8EF2               	bsf	intcon,7,c	;volatile
  1874                           
  1875                           ; _delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  1876  0017EE  52E5               	movf	postdec1,f,c
  1877  0017F0  52E5               	movf	postdec1,f,c
  1878  0017F2  0012               	return		;funcret
  1879  0017F4                     __end_of_delay:
  1880                           	opt stack 0
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           prodh	equ	0xFF4
  1886                           prodl	equ	0xFF3
  1887                           intcon	equ	0xFF2
  1888                           postinc0	equ	0xFEE
  1889                           postdec0	equ	0xFED
  1890                           plusw0	equ	0xFEB
  1891                           fsr0h	equ	0xFEA
  1892                           fsr0l	equ	0xFE9
  1893                           wreg	equ	0xFE8
  1894                           postinc1	equ	0xFE6
  1895                           postdec1	equ	0xFE5
  1896                           plusw1	equ	0xFE3
  1897                           fsr1h	equ	0xFE2
  1898                           fsr1l	equ	0xFE1
  1899                           indf2	equ	0xFDF
  1900                           postinc2	equ	0xFDE
  1901                           postdec2	equ	0xFDD
  1902                           plusw2	equ	0xFDB
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _dispatcher *****************
  1908 ;; Defined at:
  1909 ;;		line 37 in file "kernel.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  state           1  [STACK] enum E3008
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1  [STACK] void 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1923 ;;      Params:         0       0       0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0
  1926 ;;      Totals:         0       0       0       0       0       0       0
  1927 ;;Total ram usage:        0 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    6
  1930 ;; This function calls:
  1931 ;;		___wmul
  1932 ;;		_rr_scheduler
  1933 ;; This function is called by:
  1934 ;;		_delay
  1935 ;;		_int_high
  1936 ;;		_sem_wait
  1937 ;;		_sem_post
  1938 ;;		_write_pipe
  1939 ;;		_read_pipe
  1940 ;; This function uses a reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text12
  1944  000606                     __ptext12:
  1945                           	opt stack 0
  1946  000606                     _dispatcher:
  1947                           	opt stack 15
  1948                           
  1949                           ;kernel.c: 39: (INTCONbits.GIE = 0);
  1950                           
  1951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  1952                           ;incstack = 0
  1953  000606  9EF2               	bcf	intcon,7,c	;volatile
  1954                           
  1955                           ;kernel.c: 42: F_APTOS[task_running].task_state = state; F_APTOS[task_running].BSR_regis
      +                          ter = BSR; F_APTOS[task_running].STATUS_register = STATUS; F_APTOS[task_running].WORK_re
      +                          gister = WREG; F_APTOS[task_running].task_stack.stack_size = 0; do { \F_APTOS[task_runni
      +                          n
  1956                           ;stkvar	dispatcher@state @ sp[(0)+-1]
  1957  000608  0E11               	movlw	17
  1958  00060A  6EE6               	movwf	postinc1,c
  1959  00060C  0E00               	movlw	0
  1960  00060E  6EE6               	movwf	postinc1,c
  1961  000610  C003  FFE6         	movff	_task_running,postinc1
  1962  000614  C004  FFE6         	movff	_task_running+1,postinc1
  1963  000618  EC01  F00A         	call	___wmul	;wreg free
  1964  00061C  0E08               	movlw	low (_F_APTOS+8)
  1965  00061E  2454               	addwf	btemp,w,c
  1966  000620  6ED9               	movwf	fsr2l,c
  1967  000622  0E01               	movlw	high (_F_APTOS+8)
  1968  000624  2055               	addwfc	btemp+1,w,c
  1969  000626  6EDA               	movwf	fsr2h,c
  1970  000628  0EFF               	movlw	-1
  1971  00062A  CFE3 FFDF          	movff	plusw1,indf2
  1972  00062E  0E11               	movlw	17
  1973  000630  6EE6               	movwf	postinc1,c
  1974  000632  0E00               	movlw	0
  1975  000634  6EE6               	movwf	postinc1,c
  1976  000636  C003  FFE6         	movff	_task_running,postinc1
  1977  00063A  C004  FFE6         	movff	_task_running+1,postinc1
  1978  00063E  EC01  F00A         	call	___wmul	;wreg free
  1979  000642  0E0E               	movlw	low (_F_APTOS+14)
  1980  000644  2454               	addwf	btemp,w,c
  1981  000646  6ED9               	movwf	fsr2l,c
  1982  000648  0E01               	movlw	high (_F_APTOS+14)
  1983  00064A  2055               	addwfc	btemp+1,w,c
  1984  00064C  6EDA               	movwf	fsr2h,c
  1985  00064E  CFE0 FFDF          	movff	bsr,indf2	;volatile
  1986  000652  0E11               	movlw	17
  1987  000654  6EE6               	movwf	postinc1,c
  1988  000656  0E00               	movlw	0
  1989  000658  6EE6               	movwf	postinc1,c
  1990  00065A  C003  FFE6         	movff	_task_running,postinc1
  1991  00065E  C004  FFE6         	movff	_task_running+1,postinc1
  1992  000662  EC01  F00A         	call	___wmul	;wreg free
  1993  000666  0E0F               	movlw	low (_F_APTOS+15)
  1994  000668  2454               	addwf	btemp,w,c
  1995  00066A  6ED9               	movwf	fsr2l,c
  1996  00066C  0E01               	movlw	high (_F_APTOS+15)
  1997  00066E  2055               	addwfc	btemp+1,w,c
  1998  000670  6EDA               	movwf	fsr2h,c
  1999  000672  CFD8 FFDF          	movff	status,indf2	;volatile
  2000  000676  0E11               	movlw	17
  2001  000678  6EE6               	movwf	postinc1,c
  2002  00067A  0E00               	movlw	0
  2003  00067C  6EE6               	movwf	postinc1,c
  2004  00067E  C003  FFE6         	movff	_task_running,postinc1
  2005  000682  C004  FFE6         	movff	_task_running+1,postinc1
  2006  000686  EC01  F00A         	call	___wmul	;wreg free
  2007  00068A  0E10               	movlw	low (_F_APTOS+16)
  2008  00068C  2454               	addwf	btemp,w,c
  2009  00068E  6ED9               	movwf	fsr2l,c
  2010  000690  0E01               	movlw	high (_F_APTOS+16)
  2011  000692  2055               	addwfc	btemp+1,w,c
  2012  000694  6EDA               	movwf	fsr2h,c
  2013  000696  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2014  00069A  0E11               	movlw	17
  2015  00069C  6EE6               	movwf	postinc1,c
  2016  00069E  0E00               	movlw	0
  2017  0006A0  6EE6               	movwf	postinc1,c
  2018  0006A2  C003  FFE6         	movff	_task_running,postinc1
  2019  0006A6  C004  FFE6         	movff	_task_running+1,postinc1
  2020  0006AA  EC01  F00A         	call	___wmul	;wreg free
  2021  0006AE  0E0C               	movlw	low (_F_APTOS+12)
  2022  0006B0  2454               	addwf	btemp,w,c
  2023  0006B2  6ED9               	movwf	fsr2l,c
  2024  0006B4  0E01               	movlw	high (_F_APTOS+12)
  2025  0006B6  2055               	addwfc	btemp+1,w,c
  2026  0006B8  6EDA               	movwf	fsr2h,c
  2027  0006BA  0E00               	movlw	0
  2028  0006BC  6EDE               	movwf	postinc2,c
  2029  0006BE  0E00               	movlw	0
  2030  0006C0  6EDD               	movwf	postdec2,c
  2031  0006C2                     l1703:
  2032  0006C2  0E03               	movlw	3
  2033  0006C4  6EE6               	movwf	postinc1,c
  2034  0006C6  0E00               	movlw	0
  2035  0006C8  6EE6               	movwf	postinc1,c
  2036  0006CA  0E11               	movlw	17
  2037  0006CC  6EE6               	movwf	postinc1,c
  2038  0006CE  0E00               	movlw	0
  2039  0006D0  6EE6               	movwf	postinc1,c
  2040  0006D2  C003  FFE6         	movff	_task_running,postinc1
  2041  0006D6  C004  FFE6         	movff	_task_running+1,postinc1
  2042  0006DA  EC01  F00A         	call	___wmul	;wreg free
  2043  0006DE  0E0C               	movlw	low (_F_APTOS+12)
  2044  0006E0  2454               	addwf	btemp,w,c
  2045  0006E2  6ED9               	movwf	fsr2l,c
  2046  0006E4  0E01               	movlw	high (_F_APTOS+12)
  2047  0006E6  2055               	addwfc	btemp+1,w,c
  2048  0006E8  6EDA               	movwf	fsr2h,c
  2049  0006EA  CFDE F055          	movff	postinc2,btemp+1
  2050  0006EE  CFDD F056          	movff	postdec2,btemp+2
  2051  0006F2  C055  FFE6         	movff	btemp+1,postinc1
  2052  0006F6  C056  FFE6         	movff	btemp+2,postinc1
  2053  0006FA  EC01  F00A         	call	___wmul	;wreg free
  2054  0006FE  C054  F05C         	movff	btemp,btemp+8
  2055  000702  C055  F05D         	movff	btemp+1,btemp+9
  2056  000706  0E11               	movlw	17
  2057  000708  6EE6               	movwf	postinc1,c
  2058  00070A  0E00               	movlw	0
  2059  00070C  6EE6               	movwf	postinc1,c
  2060  00070E  C003  FFE6         	movff	_task_running,postinc1
  2061  000712  C004  FFE6         	movff	_task_running+1,postinc1
  2062  000716  EC01  F00A         	call	___wmul	;wreg free
  2063  00071A  0E00               	movlw	low _F_APTOS
  2064  00071C  6E5E               	movwf	btemp+10,c
  2065  00071E  0E01               	movlw	high _F_APTOS
  2066  000720  6E5F               	movwf	btemp+11,c
  2067  000722  0E09               	movlw	9
  2068  000724  265E               	addwf	btemp+10,f,c
  2069  000726  0E00               	movlw	0
  2070  000728  225F               	addwfc	btemp+11,f,c
  2071  00072A  5054               	movf	btemp,w,c
  2072  00072C  265E               	addwf	btemp+10,f,c
  2073  00072E  5055               	movf	btemp+1,w,c
  2074  000730  225F               	addwfc	btemp+11,f,c
  2075  000732  505C               	movf	btemp+8,w,c
  2076  000734  245E               	addwf	btemp+10,w,c
  2077  000736  6ED9               	movwf	fsr2l,c
  2078  000738  505D               	movf	btemp+9,w,c
  2079  00073A  205F               	addwfc	btemp+11,w,c
  2080  00073C  6EDA               	movwf	fsr2h,c
  2081  00073E  CFFF FFDF          	movff	tosu,indf2	;volatile
  2082  000742  0E03               	movlw	3
  2083  000744  6EE6               	movwf	postinc1,c
  2084  000746  0E00               	movlw	0
  2085  000748  6EE6               	movwf	postinc1,c
  2086  00074A  0E11               	movlw	17
  2087  00074C  6EE6               	movwf	postinc1,c
  2088  00074E  0E00               	movlw	0
  2089  000750  6EE6               	movwf	postinc1,c
  2090  000752  C003  FFE6         	movff	_task_running,postinc1
  2091  000756  C004  FFE6         	movff	_task_running+1,postinc1
  2092  00075A  EC01  F00A         	call	___wmul	;wreg free
  2093  00075E  0E0C               	movlw	low (_F_APTOS+12)
  2094  000760  2454               	addwf	btemp,w,c
  2095  000762  6ED9               	movwf	fsr2l,c
  2096  000764  0E01               	movlw	high (_F_APTOS+12)
  2097  000766  2055               	addwfc	btemp+1,w,c
  2098  000768  6EDA               	movwf	fsr2h,c
  2099  00076A  CFDE F055          	movff	postinc2,btemp+1
  2100  00076E  CFDD F056          	movff	postdec2,btemp+2
  2101  000772  C055  FFE6         	movff	btemp+1,postinc1
  2102  000776  C056  FFE6         	movff	btemp+2,postinc1
  2103  00077A  EC01  F00A         	call	___wmul	;wreg free
  2104  00077E  C054  F05C         	movff	btemp,btemp+8
  2105  000782  C055  F05D         	movff	btemp+1,btemp+9
  2106  000786  0E11               	movlw	17
  2107  000788  6EE6               	movwf	postinc1,c
  2108  00078A  0E00               	movlw	0
  2109  00078C  6EE6               	movwf	postinc1,c
  2110  00078E  C003  FFE6         	movff	_task_running,postinc1
  2111  000792  C004  FFE6         	movff	_task_running+1,postinc1
  2112  000796  EC01  F00A         	call	___wmul	;wreg free
  2113  00079A  0E00               	movlw	low _F_APTOS
  2114  00079C  6E5E               	movwf	btemp+10,c
  2115  00079E  0E01               	movlw	high _F_APTOS
  2116  0007A0  6E5F               	movwf	btemp+11,c
  2117  0007A2  0E0A               	movlw	10
  2118  0007A4  265E               	addwf	btemp+10,f,c
  2119  0007A6  0E00               	movlw	0
  2120  0007A8  225F               	addwfc	btemp+11,f,c
  2121  0007AA  5054               	movf	btemp,w,c
  2122  0007AC  265E               	addwf	btemp+10,f,c
  2123  0007AE  5055               	movf	btemp+1,w,c
  2124  0007B0  225F               	addwfc	btemp+11,f,c
  2125  0007B2  505C               	movf	btemp+8,w,c
  2126  0007B4  245E               	addwf	btemp+10,w,c
  2127  0007B6  6ED9               	movwf	fsr2l,c
  2128  0007B8  505D               	movf	btemp+9,w,c
  2129  0007BA  205F               	addwfc	btemp+11,w,c
  2130  0007BC  6EDA               	movwf	fsr2h,c
  2131  0007BE  CFFD FFDF          	movff	tosl,indf2	;volatile
  2132  0007C2  0E03               	movlw	3
  2133  0007C4  6EE6               	movwf	postinc1,c
  2134  0007C6  0E00               	movlw	0
  2135  0007C8  6EE6               	movwf	postinc1,c
  2136  0007CA  0E11               	movlw	17
  2137  0007CC  6EE6               	movwf	postinc1,c
  2138  0007CE  0E00               	movlw	0
  2139  0007D0  6EE6               	movwf	postinc1,c
  2140  0007D2  C003  FFE6         	movff	_task_running,postinc1
  2141  0007D6  C004  FFE6         	movff	_task_running+1,postinc1
  2142  0007DA  EC01  F00A         	call	___wmul	;wreg free
  2143  0007DE  0E0C               	movlw	low (_F_APTOS+12)
  2144  0007E0  2454               	addwf	btemp,w,c
  2145  0007E2  6ED9               	movwf	fsr2l,c
  2146  0007E4  0E01               	movlw	high (_F_APTOS+12)
  2147  0007E6  2055               	addwfc	btemp+1,w,c
  2148  0007E8  6EDA               	movwf	fsr2h,c
  2149  0007EA  CFDE F055          	movff	postinc2,btemp+1
  2150  0007EE  CFDD F056          	movff	postdec2,btemp+2
  2151  0007F2  C055  FFE6         	movff	btemp+1,postinc1
  2152  0007F6  C056  FFE6         	movff	btemp+2,postinc1
  2153  0007FA  EC01  F00A         	call	___wmul	;wreg free
  2154  0007FE  C054  F05C         	movff	btemp,btemp+8
  2155  000802  C055  F05D         	movff	btemp+1,btemp+9
  2156  000806  0E11               	movlw	17
  2157  000808  6EE6               	movwf	postinc1,c
  2158  00080A  0E00               	movlw	0
  2159  00080C  6EE6               	movwf	postinc1,c
  2160  00080E  C003  FFE6         	movff	_task_running,postinc1
  2161  000812  C004  FFE6         	movff	_task_running+1,postinc1
  2162  000816  EC01  F00A         	call	___wmul	;wreg free
  2163  00081A  0E00               	movlw	low _F_APTOS
  2164  00081C  6E5E               	movwf	btemp+10,c
  2165  00081E  0E01               	movlw	high _F_APTOS
  2166  000820  6E5F               	movwf	btemp+11,c
  2167  000822  0E0B               	movlw	11
  2168  000824  265E               	addwf	btemp+10,f,c
  2169  000826  0E00               	movlw	0
  2170  000828  225F               	addwfc	btemp+11,f,c
  2171  00082A  5054               	movf	btemp,w,c
  2172  00082C  265E               	addwf	btemp+10,f,c
  2173  00082E  5055               	movf	btemp+1,w,c
  2174  000830  225F               	addwfc	btemp+11,f,c
  2175  000832  505C               	movf	btemp+8,w,c
  2176  000834  245E               	addwf	btemp+10,w,c
  2177  000836  6ED9               	movwf	fsr2l,c
  2178  000838  505D               	movf	btemp+9,w,c
  2179  00083A  205F               	addwfc	btemp+11,w,c
  2180  00083C  6EDA               	movwf	fsr2h,c
  2181  00083E  CFFE FFDF          	movff	tosh,indf2	;volatile
  2182  000842  0E11               	movlw	17
  2183  000844  6EE6               	movwf	postinc1,c
  2184  000846  0E00               	movlw	0
  2185  000848  6EE6               	movwf	postinc1,c
  2186  00084A  C003  FFE6         	movff	_task_running,postinc1
  2187  00084E  C004  FFE6         	movff	_task_running+1,postinc1
  2188  000852  EC01  F00A         	call	___wmul	;wreg free
  2189  000856  0E0C               	movlw	low (_F_APTOS+12)
  2190  000858  2454               	addwf	btemp,w,c
  2191  00085A  6ED9               	movwf	fsr2l,c
  2192  00085C  0E01               	movlw	high (_F_APTOS+12)
  2193  00085E  2055               	addwfc	btemp+1,w,c
  2194  000860  6EDA               	movwf	fsr2h,c
  2195  000862  2ADE               	incf	postinc2,f,c
  2196  000864  0E00               	movlw	0
  2197  000866  22DD               	addwfc	postdec2,f,c
  2198  000868  0006               	pop		;# 
  2199  00086A  50FC               	movf	stkptr,w,c	;volatile
  2200  00086C  A4D8               	btfss	status,2,c
  2201  00086E  D729               	goto	l1703
  2202                           
  2203                           ;kernel.c: 46: task_running = rr_scheduler();
  2204  000870  EC94  F00A         	call	_rr_scheduler	;wreg free
  2205  000874  C054  F003         	movff	btemp,_task_running
  2206  000878  C055  F004         	movff	btemp+1,_task_running+1
  2207                           
  2208                           ;kernel.c: 52: \STKPTR = 0;\if (F_APTOS[task_running].task_stack.stack_size == 0) {\asm(
      +                          "PUSH");\TOS = F_APTOS[task_running].task_f;\}\else {\BSR = F_APTOS[task_running].BSR_re
      +                          gister;\STATUS = F_APTOS[task_running].STATUS_register;\WREG = F_APTOS[task_running].WOR
      +                          K
  2209  00087C  6AFC               	clrf	stkptr,c	;volatile
  2210  00087E  0E11               	movlw	17
  2211  000880  6EE6               	movwf	postinc1,c
  2212  000882  0E00               	movlw	0
  2213  000884  6EE6               	movwf	postinc1,c
  2214  000886  C003  FFE6         	movff	_task_running,postinc1
  2215  00088A  C004  FFE6         	movff	_task_running+1,postinc1
  2216  00088E  EC01  F00A         	call	___wmul	;wreg free
  2217  000892  0E0C               	movlw	low (_F_APTOS+12)
  2218  000894  2454               	addwf	btemp,w,c
  2219  000896  6ED9               	movwf	fsr2l,c
  2220  000898  0E01               	movlw	high (_F_APTOS+12)
  2221  00089A  2055               	addwfc	btemp+1,w,c
  2222  00089C  6EDA               	movwf	fsr2h,c
  2223  00089E  50DE               	movf	postinc2,w,c
  2224  0008A0  10DE               	iorwf	postinc2,w,c
  2225  0008A2  A4D8               	btfss	status,2,c
  2226  0008A4  D01B               	goto	l1723
  2227  0008A6  0005               	push		;# 
  2228  0008A8  0E11               	movlw	17
  2229  0008AA  6EE6               	movwf	postinc1,c
  2230  0008AC  0E00               	movlw	0
  2231  0008AE  6EE6               	movwf	postinc1,c
  2232  0008B0  C003  FFE6         	movff	_task_running,postinc1
  2233  0008B4  C004  FFE6         	movff	_task_running+1,postinc1
  2234  0008B8  EC01  F00A         	call	___wmul	;wreg free
  2235  0008BC  0E04               	movlw	low (_F_APTOS+4)
  2236  0008BE  2454               	addwf	btemp,w,c
  2237  0008C0  6ED9               	movwf	fsr2l,c
  2238  0008C2  0E01               	movlw	high (_F_APTOS+4)
  2239  0008C4  2055               	addwfc	btemp+1,w,c
  2240  0008C6  6EDA               	movwf	fsr2h,c
  2241  0008C8  CFDE F055          	movff	postinc2,btemp+1
  2242  0008CC  CFDD F056          	movff	postdec2,btemp+2
  2243  0008D0  C055  FFFD         	movff	btemp+1,tosl	;volatile
  2244  0008D4  C056  FFFE         	movff	btemp+2,tosh	;volatile
  2245  0008D8  6AFF               	clrf	tosu,c	;volatile
  2246  0008DA  D11F               	goto	u57_20
  2247  0008DC                     l1723:
  2248  0008DC  0E11               	movlw	17
  2249  0008DE  6EE6               	movwf	postinc1,c
  2250  0008E0  0E00               	movlw	0
  2251  0008E2  6EE6               	movwf	postinc1,c
  2252  0008E4  C003  FFE6         	movff	_task_running,postinc1
  2253  0008E8  C004  FFE6         	movff	_task_running+1,postinc1
  2254  0008EC  EC01  F00A         	call	___wmul	;wreg free
  2255  0008F0  0E0E               	movlw	low (_F_APTOS+14)
  2256  0008F2  2454               	addwf	btemp,w,c
  2257  0008F4  6ED9               	movwf	fsr2l,c
  2258  0008F6  0E01               	movlw	high (_F_APTOS+14)
  2259  0008F8  2055               	addwfc	btemp+1,w,c
  2260  0008FA  6EDA               	movwf	fsr2h,c
  2261  0008FC  50DF               	movf	indf2,w,c
  2262  0008FE  6EE0               	movwf	bsr,c	;volatile
  2263  000900  0E11               	movlw	17
  2264  000902  6EE6               	movwf	postinc1,c
  2265  000904  0E00               	movlw	0
  2266  000906  6EE6               	movwf	postinc1,c
  2267  000908  C003  FFE6         	movff	_task_running,postinc1
  2268  00090C  C004  FFE6         	movff	_task_running+1,postinc1
  2269  000910  EC01  F00A         	call	___wmul	;wreg free
  2270  000914  0E0F               	movlw	low (_F_APTOS+15)
  2271  000916  2454               	addwf	btemp,w,c
  2272  000918  6ED9               	movwf	fsr2l,c
  2273  00091A  0E01               	movlw	high (_F_APTOS+15)
  2274  00091C  2055               	addwfc	btemp+1,w,c
  2275  00091E  6EDA               	movwf	fsr2h,c
  2276  000920  50DF               	movf	indf2,w,c
  2277  000922  6ED8               	movwf	status,c	;volatile
  2278  000924  0E11               	movlw	17
  2279  000926  6EE6               	movwf	postinc1,c
  2280  000928  0E00               	movlw	0
  2281  00092A  6EE6               	movwf	postinc1,c
  2282  00092C  C003  FFE6         	movff	_task_running,postinc1
  2283  000930  C004  FFE6         	movff	_task_running+1,postinc1
  2284  000934  EC01  F00A         	call	___wmul	;wreg free
  2285  000938  0E10               	movlw	low (_F_APTOS+16)
  2286  00093A  2454               	addwf	btemp,w,c
  2287  00093C  6ED9               	movwf	fsr2l,c
  2288  00093E  0E01               	movlw	high (_F_APTOS+16)
  2289  000940  2055               	addwfc	btemp+1,w,c
  2290  000942  6EDA               	movwf	fsr2h,c
  2291  000944  50DF               	movf	indf2,w,c
  2292  000946  6E5F               	movwf	btemp+11,c
  2293  000948  505F               	movf	btemp+11,w,c
  2294  00094A                     l80:
  2295  00094A  0005               	push		;# 
  2296  00094C  0E11               	movlw	17
  2297  00094E  6EE6               	movwf	postinc1,c
  2298  000950  0E00               	movlw	0
  2299  000952  6EE6               	movwf	postinc1,c
  2300  000954  C003  FFE6         	movff	_task_running,postinc1
  2301  000958  C004  FFE6         	movff	_task_running+1,postinc1
  2302  00095C  EC01  F00A         	call	___wmul	;wreg free
  2303  000960  0E0C               	movlw	low (_F_APTOS+12)
  2304  000962  2454               	addwf	btemp,w,c
  2305  000964  6ED9               	movwf	fsr2l,c
  2306  000966  0E01               	movlw	high (_F_APTOS+12)
  2307  000968  2055               	addwfc	btemp+1,w,c
  2308  00096A  6EDA               	movwf	fsr2h,c
  2309  00096C  06DE               	decf	postinc2,f,c
  2310  00096E  0E00               	movlw	0
  2311  000970  5ADD               	subwfb	postdec2,f,c
  2312  000972  0E03               	movlw	3
  2313  000974  6EE6               	movwf	postinc1,c
  2314  000976  0E00               	movlw	0
  2315  000978  6EE6               	movwf	postinc1,c
  2316  00097A  0E11               	movlw	17
  2317  00097C  6EE6               	movwf	postinc1,c
  2318  00097E  0E00               	movlw	0
  2319  000980  6EE6               	movwf	postinc1,c
  2320  000982  C003  FFE6         	movff	_task_running,postinc1
  2321  000986  C004  FFE6         	movff	_task_running+1,postinc1
  2322  00098A  EC01  F00A         	call	___wmul	;wreg free
  2323  00098E  0E0C               	movlw	low (_F_APTOS+12)
  2324  000990  2454               	addwf	btemp,w,c
  2325  000992  6ED9               	movwf	fsr2l,c
  2326  000994  0E01               	movlw	high (_F_APTOS+12)
  2327  000996  2055               	addwfc	btemp+1,w,c
  2328  000998  6EDA               	movwf	fsr2h,c
  2329  00099A  CFDE F055          	movff	postinc2,btemp+1
  2330  00099E  CFDD F056          	movff	postdec2,btemp+2
  2331  0009A2  C055  FFE6         	movff	btemp+1,postinc1
  2332  0009A6  C056  FFE6         	movff	btemp+2,postinc1
  2333  0009AA  EC01  F00A         	call	___wmul	;wreg free
  2334  0009AE  C054  F05C         	movff	btemp,btemp+8
  2335  0009B2  C055  F05D         	movff	btemp+1,btemp+9
  2336  0009B6  0E11               	movlw	17
  2337  0009B8  6EE6               	movwf	postinc1,c
  2338  0009BA  0E00               	movlw	0
  2339  0009BC  6EE6               	movwf	postinc1,c
  2340  0009BE  C003  FFE6         	movff	_task_running,postinc1
  2341  0009C2  C004  FFE6         	movff	_task_running+1,postinc1
  2342  0009C6  EC01  F00A         	call	___wmul	;wreg free
  2343  0009CA  0E00               	movlw	low _F_APTOS
  2344  0009CC  6E5E               	movwf	btemp+10,c
  2345  0009CE  0E01               	movlw	high _F_APTOS
  2346  0009D0  6E5F               	movwf	btemp+11,c
  2347  0009D2  0E09               	movlw	9
  2348  0009D4  265E               	addwf	btemp+10,f,c
  2349  0009D6  0E00               	movlw	0
  2350  0009D8  225F               	addwfc	btemp+11,f,c
  2351  0009DA  5054               	movf	btemp,w,c
  2352  0009DC  265E               	addwf	btemp+10,f,c
  2353  0009DE  5055               	movf	btemp+1,w,c
  2354  0009E0  225F               	addwfc	btemp+11,f,c
  2355  0009E2  505C               	movf	btemp+8,w,c
  2356  0009E4  245E               	addwf	btemp+10,w,c
  2357  0009E6  6ED9               	movwf	fsr2l,c
  2358  0009E8  505D               	movf	btemp+9,w,c
  2359  0009EA  205F               	addwfc	btemp+11,w,c
  2360  0009EC  6EDA               	movwf	fsr2h,c
  2361  0009EE  50DF               	movf	indf2,w,c
  2362  0009F0  6EFF               	movwf	tosu,c	;volatile
  2363  0009F2  0E03               	movlw	3
  2364  0009F4  6EE6               	movwf	postinc1,c
  2365  0009F6  0E00               	movlw	0
  2366  0009F8  6EE6               	movwf	postinc1,c
  2367  0009FA  0E11               	movlw	17
  2368  0009FC  6EE6               	movwf	postinc1,c
  2369  0009FE  0E00               	movlw	0
  2370  000A00  6EE6               	movwf	postinc1,c
  2371  000A02  C003  FFE6         	movff	_task_running,postinc1
  2372  000A06  C004  FFE6         	movff	_task_running+1,postinc1
  2373  000A0A  EC01  F00A         	call	___wmul	;wreg free
  2374  000A0E  0E0C               	movlw	low (_F_APTOS+12)
  2375  000A10  2454               	addwf	btemp,w,c
  2376  000A12  6ED9               	movwf	fsr2l,c
  2377  000A14  0E01               	movlw	high (_F_APTOS+12)
  2378  000A16  2055               	addwfc	btemp+1,w,c
  2379  000A18  6EDA               	movwf	fsr2h,c
  2380  000A1A  CFDE F055          	movff	postinc2,btemp+1
  2381  000A1E  CFDD F056          	movff	postdec2,btemp+2
  2382  000A22  C055  FFE6         	movff	btemp+1,postinc1
  2383  000A26  C056  FFE6         	movff	btemp+2,postinc1
  2384  000A2A  EC01  F00A         	call	___wmul	;wreg free
  2385  000A2E  C054  F05C         	movff	btemp,btemp+8
  2386  000A32  C055  F05D         	movff	btemp+1,btemp+9
  2387  000A36  0E11               	movlw	17
  2388  000A38  6EE6               	movwf	postinc1,c
  2389  000A3A  0E00               	movlw	0
  2390  000A3C  6EE6               	movwf	postinc1,c
  2391  000A3E  C003  FFE6         	movff	_task_running,postinc1
  2392  000A42  C004  FFE6         	movff	_task_running+1,postinc1
  2393  000A46  EC01  F00A         	call	___wmul	;wreg free
  2394  000A4A  0E00               	movlw	low _F_APTOS
  2395  000A4C  6E5E               	movwf	btemp+10,c
  2396  000A4E  0E01               	movlw	high _F_APTOS
  2397  000A50  6E5F               	movwf	btemp+11,c
  2398  000A52  0E0A               	movlw	10
  2399  000A54  265E               	addwf	btemp+10,f,c
  2400  000A56  0E00               	movlw	0
  2401  000A58  225F               	addwfc	btemp+11,f,c
  2402  000A5A  5054               	movf	btemp,w,c
  2403  000A5C  265E               	addwf	btemp+10,f,c
  2404  000A5E  5055               	movf	btemp+1,w,c
  2405  000A60  225F               	addwfc	btemp+11,f,c
  2406  000A62  505C               	movf	btemp+8,w,c
  2407  000A64  245E               	addwf	btemp+10,w,c
  2408  000A66  6ED9               	movwf	fsr2l,c
  2409  000A68  505D               	movf	btemp+9,w,c
  2410  000A6A  205F               	addwfc	btemp+11,w,c
  2411  000A6C  6EDA               	movwf	fsr2h,c
  2412  000A6E  50DF               	movf	indf2,w,c
  2413  000A70  6EFD               	movwf	tosl,c	;volatile
  2414  000A72  0E03               	movlw	3
  2415  000A74  6EE6               	movwf	postinc1,c
  2416  000A76  0E00               	movlw	0
  2417  000A78  6EE6               	movwf	postinc1,c
  2418  000A7A  0E11               	movlw	17
  2419  000A7C  6EE6               	movwf	postinc1,c
  2420  000A7E  0E00               	movlw	0
  2421  000A80  6EE6               	movwf	postinc1,c
  2422  000A82  C003  FFE6         	movff	_task_running,postinc1
  2423  000A86  C004  FFE6         	movff	_task_running+1,postinc1
  2424  000A8A  EC01  F00A         	call	___wmul	;wreg free
  2425  000A8E  0E0C               	movlw	low (_F_APTOS+12)
  2426  000A90  2454               	addwf	btemp,w,c
  2427  000A92  6ED9               	movwf	fsr2l,c
  2428  000A94  0E01               	movlw	high (_F_APTOS+12)
  2429  000A96  2055               	addwfc	btemp+1,w,c
  2430  000A98  6EDA               	movwf	fsr2h,c
  2431  000A9A  CFDE F055          	movff	postinc2,btemp+1
  2432  000A9E  CFDD F056          	movff	postdec2,btemp+2
  2433  000AA2  C055  FFE6         	movff	btemp+1,postinc1
  2434  000AA6  C056  FFE6         	movff	btemp+2,postinc1
  2435  000AAA  EC01  F00A         	call	___wmul	;wreg free
  2436  000AAE  C054  F05C         	movff	btemp,btemp+8
  2437  000AB2  C055  F05D         	movff	btemp+1,btemp+9
  2438  000AB6  0E11               	movlw	17
  2439  000AB8  6EE6               	movwf	postinc1,c
  2440  000ABA  0E00               	movlw	0
  2441  000ABC  6EE6               	movwf	postinc1,c
  2442  000ABE  C003  FFE6         	movff	_task_running,postinc1
  2443  000AC2  C004  FFE6         	movff	_task_running+1,postinc1
  2444  000AC6  EC01  F00A         	call	___wmul	;wreg free
  2445  000ACA  0E00               	movlw	low _F_APTOS
  2446  000ACC  6E5E               	movwf	btemp+10,c
  2447  000ACE  0E01               	movlw	high _F_APTOS
  2448  000AD0  6E5F               	movwf	btemp+11,c
  2449  000AD2  0E0B               	movlw	11
  2450  000AD4  265E               	addwf	btemp+10,f,c
  2451  000AD6  0E00               	movlw	0
  2452  000AD8  225F               	addwfc	btemp+11,f,c
  2453  000ADA  5054               	movf	btemp,w,c
  2454  000ADC  265E               	addwf	btemp+10,f,c
  2455  000ADE  5055               	movf	btemp+1,w,c
  2456  000AE0  225F               	addwfc	btemp+11,f,c
  2457  000AE2  505C               	movf	btemp+8,w,c
  2458  000AE4  245E               	addwf	btemp+10,w,c
  2459  000AE6  6ED9               	movwf	fsr2l,c
  2460  000AE8  505D               	movf	btemp+9,w,c
  2461  000AEA  205F               	addwfc	btemp+11,w,c
  2462  000AEC  6EDA               	movwf	fsr2h,c
  2463  000AEE  50DF               	movf	indf2,w,c
  2464  000AF0  6EFE               	movwf	tosh,c	;volatile
  2465  000AF2  0E11               	movlw	17
  2466  000AF4  6EE6               	movwf	postinc1,c
  2467  000AF6  0E00               	movlw	0
  2468  000AF8  6EE6               	movwf	postinc1,c
  2469  000AFA  C003  FFE6         	movff	_task_running,postinc1
  2470  000AFE  C004  FFE6         	movff	_task_running+1,postinc1
  2471  000B02  EC01  F00A         	call	___wmul	;wreg free
  2472  000B06  0E0C               	movlw	low (_F_APTOS+12)
  2473  000B08  2454               	addwf	btemp,w,c
  2474  000B0A  6ED9               	movwf	fsr2l,c
  2475  000B0C  0E01               	movlw	high (_F_APTOS+12)
  2476  000B0E  2055               	addwfc	btemp+1,w,c
  2477  000B10  6EDA               	movwf	fsr2h,c
  2478  000B12  50DE               	movf	postinc2,w,c
  2479  000B14  10DE               	iorwf	postinc2,w,c
  2480  000B16  A4D8               	btfss	status,2,c
  2481  000B18  D718               	goto	l80
  2482  000B1A                     u57_20:
  2483  000B1A  0E11               	movlw	17
  2484  000B1C  6EE6               	movwf	postinc1,c
  2485  000B1E  0E00               	movlw	0
  2486  000B20  6EE6               	movwf	postinc1,c
  2487  000B22  C003  FFE6         	movff	_task_running,postinc1
  2488  000B26  C004  FFE6         	movff	_task_running+1,postinc1
  2489  000B2A  EC01  F00A         	call	___wmul	;wreg free
  2490  000B2E  0E08               	movlw	low (_F_APTOS+8)
  2491  000B30  2454               	addwf	btemp,w,c
  2492  000B32  6ED9               	movwf	fsr2l,c
  2493  000B34  0E01               	movlw	high (_F_APTOS+8)
  2494  000B36  2055               	addwfc	btemp+1,w,c
  2495  000B38  6EDA               	movwf	fsr2h,c
  2496  000B3A  0E02               	movlw	2
  2497  000B3C  6EDF               	movwf	indf2,c
  2498  000B3E  8EF2               	bsf	intcon,7,c	;volatile
  2499                           
  2500                           ;kernel.c: 54: (INTCONbits.GIE = 1);
  2501  000B40  8EF2               	bsf	intcon,7,c	;volatile
  2502                           
  2503                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2504  000B42  52E5               	movf	postdec1,f,c
  2505  000B44  0012               	return		;funcret
  2506  000B46                     __end_of_dispatcher:
  2507                           	opt stack 0
  2508                           tosu	equ	0xFFF
  2509                           tosh	equ	0xFFE
  2510                           tosl	equ	0xFFD
  2511                           stkptr	equ	0xFFC
  2512                           tblptru	equ	0xFF8
  2513                           tblptrh	equ	0xFF7
  2514                           tblptrl	equ	0xFF6
  2515                           tablat	equ	0xFF5
  2516                           prodh	equ	0xFF4
  2517                           prodl	equ	0xFF3
  2518                           intcon	equ	0xFF2
  2519                           postinc0	equ	0xFEE
  2520                           postdec0	equ	0xFED
  2521                           plusw0	equ	0xFEB
  2522                           fsr0h	equ	0xFEA
  2523                           fsr0l	equ	0xFE9
  2524                           wreg	equ	0xFE8
  2525                           postinc1	equ	0xFE6
  2526                           postdec1	equ	0xFE5
  2527                           plusw1	equ	0xFE3
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           bsr	equ	0xFE0
  2531                           indf2	equ	0xFDF
  2532                           postinc2	equ	0xFDE
  2533                           postdec2	equ	0xFDD
  2534                           plusw2	equ	0xFDB
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _rr_scheduler *****************
  2540 ;; Defined at:
  2541 ;;		line 12 in file "scheduler.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  next_task_to    2  [STACK] unsigned int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2  [STACK] unsigned int 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2555 ;;      Params:         0       0       0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    5
  2562 ;; This function calls:
  2563 ;;		___lwmod
  2564 ;;		___wmul
  2565 ;; This function is called by:
  2566 ;;		_dispatcher
  2567 ;; This function uses a reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text13
  2571  001528                     __ptext13:
  2572                           	opt stack 0
  2573  001528                     _rr_scheduler:
  2574                           	opt stack 0
  2575                           
  2576                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  2577  001528  52E6               	movf	postinc1,f,c
  2578  00152A  52E6               	movf	postinc1,f,c
  2579                           
  2580                           ;scheduler.c: 14: u_int next_task_to_run = task_running;
  2581                           
  2582                           ;incstack = 0
  2583  00152C  C003  F055         	movff	_task_running,btemp+1
  2584  001530  C004  F056         	movff	_task_running+1,btemp+2
  2585                           
  2586                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-2)+0]
  2587  001534  0EFE               	movlw	-2
  2588  001536  C055  FFE3         	movff	btemp+1,plusw1
  2589  00153A  0EFF               	movlw	-1
  2590  00153C  C056  FFE3         	movff	btemp+2,plusw1
  2591  001540                     l1665:
  2592                           
  2593                           ;scheduler.c: 17: next_task_to_run = (next_task_to_run + 1) % tasks_installed;
  2594  001540  C005  FFE6         	movff	_tasks_installed,postinc1
  2595  001544  C006  FFE6         	movff	_tasks_installed+1,postinc1
  2596                           
  2597                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-4)+0]
  2598  001548  0EFC               	movlw	-4
  2599  00154A  50E3               	movf	plusw1,w,c
  2600  00154C  0F01               	addlw	1
  2601  00154E  6E55               	movwf	btemp+1,c
  2602  001550  0EFD               	movlw	-3
  2603  001552  CFE3 F056          	movff	plusw1,btemp+2
  2604  001556  0E00               	movlw	0
  2605  001558  2256               	addwfc	btemp+2,f,c
  2606  00155A  C055  FFE6         	movff	btemp+1,postinc1
  2607  00155E  C056  FFE6         	movff	btemp+2,postinc1
  2608  001562  ECB7  F008         	call	___lwmod	;wreg free
  2609                           
  2610                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-2)+0]
  2611  001566  0EFE               	movlw	-2
  2612  001568  C054  FFE3         	movff	btemp,plusw1
  2613  00156C  0EFF               	movlw	-1
  2614  00156E  C055  FFE3         	movff	btemp+1,plusw1
  2615                           
  2616                           ;scheduler.c: 18: } while (F_APTOS[next_task_to_run].task_state != READY);
  2617  001572  0E11               	movlw	17
  2618  001574  6EE6               	movwf	postinc1,c
  2619  001576  0E00               	movlw	0
  2620  001578  6EE6               	movwf	postinc1,c
  2621                           
  2622                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-4)+0]
  2623  00157A  0EFC               	movlw	-4
  2624  00157C  CFE3 FFE6          	movff	plusw1,postinc1
  2625  001580  CFE3 FFE6          	movff	plusw1,postinc1
  2626  001584  EC01  F00A         	call	___wmul	;wreg free
  2627  001588  0E08               	movlw	low (_F_APTOS+8)
  2628  00158A  2454               	addwf	btemp,w,c
  2629  00158C  6ED9               	movwf	fsr2l,c
  2630  00158E  0E01               	movlw	high (_F_APTOS+8)
  2631  001590  2055               	addwfc	btemp+1,w,c
  2632  001592  6EDA               	movwf	fsr2h,c
  2633  001594  04DE               	decf	postinc2,w,c
  2634  001596  A4D8               	btfss	status,2,c
  2635  001598  D7D3               	goto	l1665
  2636                           
  2637                           ;scheduler.c: 20: return next_task_to_run;
  2638                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-2)+0]
  2639  00159A  0EFE               	movlw	-2
  2640  00159C  CFE3 F054          	movff	plusw1,btemp
  2641  0015A0  0EFF               	movlw	-1
  2642  0015A2  CFE3 F055          	movff	plusw1,btemp+1
  2643                           
  2644                           ; _rr_scheduler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2645  0015A6  52E5               	movf	postdec1,f,c
  2646  0015A8  52E5               	movf	postdec1,f,c
  2647  0015AA  0012               	return		;funcret
  2648  0015AC                     __end_of_rr_scheduler:
  2649                           	opt stack 0
  2650                           tosu	equ	0xFFF
  2651                           tosh	equ	0xFFE
  2652                           tosl	equ	0xFFD
  2653                           stkptr	equ	0xFFC
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           intcon	equ	0xFF2
  2661                           postinc0	equ	0xFEE
  2662                           postdec0	equ	0xFED
  2663                           plusw0	equ	0xFEB
  2664                           fsr0h	equ	0xFEA
  2665                           fsr0l	equ	0xFE9
  2666                           wreg	equ	0xFE8
  2667                           postinc1	equ	0xFE6
  2668                           postdec1	equ	0xFE5
  2669                           plusw1	equ	0xFE3
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           bsr	equ	0xFE0
  2673                           indf2	equ	0xFDF
  2674                           postinc2	equ	0xFDE
  2675                           postdec2	equ	0xFDD
  2676                           plusw2	equ	0xFDB
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8
  2680                           
  2681 ;; *************** function ___lwmod *****************
  2682 ;; Defined at:
  2683 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  dividend        2  [STACK] unsigned int 
  2686 ;;  divisor         2  [STACK] unsigned int 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  counter         1  [STACK] unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  2  [STACK] unsigned int 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2698 ;;      Params:         0       0       0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    4
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_rr_scheduler
  2709 ;;		_sem_wait
  2710 ;;		_sem_post
  2711 ;; This function uses a reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text14
  2715  00116E                     __ptext14:
  2716                           	opt stack 0
  2717  00116E                     ___lwmod:
  2718                           	opt stack 0
  2719                           
  2720                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  2721  00116E  52E6               	movf	postinc1,f,c
  2722                           
  2723                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2724                           
  2725                           ;incstack = 0
  2726  001170  0EFB               	movlw	-5
  2727  001172  CFE3 F054          	movff	plusw1,btemp
  2728  001176  0EFC               	movlw	-4
  2729  001178  50E3               	movf	plusw1,w,c
  2730  00117A  1054               	iorwf	btemp,w,c
  2731  00117C  B4D8               	btfsc	status,2,c
  2732  00117E  D04A               	goto	u51_20
  2733                           
  2734                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  2735  001180  0EFF               	movlw	-1
  2736  001182  6AE3               	clrf	plusw1,c
  2737  001184  D010               	goto	L1
  2738  001186                     l1615:
  2739                           
  2740                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2741  001186  0EFB               	movlw	-5
  2742  001188  50E3               	movf	plusw1,w,c
  2743  00118A  90D8               	bcf	status,0,c
  2744  00118C  34E8               	rlcf	wreg,w,c
  2745  00118E  6E54               	movwf	btemp,c
  2746  001190  0EFB               	movlw	-5
  2747  001192  C054  FFE3         	movff	btemp,plusw1
  2748  001196  0EFC               	movlw	-4
  2749  001198  50E3               	movf	plusw1,w,c
  2750  00119A  34E8               	rlcf	wreg,w,c
  2751  00119C  6E54               	movwf	btemp,c
  2752  00119E  0EFC               	movlw	-4
  2753  0011A0  C054  FFE3         	movff	btemp,plusw1
  2754                           
  2755                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  2756  0011A4  0EFF               	movlw	-1
  2757  0011A6                     L1:
  2758  0011A6  2AE3               	incf	plusw1,f,c
  2759                           
  2760                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2761  0011A8  0EFC               	movlw	-4
  2762  0011AA  AEE3               	btfss	plusw1,7,c
  2763  0011AC  D7EC               	goto	l1615
  2764  0011AE                     u49_20:
  2765                           
  2766                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2767  0011AE  0EFB               	movlw	-5
  2768  0011B0  CFE3 F055          	movff	plusw1,btemp+1
  2769  0011B4  0EFC               	movlw	-4
  2770  0011B6  CFE3 F056          	movff	plusw1,btemp+2
  2771                           
  2772                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  2773  0011BA  0EFD               	movlw	-3
  2774  0011BC  CFE3 F05E          	movff	plusw1,btemp+10
  2775  0011C0  0EFE               	movlw	-2
  2776  0011C2  CFE3 F05F          	movff	plusw1,btemp+11
  2777  0011C6  5055               	movf	btemp+1,w,c
  2778  0011C8  5C5E               	subwf	btemp+10,w,c
  2779  0011CA  5056               	movf	btemp+2,w,c
  2780  0011CC  585F               	subwfb	btemp+11,w,c
  2781  0011CE  A0D8               	btfss	status,0,c
  2782  0011D0  D012               	goto	l1625
  2783                           
  2784                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2785                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  2786  0011D2  0EFD               	movlw	-3
  2787  0011D4  50E3               	movf	plusw1,w,c
  2788  0011D6  6E54               	movwf	btemp,c
  2789  0011D8  0EFB               	movlw	-5
  2790  0011DA  50E3               	movf	plusw1,w,c
  2791  0011DC  5E54               	subwf	btemp,f,c
  2792  0011DE  0EFD               	movlw	-3
  2793  0011E0  C054  FFE3         	movff	btemp,plusw1
  2794  0011E4  0EFE               	movlw	-2
  2795  0011E6  50E3               	movf	plusw1,w,c
  2796  0011E8  6E54               	movwf	btemp,c
  2797  0011EA  0EFC               	movlw	-4
  2798  0011EC  50E3               	movf	plusw1,w,c
  2799  0011EE  5A54               	subwfb	btemp,f,c
  2800  0011F0  0EFE               	movlw	-2
  2801  0011F2  C054  FFE3         	movff	btemp,plusw1
  2802  0011F6                     l1625:
  2803                           
  2804                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  2805  0011F6  90D8               	bcf	status,0,c
  2806  0011F8  0EFC               	movlw	-4
  2807  0011FA  32E3               	rrcf	plusw1,f,c
  2808  0011FC  0EFB               	movlw	-5
  2809  0011FE  32E3               	rrcf	plusw1,f,c
  2810                           
  2811                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  2812  001200  0EFF               	movlw	-1
  2813  001202  50E3               	movf	plusw1,w,c
  2814  001204  6E54               	movwf	btemp,c
  2815  001206  0E01               	movlw	1
  2816  001208  5E54               	subwf	btemp,f,c
  2817  00120A  0EFF               	movlw	-1
  2818  00120C  C054  FFE3         	movff	btemp,plusw1
  2819  001210  A4D8               	btfss	status,2,c
  2820  001212  D7CD               	goto	u49_20
  2821  001214                     u51_20:
  2822                           
  2823                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  2824  001214  0EFD               	movlw	-3
  2825  001216  CFE3 F054          	movff	plusw1,btemp
  2826  00121A  0EFE               	movlw	-2
  2827  00121C  CFE3 F055          	movff	plusw1,btemp+1
  2828                           
  2829                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2830  001220  0EFB               	movlw	251
  2831  001222  26E1               	addwf	fsr1l,f,c
  2832  001224  0EFF               	movlw	255
  2833  001226  22E2               	addwfc	fsr1h,f,c
  2834  001228  0012               	return		;funcret
  2835  00122A                     __end_of___lwmod:
  2836                           	opt stack 0
  2837                           tosu	equ	0xFFF
  2838                           tosh	equ	0xFFE
  2839                           tosl	equ	0xFFD
  2840                           stkptr	equ	0xFFC
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           prodh	equ	0xFF4
  2846                           prodl	equ	0xFF3
  2847                           intcon	equ	0xFF2
  2848                           postinc0	equ	0xFEE
  2849                           postdec0	equ	0xFED
  2850                           plusw0	equ	0xFEB
  2851                           fsr0h	equ	0xFEA
  2852                           fsr0l	equ	0xFE9
  2853                           wreg	equ	0xFE8
  2854                           postinc1	equ	0xFE6
  2855                           postdec1	equ	0xFE5
  2856                           plusw1	equ	0xFE3
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           bsr	equ	0xFE0
  2860                           indf2	equ	0xFDF
  2861                           postinc2	equ	0xFDE
  2862                           postdec2	equ	0xFDD
  2863                           plusw2	equ	0xFDB
  2864                           fsr2h	equ	0xFDA
  2865                           fsr2l	equ	0xFD9
  2866                           status	equ	0xFD8
  2867                           
  2868 ;; *************** function _aviao2 *****************
  2869 ;; Defined at:
  2870 ;;		line 126 in file "tasks.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1  [STACK] void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2884 ;;      Params:         0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    8
  2891 ;; This function calls:
  2892 ;;		_delay
  2893 ;;		_sem_post
  2894 ;;		_sem_wait
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text15
  2901  001498                     __ptext15:
  2902                           	opt stack 0
  2903  001498                     _aviao2:
  2904                           	opt stack 19
  2905                           
  2906                           ;tasks.c: 128: PORTDbits.RD5 = 0;
  2907                           
  2908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  2909                           ;incstack = 0
  2910  001498  9A83               	bcf	3971,5,c	;volatile
  2911                           
  2912                           ;tasks.c: 129: PORTDbits.RD6 = 0;
  2913  00149A  9C83               	bcf	3971,6,c	;volatile
  2914                           
  2915                           ;tasks.c: 130: PORTDbits.RD4 = 0;
  2916  00149C  9883               	bcf	3971,4,c	;volatile
  2917                           
  2918                           ;tasks.c: 131: PORTDbits.RD1 = 0;
  2919  00149E  9283               	bcf	3971,1,c	;volatile
  2920  0014A0                     l175:
  2921                           
  2922                           ;tasks.c: 134: {
  2923                           ;tasks.c: 136: PORTDbits.RD5 = 1;
  2924  0014A0  8A83               	bsf	3971,5,c	;volatile
  2925                           
  2926                           ;tasks.c: 138: delay(6000);
  2927  0014A2  0E70               	movlw	112
  2928  0014A4  6EE6               	movwf	postinc1,c
  2929  0014A6  0E17               	movlw	23
  2930  0014A8  6EE6               	movwf	postinc1,c
  2931  0014AA  ECD6  F00B         	call	_delay	;wreg free
  2932                           
  2933                           ;tasks.c: 140: sem_wait(&spista);
  2934  0014AE  0E07               	movlw	low _spista
  2935  0014B0  6EE6               	movwf	postinc1,c
  2936  0014B2  0E00               	movlw	high _spista
  2937  0014B4  6EE6               	movwf	postinc1,c
  2938  0014B6  EC49  F008         	call	_sem_wait	;wreg free
  2939                           
  2940                           ;tasks.c: 142: PORTDbits.RD5 = 0;
  2941  0014BA  9A83               	bcf	3971,5,c	;volatile
  2942                           
  2943                           ;tasks.c: 144: PORTDbits.RD6 = 1;
  2944  0014BC  8C83               	bsf	3971,6,c	;volatile
  2945                           
  2946                           ;tasks.c: 146: delay(6000);
  2947  0014BE  0E70               	movlw	112
  2948  0014C0  6EE6               	movwf	postinc1,c
  2949  0014C2  0E17               	movlw	23
  2950  0014C4  6EE6               	movwf	postinc1,c
  2951  0014C6  ECD6  F00B         	call	_delay	;wreg free
  2952                           
  2953                           ;tasks.c: 149: PORTDbits.RD6 = 0;
  2954  0014CA  9C83               	bcf	3971,6,c	;volatile
  2955                           
  2956                           ;tasks.c: 152: sem_post(&spista);
  2957  0014CC  0E07               	movlw	low _spista
  2958  0014CE  6EE6               	movwf	postinc1,c
  2959  0014D0  0E00               	movlw	high _spista
  2960  0014D2  6EE6               	movwf	postinc1,c
  2961  0014D4  ECB3  F007         	call	_sem_post	;wreg free
  2962                           
  2963                           ;tasks.c: 153: delay(300);
  2964  0014D8  0E2C               	movlw	44
  2965  0014DA  6EE6               	movwf	postinc1,c
  2966  0014DC  0E01               	movlw	1
  2967  0014DE  6EE6               	movwf	postinc1,c
  2968  0014E0  ECD6  F00B         	call	_delay	;wreg free
  2969                           
  2970                           ;tasks.c: 155: PORTDbits.RD1 = 1;
  2971  0014E4  8283               	bsf	3971,1,c	;volatile
  2972                           
  2973                           ;tasks.c: 156: cont++;
  2974  0014E6  4A01               	infsnz	_cont,f,c
  2975  0014E8  2A02               	incf	_cont+1,f,c
  2976                           
  2977                           ;tasks.c: 157: delay(6000);
  2978  0014EA  0E70               	movlw	112
  2979  0014EC  6EE6               	movwf	postinc1,c
  2980  0014EE  0E17               	movlw	23
  2981  0014F0  6EE6               	movwf	postinc1,c
  2982  0014F2  ECD6  F00B         	call	_delay	;wreg free
  2983                           
  2984                           ;tasks.c: 159: sem_wait(&spista);
  2985  0014F6  0E07               	movlw	low _spista
  2986  0014F8  6EE6               	movwf	postinc1,c
  2987  0014FA  0E00               	movlw	high _spista
  2988  0014FC  6EE6               	movwf	postinc1,c
  2989  0014FE  EC49  F008         	call	_sem_wait	;wreg free
  2990                           
  2991                           ;tasks.c: 161: PORTDbits.RD1 = 0;
  2992  001502  9283               	bcf	3971,1,c	;volatile
  2993                           
  2994                           ;tasks.c: 162: cont--;
  2995  001504  0601               	decf	_cont,f,c
  2996  001506  A0D8               	btfss	status,0,c
  2997  001508  0602               	decf	_cont+1,f,c
  2998                           
  2999                           ;tasks.c: 164: PORTDbits.RD4 = 1;
  3000  00150A  8883               	bsf	3971,4,c	;volatile
  3001                           
  3002                           ;tasks.c: 166: delay(6000);
  3003  00150C  0E70               	movlw	112
  3004  00150E  6EE6               	movwf	postinc1,c
  3005  001510  0E17               	movlw	23
  3006  001512  6EE6               	movwf	postinc1,c
  3007  001514  ECD6  F00B         	call	_delay	;wreg free
  3008                           
  3009                           ;tasks.c: 168: PORTDbits.RD4 = 0;
  3010  001518  9883               	bcf	3971,4,c	;volatile
  3011                           
  3012                           ;tasks.c: 170: sem_post(&spista);
  3013  00151A  0E07               	movlw	low _spista
  3014  00151C  6EE6               	movwf	postinc1,c
  3015  00151E  0E00               	movlw	high _spista
  3016  001520  6EE6               	movwf	postinc1,c
  3017  001522  ECB3  F007         	call	_sem_post	;wreg free
  3018  001526  D7BC               	goto	l175
  3019  001528                     __end_of_aviao2:
  3020                           	opt stack 0
  3021                           tosu	equ	0xFFF
  3022                           tosh	equ	0xFFE
  3023                           tosl	equ	0xFFD
  3024                           stkptr	equ	0xFFC
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           prodh	equ	0xFF4
  3030                           prodl	equ	0xFF3
  3031                           intcon	equ	0xFF2
  3032                           postinc0	equ	0xFEE
  3033                           postdec0	equ	0xFED
  3034                           plusw0	equ	0xFEB
  3035                           fsr0h	equ	0xFEA
  3036                           fsr0l	equ	0xFE9
  3037                           wreg	equ	0xFE8
  3038                           postinc1	equ	0xFE6
  3039                           postdec1	equ	0xFE5
  3040                           plusw1	equ	0xFE3
  3041                           fsr1h	equ	0xFE2
  3042                           fsr1l	equ	0xFE1
  3043                           bsr	equ	0xFE0
  3044                           indf2	equ	0xFDF
  3045                           postinc2	equ	0xFDE
  3046                           postdec2	equ	0xFDD
  3047                           plusw2	equ	0xFDB
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function _tluzesescreve *****************
  3053 ;; Defined at:
  3054 ;;		line 259 in file "tasks.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1  [STACK] void 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3068 ;;      Params:         0       0       0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    8
  3075 ;; This function calls:
  3076 ;;		_create_pipe
  3077 ;;		_write_pipe
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text16
  3084  00186A                     __ptext16:
  3085                           	opt stack 0
  3086  00186A                     _tluzesescreve:
  3087                           	opt stack 19
  3088                           
  3089                           ;tasks.c: 262: create_pipe(&pipeluzes);
  3090                           
  3091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3092                           ;incstack = 0
  3093  00186A  0E21               	movlw	low _pipeluzes
  3094  00186C  6EE6               	movwf	postinc1,c
  3095  00186E  0E00               	movlw	high _pipeluzes
  3096  001870  6EE6               	movwf	postinc1,c
  3097  001872  EC15  F009         	call	_create_pipe	;wreg free
  3098  001876                     l2031:
  3099                           
  3100                           ;tasks.c: 265: {
  3101                           ;tasks.c: 267: write_pipe(&pipeluzes, 'l');
  3102  001876  0E6C               	movlw	108
  3103  001878  6EE6               	movwf	postinc1,c
  3104  00187A  0E21               	movlw	low _pipeluzes
  3105  00187C  6EE6               	movwf	postinc1,c
  3106  00187E  0E00               	movlw	high _pipeluzes
  3107  001880  6EE6               	movwf	postinc1,c
  3108  001882  EC09  F007         	call	_write_pipe	;wreg free
  3109  001886  D7F7               	goto	l2031
  3110  001888                     __end_of_tluzesescreve:
  3111                           	opt stack 0
  3112                           tosu	equ	0xFFF
  3113                           tosh	equ	0xFFE
  3114                           tosl	equ	0xFFD
  3115                           stkptr	equ	0xFFC
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           intcon	equ	0xFF2
  3123                           postinc0	equ	0xFEE
  3124                           postdec0	equ	0xFED
  3125                           plusw0	equ	0xFEB
  3126                           fsr0h	equ	0xFEA
  3127                           fsr0l	equ	0xFE9
  3128                           wreg	equ	0xFE8
  3129                           postinc1	equ	0xFE6
  3130                           postdec1	equ	0xFE5
  3131                           plusw1	equ	0xFE3
  3132                           fsr1h	equ	0xFE2
  3133                           fsr1l	equ	0xFE1
  3134                           bsr	equ	0xFE0
  3135                           indf2	equ	0xFDF
  3136                           postinc2	equ	0xFDE
  3137                           postdec2	equ	0xFDD
  3138                           plusw2	equ	0xFDB
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _write_pipe *****************
  3144 ;; Defined at:
  3145 ;;		line 22 in file "pipe.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  pipe            2  [STACK] PTR struct pipe
  3148 ;;		 -> pipeluzes(11), 
  3149 ;;  data            1  [STACK] unsigned char 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1  [STACK] void 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3161 ;;      Params:         0       0       0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0
  3164 ;;      Totals:         0       0       0       0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    7
  3168 ;; This function calls:
  3169 ;;		___wmul
  3170 ;;		_dispatcher
  3171 ;; This function is called by:
  3172 ;;		_tluzesescreve
  3173 ;; This function uses a reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text17
  3177  000E12                     __ptext17:
  3178                           	opt stack 0
  3179  000E12                     _write_pipe:
  3180                           	opt stack 19
  3181                           
  3182                           ;pipe.c: 24: (INTCONbits.GIE = 0);
  3183                           
  3184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
  3185                           ;incstack = 0
  3186  000E12  9EF2               	bcf	intcon,7,c	;volatile
  3187                           
  3188                           ;pipe.c: 27: if (pipe->pipe_itens == 1) {
  3189                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3190  000E14  0EFE               	movlw	-2
  3191  000E16  CFE3 F055          	movff	plusw1,btemp+1
  3192  000E1A  0EFF               	movlw	-1
  3193  000E1C  CFE3 F056          	movff	plusw1,btemp+2
  3194  000E20  0E05               	movlw	5
  3195  000E22  2455               	addwf	btemp+1,w,c
  3196  000E24  6ED9               	movwf	fsr2l,c
  3197  000E26  0E00               	movlw	0
  3198  000E28  2056               	addwfc	btemp+2,w,c
  3199  000E2A  6EDA               	movwf	fsr2h,c
  3200  000E2C  04DE               	decf	postinc2,w,c
  3201  000E2E  10DE               	iorwf	postinc2,w,c
  3202  000E30  A4D8               	btfss	status,2,c
  3203  000E32  D014               	goto	l1829
  3204                           
  3205                           ;pipe.c: 29: pipe->pos_bloqued_write = task_running;
  3206                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3207  000E34  0EFE               	movlw	-2
  3208  000E36  CFE3 F055          	movff	plusw1,btemp+1
  3209  000E3A  0EFF               	movlw	-1
  3210  000E3C  CFE3 F056          	movff	plusw1,btemp+2
  3211  000E40  0E09               	movlw	9
  3212  000E42  2455               	addwf	btemp+1,w,c
  3213  000E44  6ED9               	movwf	fsr2l,c
  3214  000E46  0E00               	movlw	0
  3215  000E48  2056               	addwfc	btemp+2,w,c
  3216  000E4A  6EDA               	movwf	fsr2h,c
  3217  000E4C  C003  FFDE         	movff	_task_running,postinc2
  3218  000E50  C004  FFDD         	movff	_task_running+1,postdec2
  3219                           
  3220                           ;pipe.c: 31: dispatcher(WAITING_PIPE);
  3221  000E54  0E05               	movlw	5
  3222  000E56  6EE6               	movwf	postinc1,c
  3223  000E58  EC03  F003         	call	_dispatcher	;wreg free
  3224  000E5C                     l1829:
  3225                           
  3226                           ;pipe.c: 32: }
  3227                           ;pipe.c: 34: pipe->pipe_queue[pipe->pos_write_pipe] = data;
  3228                           ;stkvar	write_pipe@data @ sp[(0)+-3]
  3229                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3230  000E5C  0EFE               	movlw	-2
  3231  000E5E  CFE3 F055          	movff	plusw1,btemp+1
  3232  000E62  0EFF               	movlw	-1
  3233  000E64  CFE3 F056          	movff	plusw1,btemp+2
  3234  000E68  0E03               	movlw	3
  3235  000E6A  2455               	addwf	btemp+1,w,c
  3236  000E6C  6ED9               	movwf	fsr2l,c
  3237  000E6E  0E00               	movlw	0
  3238  000E70  2056               	addwfc	btemp+2,w,c
  3239  000E72  6EDA               	movwf	fsr2h,c
  3240  000E74  CFDE F055          	movff	postinc2,btemp+1
  3241  000E78  CFDD F056          	movff	postdec2,btemp+2
  3242                           
  3243                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3244  000E7C  0EFE               	movlw	-2
  3245  000E7E  CFE3 F05E          	movff	plusw1,btemp+10
  3246  000E82  0EFF               	movlw	-1
  3247  000E84  CFE3 F05F          	movff	plusw1,btemp+11
  3248  000E88  5055               	movf	btemp+1,w,c
  3249  000E8A  245E               	addwf	btemp+10,w,c
  3250  000E8C  6ED9               	movwf	fsr2l,c
  3251  000E8E  5056               	movf	btemp+2,w,c
  3252  000E90  205F               	addwfc	btemp+11,w,c
  3253  000E92  6EDA               	movwf	fsr2h,c
  3254  000E94  0EFD               	movlw	-3
  3255  000E96  CFE3 FFDF          	movff	plusw1,indf2
  3256                           
  3257                           ;pipe.c: 35: pipe->pos_write_pipe = (pipe->pos_write_pipe + 1) % 1;
  3258                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3259  000E9A  0EFE               	movlw	-2
  3260  000E9C  CFE3 F055          	movff	plusw1,btemp+1
  3261  000EA0  0EFF               	movlw	-1
  3262  000EA2  CFE3 F056          	movff	plusw1,btemp+2
  3263  000EA6  0E03               	movlw	3
  3264  000EA8  2455               	addwf	btemp+1,w,c
  3265  000EAA  6ED9               	movwf	fsr2l,c
  3266  000EAC  0E00               	movlw	0
  3267  000EAE  2056               	addwfc	btemp+2,w,c
  3268  000EB0  6EDA               	movwf	fsr2h,c
  3269  000EB2  0E00               	movlw	0
  3270  000EB4  6EDE               	movwf	postinc2,c
  3271  000EB6  0E00               	movlw	0
  3272  000EB8  6EDD               	movwf	postdec2,c
  3273                           
  3274                           ;pipe.c: 36: pipe->pipe_itens++;
  3275                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3276  000EBA  0EFE               	movlw	-2
  3277  000EBC  CFE3 F055          	movff	plusw1,btemp+1
  3278  000EC0  0EFF               	movlw	-1
  3279  000EC2  CFE3 F056          	movff	plusw1,btemp+2
  3280  000EC6  0E05               	movlw	5
  3281  000EC8  2455               	addwf	btemp+1,w,c
  3282  000ECA  6ED9               	movwf	fsr2l,c
  3283  000ECC  0E00               	movlw	0
  3284  000ECE  2056               	addwfc	btemp+2,w,c
  3285  000ED0  6EDA               	movwf	fsr2h,c
  3286  000ED2  2ADE               	incf	postinc2,f,c
  3287  000ED4  0E00               	movlw	0
  3288  000ED6  22DD               	addwfc	postdec2,f,c
  3289                           
  3290                           ;pipe.c: 39: if (pipe->pos_bloqued_read > 0) {
  3291                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3292  000ED8  0EFE               	movlw	-2
  3293  000EDA  CFE3 F055          	movff	plusw1,btemp+1
  3294  000EDE  0EFF               	movlw	-1
  3295  000EE0  CFE3 F056          	movff	plusw1,btemp+2
  3296  000EE4  0E07               	movlw	7
  3297  000EE6  2455               	addwf	btemp+1,w,c
  3298  000EE8  6ED9               	movwf	fsr2l,c
  3299  000EEA  0E00               	movlw	0
  3300  000EEC  2056               	addwfc	btemp+2,w,c
  3301  000EEE  6EDA               	movwf	fsr2h,c
  3302  000EF0  50DE               	movf	postinc2,w,c
  3303  000EF2  10DE               	iorwf	postinc2,w,c
  3304  000EF4  B4D8               	btfsc	status,2,c
  3305  000EF6  D032               	goto	l1841
  3306                           
  3307                           ;pipe.c: 40: F_APTOS[pipe->pos_bloqued_read].task_state = READY;
  3308  000EF8  0E11               	movlw	17
  3309  000EFA  6EE6               	movwf	postinc1,c
  3310  000EFC  0E00               	movlw	0
  3311  000EFE  6EE6               	movwf	postinc1,c
  3312                           
  3313                           ;stkvar	write_pipe@pipe @ sp[(-2)+-2]
  3314  000F00  0EFC               	movlw	-4
  3315  000F02  CFE3 F055          	movff	plusw1,btemp+1
  3316  000F06  0EFD               	movlw	-3
  3317  000F08  CFE3 F056          	movff	plusw1,btemp+2
  3318  000F0C  0E07               	movlw	7
  3319  000F0E  2455               	addwf	btemp+1,w,c
  3320  000F10  6ED9               	movwf	fsr2l,c
  3321  000F12  0E00               	movlw	0
  3322  000F14  2056               	addwfc	btemp+2,w,c
  3323  000F16  6EDA               	movwf	fsr2h,c
  3324  000F18  CFDE F055          	movff	postinc2,btemp+1
  3325  000F1C  CFDD F056          	movff	postdec2,btemp+2
  3326  000F20  C055  FFE6         	movff	btemp+1,postinc1
  3327  000F24  C056  FFE6         	movff	btemp+2,postinc1
  3328  000F28  EC01  F00A         	call	___wmul	;wreg free
  3329  000F2C  0E08               	movlw	low (_F_APTOS+8)
  3330  000F2E  2454               	addwf	btemp,w,c
  3331  000F30  6ED9               	movwf	fsr2l,c
  3332  000F32  0E01               	movlw	high (_F_APTOS+8)
  3333  000F34  2055               	addwfc	btemp+1,w,c
  3334  000F36  6EDA               	movwf	fsr2h,c
  3335  000F38  0E01               	movlw	1
  3336  000F3A  6EDF               	movwf	indf2,c
  3337                           
  3338                           ;pipe.c: 41: pipe->pos_bloqued_read = 0;
  3339                           ;stkvar	write_pipe@pipe @ sp[(0)+-2]
  3340  000F3C  0EFE               	movlw	-2
  3341  000F3E  CFE3 F055          	movff	plusw1,btemp+1
  3342  000F42  0EFF               	movlw	-1
  3343  000F44  CFE3 F056          	movff	plusw1,btemp+2
  3344  000F48  0E07               	movlw	7
  3345  000F4A  2455               	addwf	btemp+1,w,c
  3346  000F4C  6ED9               	movwf	fsr2l,c
  3347  000F4E  0E00               	movlw	0
  3348  000F50  2056               	addwfc	btemp+2,w,c
  3349  000F52  6EDA               	movwf	fsr2h,c
  3350  000F54  0E00               	movlw	0
  3351  000F56  6EDE               	movwf	postinc2,c
  3352  000F58  0E00               	movlw	0
  3353  000F5A  6EDD               	movwf	postdec2,c
  3354  000F5C                     l1841:
  3355                           
  3356                           ;pipe.c: 45: }
  3357                           ;pipe.c: 48: (INTCONbits.GIE = 1);
  3358  000F5C  8EF2               	bsf	intcon,7,c	;volatile
  3359                           
  3360                           ; _write_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  3361  000F5E  52E5               	movf	postdec1,f,c
  3362  000F60  52E5               	movf	postdec1,f,c
  3363  000F62  52E5               	movf	postdec1,f,c
  3364  000F64  0012               	return		;funcret
  3365  000F66                     __end_of_write_pipe:
  3366                           	opt stack 0
  3367                           tosu	equ	0xFFF
  3368                           tosh	equ	0xFFE
  3369                           tosl	equ	0xFFD
  3370                           stkptr	equ	0xFFC
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           intcon	equ	0xFF2
  3378                           postinc0	equ	0xFEE
  3379                           postdec0	equ	0xFED
  3380                           plusw0	equ	0xFEB
  3381                           fsr0h	equ	0xFEA
  3382                           fsr0l	equ	0xFE9
  3383                           wreg	equ	0xFE8
  3384                           postinc1	equ	0xFE6
  3385                           postdec1	equ	0xFE5
  3386                           plusw1	equ	0xFE3
  3387                           fsr1h	equ	0xFE2
  3388                           fsr1l	equ	0xFE1
  3389                           bsr	equ	0xFE0
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           plusw2	equ	0xFDB
  3394                           fsr2h	equ	0xFDA
  3395                           fsr2l	equ	0xFD9
  3396                           status	equ	0xFD8
  3397                           
  3398 ;; *************** function _create_pipe *****************
  3399 ;; Defined at:
  3400 ;;		line 11 in file "pipe.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  pipe            2  [STACK] PTR struct pipe
  3403 ;;		 -> pipeluzes(11), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1  [STACK] void 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+2
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3415 ;;      Params:         0       0       0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    4
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_tluzesescreve
  3426 ;; This function uses a reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text18
  3430  00122A                     __ptext18:
  3431                           	opt stack 0
  3432  00122A                     _create_pipe:
  3433                           	opt stack 22
  3434                           
  3435                           ;pipe.c: 13: pipe->pos_read_pipe = 0;
  3436                           ;stkvar	create_pipe@pipe @ sp[(0)+-2]
  3437                           
  3438                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  3439                           ;incstack = 0
  3440  00122A  0EFE               	movlw	-2
  3441  00122C  CFE3 F055          	movff	plusw1,btemp+1
  3442  001230  0EFF               	movlw	-1
  3443  001232  CFE3 F056          	movff	plusw1,btemp+2
  3444  001236  0E01               	movlw	1
  3445  001238  2455               	addwf	btemp+1,w,c
  3446  00123A  6ED9               	movwf	fsr2l,c
  3447  00123C  0E00               	movlw	0
  3448  00123E  2056               	addwfc	btemp+2,w,c
  3449  001240  6EDA               	movwf	fsr2h,c
  3450  001242  0E00               	movlw	0
  3451  001244  6EDE               	movwf	postinc2,c
  3452  001246  0E00               	movlw	0
  3453  001248  6EDD               	movwf	postdec2,c
  3454                           
  3455                           ;pipe.c: 14: pipe->pos_write_pipe = 0;
  3456                           ;stkvar	create_pipe@pipe @ sp[(0)+-2]
  3457  00124A  0EFE               	movlw	-2
  3458  00124C  CFE3 F055          	movff	plusw1,btemp+1
  3459  001250  0EFF               	movlw	-1
  3460  001252  CFE3 F056          	movff	plusw1,btemp+2
  3461  001256  0E03               	movlw	3
  3462  001258  2455               	addwf	btemp+1,w,c
  3463  00125A  6ED9               	movwf	fsr2l,c
  3464  00125C  0E00               	movlw	0
  3465  00125E  2056               	addwfc	btemp+2,w,c
  3466  001260  6EDA               	movwf	fsr2h,c
  3467  001262  0E00               	movlw	0
  3468  001264  6EDE               	movwf	postinc2,c
  3469  001266  0E00               	movlw	0
  3470  001268  6EDD               	movwf	postdec2,c
  3471                           
  3472                           ;pipe.c: 15: pipe->pipe_itens = 0;
  3473                           ;stkvar	create_pipe@pipe @ sp[(0)+-2]
  3474  00126A  0EFE               	movlw	-2
  3475  00126C  CFE3 F055          	movff	plusw1,btemp+1
  3476  001270  0EFF               	movlw	-1
  3477  001272  CFE3 F056          	movff	plusw1,btemp+2
  3478  001276  0E05               	movlw	5
  3479  001278  2455               	addwf	btemp+1,w,c
  3480  00127A  6ED9               	movwf	fsr2l,c
  3481  00127C  0E00               	movlw	0
  3482  00127E  2056               	addwfc	btemp+2,w,c
  3483  001280  6EDA               	movwf	fsr2h,c
  3484  001282  0E00               	movlw	0
  3485  001284  6EDE               	movwf	postinc2,c
  3486  001286  0E00               	movlw	0
  3487  001288  6EDD               	movwf	postdec2,c
  3488                           
  3489                           ;pipe.c: 18: pipe->pos_bloqued_read = 0;
  3490                           ;stkvar	create_pipe@pipe @ sp[(0)+-2]
  3491  00128A  0EFE               	movlw	-2
  3492  00128C  CFE3 F055          	movff	plusw1,btemp+1
  3493  001290  0EFF               	movlw	-1
  3494  001292  CFE3 F056          	movff	plusw1,btemp+2
  3495  001296  0E07               	movlw	7
  3496  001298  2455               	addwf	btemp+1,w,c
  3497  00129A  6ED9               	movwf	fsr2l,c
  3498  00129C  0E00               	movlw	0
  3499  00129E  2056               	addwfc	btemp+2,w,c
  3500  0012A0  6EDA               	movwf	fsr2h,c
  3501  0012A2  0E00               	movlw	0
  3502  0012A4  6EDE               	movwf	postinc2,c
  3503  0012A6  0E00               	movlw	0
  3504  0012A8  6EDD               	movwf	postdec2,c
  3505                           
  3506                           ;pipe.c: 19: pipe->pos_bloqued_write = 0;
  3507                           ;stkvar	create_pipe@pipe @ sp[(0)+-2]
  3508  0012AA  0EFE               	movlw	-2
  3509  0012AC  CFE3 F055          	movff	plusw1,btemp+1
  3510  0012B0  0EFF               	movlw	-1
  3511  0012B2  CFE3 F056          	movff	plusw1,btemp+2
  3512  0012B6  0E09               	movlw	9
  3513  0012B8  2455               	addwf	btemp+1,w,c
  3514  0012BA  6ED9               	movwf	fsr2l,c
  3515  0012BC  0E00               	movlw	0
  3516  0012BE  2056               	addwfc	btemp+2,w,c
  3517  0012C0  6EDA               	movwf	fsr2h,c
  3518  0012C2  0E00               	movlw	0
  3519  0012C4  6EDE               	movwf	postinc2,c
  3520  0012C6  0E00               	movlw	0
  3521  0012C8  6EDD               	movwf	postdec2,c
  3522                           
  3523                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  3524  0012CA  52E5               	movf	postdec1,f,c
  3525  0012CC  52E5               	movf	postdec1,f,c
  3526  0012CE  0012               	return		;funcret
  3527  0012D0                     __end_of_create_pipe:
  3528                           	opt stack 0
  3529                           tosu	equ	0xFFF
  3530                           tosh	equ	0xFFE
  3531                           tosl	equ	0xFFD
  3532                           stkptr	equ	0xFFC
  3533                           tblptru	equ	0xFF8
  3534                           tblptrh	equ	0xFF7
  3535                           tblptrl	equ	0xFF6
  3536                           tablat	equ	0xFF5
  3537                           prodh	equ	0xFF4
  3538                           prodl	equ	0xFF3
  3539                           intcon	equ	0xFF2
  3540                           postinc0	equ	0xFEE
  3541                           postdec0	equ	0xFED
  3542                           plusw0	equ	0xFEB
  3543                           fsr0h	equ	0xFEA
  3544                           fsr0l	equ	0xFE9
  3545                           wreg	equ	0xFE8
  3546                           postinc1	equ	0xFE6
  3547                           postdec1	equ	0xFE5
  3548                           plusw1	equ	0xFE3
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           bsr	equ	0xFE0
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           plusw2	equ	0xFDB
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _tluzes *****************
  3561 ;; Defined at:
  3562 ;;		line 228 in file "tasks.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  dado            1  [STACK] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1  [STACK] void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3576 ;;      Params:         0       0       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0
  3579 ;;      Totals:         0       0       0       0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    8
  3583 ;; This function calls:
  3584 ;;		_delay
  3585 ;;		_read_pipe
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text19
  3592  001630                     __ptext19:
  3593                           	opt stack 0
  3594  001630                     _tluzes:
  3595                           	opt stack 0
  3596                           
  3597                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3598  001630  52E6               	movf	postinc1,f,c
  3599                           
  3600                           ;tasks.c: 230: TRISCbits.RC5 = 0;
  3601                           
  3602                           ;incstack = 0
  3603  001632  9A94               	bcf	3988,5,c	;volatile
  3604                           
  3605                           ;tasks.c: 231: PORTCbits.RC5 = 0;
  3606  001634  9A82               	bcf	3970,5,c	;volatile
  3607  001636                     l2013:
  3608                           
  3609                           ;tasks.c: 237: {
  3610                           ;tasks.c: 238: dado = read_pipe(&pipeluzes);
  3611  001636  0E21               	movlw	low _pipeluzes
  3612  001638  6EE6               	movwf	postinc1,c
  3613  00163A  0E00               	movlw	high _pipeluzes
  3614  00163C  6EE6               	movwf	postinc1,c
  3615  00163E  EC59  F006         	call	_read_pipe	;wreg free
  3616                           
  3617                           ;stkvar	tluzes@dado @ sp[(-1)+0]
  3618  001642  0EFF               	movlw	-1
  3619  001644  C054  FFE3         	movff	btemp,plusw1
  3620                           
  3621                           ;tasks.c: 239: if (dado == 'l')
  3622                           ;stkvar	tluzes@dado @ sp[(-1)+0]
  3623  001648  0EFF               	movlw	-1
  3624  00164A  CFE3 F054          	movff	plusw1,btemp
  3625  00164E  0E6C               	movlw	108
  3626  001650  1854               	xorwf	btemp,w,c
  3627  001652  A4D8               	btfss	status,2,c
  3628  001654  D014               	goto	l2021
  3629                           
  3630                           ;tasks.c: 240: {
  3631                           ;tasks.c: 242: PORTCbits.RC5 = ~PORTCbits.RC5 ;
  3632  001656  AA82               	btfss	3970,5,c	;volatile
  3633  001658  D002               	goto	u72_20
  3634  00165A  0E01               	movlw	1
  3635  00165C  D001               	goto	u72_26
  3636  00165E                     u72_20:
  3637  00165E  0E00               	movlw	0
  3638  001660                     u72_26:
  3639  001660  0AFF               	xorlw	255
  3640  001662  6E5F               	movwf	btemp+11,c
  3641  001664  3A5F               	swapf	btemp+11,f,c
  3642  001666  465F               	rlncf	btemp+11,f,c
  3643  001668  5082               	movf	3970,w,c	;volatile
  3644  00166A  185F               	xorwf	btemp+11,w,c
  3645  00166C  0BDF               	andlw	-33
  3646  00166E  185F               	xorwf	btemp+11,w,c
  3647  001670  6E82               	movwf	3970,c	;volatile
  3648                           
  3649                           ;tasks.c: 243: delay(5000);
  3650  001672  0E88               	movlw	136
  3651  001674  6EE6               	movwf	postinc1,c
  3652  001676  0E13               	movlw	19
  3653  001678  6EE6               	movwf	postinc1,c
  3654  00167A  ECD6  F00B         	call	_delay	;wreg free
  3655  00167E                     l2021:
  3656                           
  3657                           ;tasks.c: 249: {
  3658                           ;tasks.c: 250: PORTCbits.RC5 = ~PORTCbits.RC5 ;
  3659                           
  3660                           ;tasks.c: 248: if(dado =='n')
  3661  00167E  AA82               	btfss	3970,5,c	;volatile
  3662  001680  D002               	goto	u73_20
  3663  001682  0E01               	movlw	1
  3664  001684  D001               	goto	u73_26
  3665  001686                     u73_20:
  3666  001686  0E00               	movlw	0
  3667  001688                     u73_26:
  3668  001688  0AFF               	xorlw	255
  3669  00168A  6E5F               	movwf	btemp+11,c
  3670  00168C  3A5F               	swapf	btemp+11,f,c
  3671  00168E  465F               	rlncf	btemp+11,f,c
  3672  001690  5082               	movf	3970,w,c	;volatile
  3673  001692  185F               	xorwf	btemp+11,w,c
  3674  001694  0BDF               	andlw	-33
  3675  001696  185F               	xorwf	btemp+11,w,c
  3676  001698  6E82               	movwf	3970,c	;volatile
  3677                           
  3678                           ;tasks.c: 251: delay(5000);
  3679  00169A  0E88               	movlw	136
  3680  00169C  6EE6               	movwf	postinc1,c
  3681  00169E  0E13               	movlw	19
  3682  0016A0  6EE6               	movwf	postinc1,c
  3683  0016A2  ECD6  F00B         	call	_delay	;wreg free
  3684  0016A6  D7C7               	goto	l2013
  3685  0016A8                     __end_of_tluzes:
  3686                           	opt stack 0
  3687                           tosu	equ	0xFFF
  3688                           tosh	equ	0xFFE
  3689                           tosl	equ	0xFFD
  3690                           stkptr	equ	0xFFC
  3691                           tblptru	equ	0xFF8
  3692                           tblptrh	equ	0xFF7
  3693                           tblptrl	equ	0xFF6
  3694                           tablat	equ	0xFF5
  3695                           prodh	equ	0xFF4
  3696                           prodl	equ	0xFF3
  3697                           intcon	equ	0xFF2
  3698                           postinc0	equ	0xFEE
  3699                           postdec0	equ	0xFED
  3700                           plusw0	equ	0xFEB
  3701                           fsr0h	equ	0xFEA
  3702                           fsr0l	equ	0xFE9
  3703                           wreg	equ	0xFE8
  3704                           postinc1	equ	0xFE6
  3705                           postdec1	equ	0xFE5
  3706                           plusw1	equ	0xFE3
  3707                           fsr1h	equ	0xFE2
  3708                           fsr1l	equ	0xFE1
  3709                           bsr	equ	0xFE0
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           postdec2	equ	0xFDD
  3713                           plusw2	equ	0xFDB
  3714                           fsr2h	equ	0xFDA
  3715                           fsr2l	equ	0xFD9
  3716                           status	equ	0xFD8
  3717                           
  3718 ;; *************** function _read_pipe *****************
  3719 ;; Defined at:
  3720 ;;		line 51 in file "pipe.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  pipe            2  [STACK] PTR struct pipe
  3723 ;;		 -> pipeluzes(11), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  dado            1  [STACK] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1  [STACK] unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3735 ;;      Params:         0       0       0       0       0       0       0
  3736 ;;      Locals:         0       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0
  3738 ;;      Totals:         0       0       0       0       0       0       0
  3739 ;;Total ram usage:        0 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    7
  3742 ;; This function calls:
  3743 ;;		___wmul
  3744 ;;		_dispatcher
  3745 ;; This function is called by:
  3746 ;;		_tluzes
  3747 ;; This function uses a reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text20
  3751  000CB2                     __ptext20:
  3752                           	opt stack 0
  3753  000CB2                     _read_pipe:
  3754                           	opt stack 0
  3755                           
  3756                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  3757  000CB2  52E6               	movf	postinc1,f,c
  3758                           
  3759                           ;pipe.c: 53: (INTCONbits.GIE = 0);
  3760                           
  3761                           ;incstack = 0
  3762  000CB4  9EF2               	bcf	intcon,7,c	;volatile
  3763                           
  3764                           ;pipe.c: 54: byte dado;
  3765                           ;pipe.c: 57: if (pipe->pipe_itens == 0) {
  3766                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3767  000CB6  0EFD               	movlw	-3
  3768  000CB8  CFE3 F055          	movff	plusw1,btemp+1
  3769  000CBC  0EFE               	movlw	-2
  3770  000CBE  CFE3 F056          	movff	plusw1,btemp+2
  3771  000CC2  0E05               	movlw	5
  3772  000CC4  2455               	addwf	btemp+1,w,c
  3773  000CC6  6ED9               	movwf	fsr2l,c
  3774  000CC8  0E00               	movlw	0
  3775  000CCA  2056               	addwfc	btemp+2,w,c
  3776  000CCC  6EDA               	movwf	fsr2h,c
  3777  000CCE  50DE               	movf	postinc2,w,c
  3778  000CD0  10DE               	iorwf	postinc2,w,c
  3779  000CD2  A4D8               	btfss	status,2,c
  3780  000CD4  D014               	goto	l1803
  3781                           
  3782                           ;pipe.c: 60: pipe->pos_bloqued_read = task_running;
  3783                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3784  000CD6  0EFD               	movlw	-3
  3785  000CD8  CFE3 F055          	movff	plusw1,btemp+1
  3786  000CDC  0EFE               	movlw	-2
  3787  000CDE  CFE3 F056          	movff	plusw1,btemp+2
  3788  000CE2  0E07               	movlw	7
  3789  000CE4  2455               	addwf	btemp+1,w,c
  3790  000CE6  6ED9               	movwf	fsr2l,c
  3791  000CE8  0E00               	movlw	0
  3792  000CEA  2056               	addwfc	btemp+2,w,c
  3793  000CEC  6EDA               	movwf	fsr2h,c
  3794  000CEE  C003  FFDE         	movff	_task_running,postinc2
  3795  000CF2  C004  FFDD         	movff	_task_running+1,postdec2
  3796                           
  3797                           ;pipe.c: 61: dispatcher(WAITING_PIPE);
  3798  000CF6  0E05               	movlw	5
  3799  000CF8  6EE6               	movwf	postinc1,c
  3800  000CFA  EC03  F003         	call	_dispatcher	;wreg free
  3801  000CFE                     l1803:
  3802                           
  3803                           ;pipe.c: 62: }
  3804                           ;pipe.c: 64: dado = pipe->pipe_queue[pipe->pos_read_pipe];
  3805                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3806  000CFE  0EFD               	movlw	-3
  3807  000D00  CFE3 F055          	movff	plusw1,btemp+1
  3808  000D04  0EFE               	movlw	-2
  3809  000D06  CFE3 F056          	movff	plusw1,btemp+2
  3810  000D0A  0E01               	movlw	1
  3811  000D0C  2455               	addwf	btemp+1,w,c
  3812  000D0E  6ED9               	movwf	fsr2l,c
  3813  000D10  0E00               	movlw	0
  3814  000D12  2056               	addwfc	btemp+2,w,c
  3815  000D14  6EDA               	movwf	fsr2h,c
  3816  000D16  CFDE F055          	movff	postinc2,btemp+1
  3817  000D1A  CFDD F056          	movff	postdec2,btemp+2
  3818                           
  3819                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3820  000D1E  0EFD               	movlw	-3
  3821  000D20  CFE3 F05E          	movff	plusw1,btemp+10
  3822  000D24  0EFE               	movlw	-2
  3823  000D26  CFE3 F05F          	movff	plusw1,btemp+11
  3824  000D2A  5055               	movf	btemp+1,w,c
  3825  000D2C  245E               	addwf	btemp+10,w,c
  3826  000D2E  6ED9               	movwf	fsr2l,c
  3827  000D30  5056               	movf	btemp+2,w,c
  3828  000D32  205F               	addwfc	btemp+11,w,c
  3829  000D34  6EDA               	movwf	fsr2h,c
  3830  000D36  50DF               	movf	indf2,w,c
  3831  000D38  6E5F               	movwf	btemp+11,c
  3832                           
  3833                           ;stkvar	read_pipe@dado @ sp[(-1)+0]
  3834  000D3A  0EFF               	movlw	-1
  3835  000D3C  C05F  FFE3         	movff	btemp+11,plusw1
  3836                           
  3837                           ;pipe.c: 65: pipe->pos_read_pipe = (pipe->pos_read_pipe + 1) % 1;
  3838                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3839  000D40  0EFD               	movlw	-3
  3840  000D42  CFE3 F055          	movff	plusw1,btemp+1
  3841  000D46  0EFE               	movlw	-2
  3842  000D48  CFE3 F056          	movff	plusw1,btemp+2
  3843  000D4C  0E01               	movlw	1
  3844  000D4E  2455               	addwf	btemp+1,w,c
  3845  000D50  6ED9               	movwf	fsr2l,c
  3846  000D52  0E00               	movlw	0
  3847  000D54  2056               	addwfc	btemp+2,w,c
  3848  000D56  6EDA               	movwf	fsr2h,c
  3849  000D58  0E00               	movlw	0
  3850  000D5A  6EDE               	movwf	postinc2,c
  3851  000D5C  0E00               	movlw	0
  3852  000D5E  6EDD               	movwf	postdec2,c
  3853                           
  3854                           ;pipe.c: 66: pipe->pipe_itens--;
  3855                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3856  000D60  0EFD               	movlw	-3
  3857  000D62  CFE3 F055          	movff	plusw1,btemp+1
  3858  000D66  0EFE               	movlw	-2
  3859  000D68  CFE3 F056          	movff	plusw1,btemp+2
  3860  000D6C  0E05               	movlw	5
  3861  000D6E  2455               	addwf	btemp+1,w,c
  3862  000D70  6ED9               	movwf	fsr2l,c
  3863  000D72  0E00               	movlw	0
  3864  000D74  2056               	addwfc	btemp+2,w,c
  3865  000D76  6EDA               	movwf	fsr2h,c
  3866  000D78  06DE               	decf	postinc2,f,c
  3867  000D7A  0E00               	movlw	0
  3868  000D7C  5ADD               	subwfb	postdec2,f,c
  3869                           
  3870                           ;pipe.c: 69: if (pipe->pos_bloqued_write > 0) {
  3871                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3872  000D7E  0EFD               	movlw	-3
  3873  000D80  CFE3 F055          	movff	plusw1,btemp+1
  3874  000D84  0EFE               	movlw	-2
  3875  000D86  CFE3 F056          	movff	plusw1,btemp+2
  3876  000D8A  0E09               	movlw	9
  3877  000D8C  2455               	addwf	btemp+1,w,c
  3878  000D8E  6ED9               	movwf	fsr2l,c
  3879  000D90  0E00               	movlw	0
  3880  000D92  2056               	addwfc	btemp+2,w,c
  3881  000D94  6EDA               	movwf	fsr2h,c
  3882  000D96  50DE               	movf	postinc2,w,c
  3883  000D98  10DE               	iorwf	postinc2,w,c
  3884  000D9A  B4D8               	btfsc	status,2,c
  3885  000D9C  D032               	goto	l1815
  3886                           
  3887                           ;pipe.c: 70: F_APTOS[pipe->pos_bloqued_write].task_state = READY;
  3888  000D9E  0E11               	movlw	17
  3889  000DA0  6EE6               	movwf	postinc1,c
  3890  000DA2  0E00               	movlw	0
  3891  000DA4  6EE6               	movwf	postinc1,c
  3892                           
  3893                           ;stkvar	read_pipe@pipe @ sp[(-3)+-2]
  3894  000DA6  0EFB               	movlw	-5
  3895  000DA8  CFE3 F055          	movff	plusw1,btemp+1
  3896  000DAC  0EFC               	movlw	-4
  3897  000DAE  CFE3 F056          	movff	plusw1,btemp+2
  3898  000DB2  0E09               	movlw	9
  3899  000DB4  2455               	addwf	btemp+1,w,c
  3900  000DB6  6ED9               	movwf	fsr2l,c
  3901  000DB8  0E00               	movlw	0
  3902  000DBA  2056               	addwfc	btemp+2,w,c
  3903  000DBC  6EDA               	movwf	fsr2h,c
  3904  000DBE  CFDE F055          	movff	postinc2,btemp+1
  3905  000DC2  CFDD F056          	movff	postdec2,btemp+2
  3906  000DC6  C055  FFE6         	movff	btemp+1,postinc1
  3907  000DCA  C056  FFE6         	movff	btemp+2,postinc1
  3908  000DCE  EC01  F00A         	call	___wmul	;wreg free
  3909  000DD2  0E08               	movlw	low (_F_APTOS+8)
  3910  000DD4  2454               	addwf	btemp,w,c
  3911  000DD6  6ED9               	movwf	fsr2l,c
  3912  000DD8  0E01               	movlw	high (_F_APTOS+8)
  3913  000DDA  2055               	addwfc	btemp+1,w,c
  3914  000DDC  6EDA               	movwf	fsr2h,c
  3915  000DDE  0E01               	movlw	1
  3916  000DE0  6EDF               	movwf	indf2,c
  3917                           
  3918                           ;pipe.c: 71: pipe->pos_bloqued_write = 0;
  3919                           ;stkvar	read_pipe@pipe @ sp[(-1)+-2]
  3920  000DE2  0EFD               	movlw	-3
  3921  000DE4  CFE3 F055          	movff	plusw1,btemp+1
  3922  000DE8  0EFE               	movlw	-2
  3923  000DEA  CFE3 F056          	movff	plusw1,btemp+2
  3924  000DEE  0E09               	movlw	9
  3925  000DF0  2455               	addwf	btemp+1,w,c
  3926  000DF2  6ED9               	movwf	fsr2l,c
  3927  000DF4  0E00               	movlw	0
  3928  000DF6  2056               	addwfc	btemp+2,w,c
  3929  000DF8  6EDA               	movwf	fsr2h,c
  3930  000DFA  0E00               	movlw	0
  3931  000DFC  6EDE               	movwf	postinc2,c
  3932  000DFE  0E00               	movlw	0
  3933  000E00  6EDD               	movwf	postdec2,c
  3934  000E02                     l1815:
  3935                           
  3936                           ;pipe.c: 75: }
  3937                           ;pipe.c: 77: (INTCONbits.GIE = 1);
  3938  000E02  8EF2               	bsf	intcon,7,c	;volatile
  3939                           
  3940                           ;pipe.c: 79: return dado;
  3941                           ;stkvar	read_pipe@dado @ sp[(-1)+0]
  3942  000E04  0EFF               	movlw	-1
  3943  000E06  CFE3 F054          	movff	plusw1,btemp
  3944                           
  3945                           ; _read_pipe: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  3946  000E0A  52E5               	movf	postdec1,f,c
  3947  000E0C  52E5               	movf	postdec1,f,c
  3948  000E0E  52E5               	movf	postdec1,f,c
  3949  000E10  0012               	return		;funcret
  3950  000E12                     __end_of_read_pipe:
  3951                           	opt stack 0
  3952                           tosu	equ	0xFFF
  3953                           tosh	equ	0xFFE
  3954                           tosl	equ	0xFFD
  3955                           stkptr	equ	0xFFC
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           postdec0	equ	0xFED
  3965                           plusw0	equ	0xFEB
  3966                           fsr0h	equ	0xFEA
  3967                           fsr0l	equ	0xFE9
  3968                           wreg	equ	0xFE8
  3969                           postinc1	equ	0xFE6
  3970                           postdec1	equ	0xFE5
  3971                           plusw1	equ	0xFE3
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           bsr	equ	0xFE0
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           postdec2	equ	0xFDD
  3978                           plusw2	equ	0xFDB
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _task_idle *****************
  3984 ;; Defined at:
  3985 ;;		line 72 in file "kernel.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1  [STACK] void 
  3992 ;; Registers used:
  3993 ;;		None
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         0       0       0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0
  4002 ;;      Totals:         0       0       0       0       0       0       0
  4003 ;;Total ram usage:        0 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    4
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_setupOS
  4010 ;; This function uses a reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text21
  4014  001892                     __ptext21:
  4015                           	opt stack 0
  4016  001892                     _task_idle:
  4017                           	opt stack 23
  4018                           
  4019                           ;kernel.c: 80: __nop();
  4020                           
  4021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4022                           ;incstack = 0
  4023                           ;kernel.c: 78: while (1) {
  4024  001892  F000               	nop	
  4025  001894  D7FE               	goto	_task_idle
  4026  001896                     __end_of_task_idle:
  4027                           	opt stack 0
  4028                           tosu	equ	0xFFF
  4029                           tosh	equ	0xFFE
  4030                           tosl	equ	0xFFD
  4031                           stkptr	equ	0xFFC
  4032                           tblptru	equ	0xFF8
  4033                           tblptrh	equ	0xFF7
  4034                           tblptrl	equ	0xFF6
  4035                           tablat	equ	0xFF5
  4036                           prodh	equ	0xFF4
  4037                           prodl	equ	0xFF3
  4038                           intcon	equ	0xFF2
  4039                           postinc0	equ	0xFEE
  4040                           postdec0	equ	0xFED
  4041                           plusw0	equ	0xFEB
  4042                           fsr0h	equ	0xFEA
  4043                           fsr0l	equ	0xFE9
  4044                           wreg	equ	0xFE8
  4045                           postinc1	equ	0xFE6
  4046                           postdec1	equ	0xFE5
  4047                           plusw1	equ	0xFE3
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           bsr	equ	0xFE0
  4051                           indf2	equ	0xFDF
  4052                           postinc2	equ	0xFDE
  4053                           postdec2	equ	0xFDD
  4054                           plusw2	equ	0xFDB
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _aviao3 *****************
  4060 ;; Defined at:
  4061 ;;		line 177 in file "tasks.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4075 ;;      Params:         0       0       0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    8
  4082 ;; This function calls:
  4083 ;;		_delay
  4084 ;;		_sem_post
  4085 ;;		_sem_wait
  4086 ;; This function is called by:
  4087 ;;		Interrupt level 1
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text22
  4092  0015AC                     __ptext22:
  4093                           	opt stack 0
  4094  0015AC                     _aviao3:
  4095                           	opt stack 19
  4096                           
  4097                           ;tasks.c: 179: PORTDbits.RD7 = 0;
  4098                           
  4099                           ;incstack = 0
  4100  0015AC  9E83               	bcf	3971,7,c	;volatile
  4101                           
  4102                           ;tasks.c: 180: PORTDbits.RD6 = 0;
  4103  0015AE  9C83               	bcf	3971,6,c	;volatile
  4104                           
  4105                           ;tasks.c: 181: PORTDbits.RD4 = 0;
  4106  0015B0  9883               	bcf	3971,4,c	;volatile
  4107                           
  4108                           ;tasks.c: 182: PORTDbits.RD2 = 0;
  4109  0015B2  9483               	bcf	3971,2,c	;volatile
  4110  0015B4                     l181:
  4111                           
  4112                           ;tasks.c: 186: PORTDbits.RD7 = 1;
  4113  0015B4  8E83               	bsf	3971,7,c	;volatile
  4114                           
  4115                           ;tasks.c: 188: delay(6000);
  4116  0015B6  0E70               	movlw	112
  4117  0015B8  6EE6               	movwf	postinc1,c
  4118  0015BA  0E17               	movlw	23
  4119  0015BC  6EE6               	movwf	postinc1,c
  4120  0015BE  ECD6  F00B         	call	_delay	;wreg free
  4121                           
  4122                           ;tasks.c: 190: sem_wait(&spista);
  4123  0015C2  0E07               	movlw	low _spista
  4124  0015C4  6EE6               	movwf	postinc1,c
  4125  0015C6  0E00               	movlw	high _spista
  4126  0015C8  6EE6               	movwf	postinc1,c
  4127  0015CA  EC49  F008         	call	_sem_wait	;wreg free
  4128                           
  4129                           ;tasks.c: 192: PORTDbits.RD7 = 0;
  4130  0015CE  9E83               	bcf	3971,7,c	;volatile
  4131                           
  4132                           ;tasks.c: 194: PORTDbits.RD6 = 1;
  4133  0015D0  8C83               	bsf	3971,6,c	;volatile
  4134                           
  4135                           ;tasks.c: 196: delay(6000);
  4136  0015D2  0E70               	movlw	112
  4137  0015D4  6EE6               	movwf	postinc1,c
  4138  0015D6  0E17               	movlw	23
  4139  0015D8  6EE6               	movwf	postinc1,c
  4140  0015DA  ECD6  F00B         	call	_delay	;wreg free
  4141                           
  4142                           ;tasks.c: 199: PORTDbits.RD6 = 0;
  4143  0015DE  9C83               	bcf	3971,6,c	;volatile
  4144                           
  4145                           ;tasks.c: 202: sem_post(&spista);
  4146  0015E0  0E07               	movlw	low _spista
  4147  0015E2  6EE6               	movwf	postinc1,c
  4148  0015E4  0E00               	movlw	high _spista
  4149  0015E6  6EE6               	movwf	postinc1,c
  4150  0015E8  ECB3  F007         	call	_sem_post	;wreg free
  4151                           
  4152                           ;tasks.c: 204: cont++;
  4153  0015EC  4A01               	infsnz	_cont,f,c
  4154  0015EE  2A02               	incf	_cont+1,f,c
  4155                           
  4156                           ;tasks.c: 205: PORTDbits.RD2 = 1;
  4157  0015F0  8483               	bsf	3971,2,c	;volatile
  4158                           
  4159                           ;tasks.c: 207: delay(6000);
  4160  0015F2  0E70               	movlw	112
  4161  0015F4  6EE6               	movwf	postinc1,c
  4162  0015F6  0E17               	movlw	23
  4163  0015F8  6EE6               	movwf	postinc1,c
  4164  0015FA  ECD6  F00B         	call	_delay	;wreg free
  4165                           
  4166                           ;tasks.c: 211: sem_wait(&spista);
  4167  0015FE  0E07               	movlw	low _spista
  4168  001600  6EE6               	movwf	postinc1,c
  4169  001602  0E00               	movlw	high _spista
  4170  001604  6EE6               	movwf	postinc1,c
  4171  001606  EC49  F008         	call	_sem_wait	;wreg free
  4172                           
  4173                           ;tasks.c: 213: PORTDbits.RD2 = 0;
  4174  00160A  9483               	bcf	3971,2,c	;volatile
  4175                           
  4176                           ;tasks.c: 214: cont--;
  4177  00160C  0601               	decf	_cont,f,c
  4178  00160E  A0D8               	btfss	status,0,c
  4179  001610  0602               	decf	_cont+1,f,c
  4180                           
  4181                           ;tasks.c: 216: PORTDbits.RD4 = 1;
  4182  001612  8883               	bsf	3971,4,c	;volatile
  4183                           
  4184                           ;tasks.c: 218: delay(6000);
  4185  001614  0E70               	movlw	112
  4186  001616  6EE6               	movwf	postinc1,c
  4187  001618  0E17               	movlw	23
  4188  00161A  6EE6               	movwf	postinc1,c
  4189  00161C  ECD6  F00B         	call	_delay	;wreg free
  4190                           
  4191                           ;tasks.c: 220: PORTDbits.RD4 = 0;
  4192  001620  9883               	bcf	3971,4,c	;volatile
  4193                           
  4194                           ;tasks.c: 222: sem_post(&spista);
  4195  001622  0E07               	movlw	low _spista
  4196  001624  6EE6               	movwf	postinc1,c
  4197  001626  0E00               	movlw	high _spista
  4198  001628  6EE6               	movwf	postinc1,c
  4199  00162A  ECB3  F007         	call	_sem_post	;wreg free
  4200  00162E  D7C2               	goto	l181
  4201  001630                     __end_of_aviao3:
  4202                           	opt stack 0
  4203                           tosu	equ	0xFFF
  4204                           tosh	equ	0xFFE
  4205                           tosl	equ	0xFFD
  4206                           stkptr	equ	0xFFC
  4207                           tblptru	equ	0xFF8
  4208                           tblptrh	equ	0xFF7
  4209                           tblptrl	equ	0xFF6
  4210                           tablat	equ	0xFF5
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           postdec0	equ	0xFED
  4216                           plusw0	equ	0xFEB
  4217                           fsr0h	equ	0xFEA
  4218                           fsr0l	equ	0xFE9
  4219                           wreg	equ	0xFE8
  4220                           postinc1	equ	0xFE6
  4221                           postdec1	equ	0xFE5
  4222                           plusw1	equ	0xFE3
  4223                           fsr1h	equ	0xFE2
  4224                           fsr1l	equ	0xFE1
  4225                           bsr	equ	0xFE0
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           postdec2	equ	0xFDD
  4229                           plusw2	equ	0xFDB
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function _int_high *****************
  4235 ;; Defined at:
  4236 ;;		line 127 in file "kernel.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  i               2   15[COMRAM] unsigned int 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4250 ;;      Params:         0       0       0       0       0       0       0
  4251 ;;      Locals:         2       0       0       0       0       0       0
  4252 ;;      Temps:         15       0       0       0       0       0       0
  4253 ;;      Totals:        17       0       0       0       0       0       0
  4254 ;;Total ram usage:       17 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    3
  4257 ;; This function calls:
  4258 ;;		___wmul
  4259 ;;		_dispatcher
  4260 ;; This function is called by:
  4261 ;;		Interrupt level 2
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	intcode
  4266  000008                     __pintcode:
  4267                           	opt stack 0
  4268  000008                     _int_high:
  4269                           	opt stack 19
  4270                           
  4271                           ;incstack = 0
  4272  000008  EDA3  F005         	call	int_func,f	;refresh shadow registers
  4273                           tosu	equ	0xFFF
  4274                           tosh	equ	0xFFE
  4275                           tosl	equ	0xFFD
  4276                           stkptr	equ	0xFFC
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon	equ	0xFF2
  4284                           postinc0	equ	0xFEE
  4285                           postdec0	equ	0xFED
  4286                           plusw0	equ	0xFEB
  4287                           fsr0h	equ	0xFEA
  4288                           fsr0l	equ	0xFE9
  4289                           wreg	equ	0xFE8
  4290                           postinc1	equ	0xFE6
  4291                           postdec1	equ	0xFE5
  4292                           plusw1	equ	0xFE3
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           bsr	equ	0xFE0
  4296                           indf2	equ	0xFDF
  4297                           postinc2	equ	0xFDE
  4298                           postdec2	equ	0xFDD
  4299                           plusw2	equ	0xFDB
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304                           	psect	intcode_body
  4305  000B46                     __pintcode_body:
  4306                           	opt stack 19
  4307  000B46                     int_func:
  4308                           	opt stack 19
  4309  000B46  0006               	pop		; remove dummy address from shadow register refresh
  4310  000B48  CFE1 F02E          	movff	fsr1l,??_int_high+2
  4311  000B4C  CFE2 F02F          	movff	fsr1h,??_int_high+3
  4312  000B50  CFD9 F030          	movff	fsr2l,??_int_high+4
  4313  000B54  CFDA F031          	movff	fsr2h,??_int_high+5
  4314  000B58  CFF3 F032          	movff	prodl,??_int_high+6
  4315  000B5C  CFF4 F033          	movff	prodh,??_int_high+7
  4316  000B60  C054  F034         	movff	btemp,??_int_high+8
  4317  000B64  C055  F035         	movff	btemp+1,??_int_high+9
  4318  000B68  C056  F036         	movff	btemp+2,??_int_high+10
  4319  000B6C  C05C  F037         	movff	btemp+8,??_int_high+11
  4320  000B70  C05D  F038         	movff	btemp+9,??_int_high+12
  4321  000B74  C05E  F039         	movff	btemp+10,??_int_high+13
  4322  000B78  C05F  F03A         	movff	btemp+11,??_int_high+14
  4323  000B7C  EE14  F072         	lfsr	1,___inthi_sp
  4324                           
  4325                           ;kernel.c: 129: u_int i;
  4326                           ;kernel.c: 131: if (INTCONbits.TMR0IF) {
  4327  000B80  A4F2               	btfss	intcon,2,c	;volatile
  4328  000B82  D07C               	goto	i2l108
  4329                           
  4330                           ;kernel.c: 132: INTCONbits.TMR0IF = 0;
  4331  000B84  94F2               	bcf	intcon,2,c	;volatile
  4332                           
  4333                           ;kernel.c: 133: TMR0L = 252;
  4334  000B86  0EFC               	movlw	252
  4335  000B88  6ED6               	movwf	4054,c	;volatile
  4336                           
  4337                           ;kernel.c: 136: for (i = 1; i < tasks_installed; i++) {
  4338  000B8A  0E00               	movlw	0
  4339  000B8C  6E3C               	movwf	int_high@i+1,c
  4340  000B8E  0E01               	movlw	1
  4341  000B90  6E3B               	movwf	int_high@i,c
  4342  000B92  D05F               	goto	i2l103
  4343  000B94                     
  4344                           ;kernel.c: 137: if (F_APTOS[i].task_state == SLEEPING) {
  4345  000B94  0E11               	movlw	17
  4346  000B96  6EE6               	movwf	postinc1,c
  4347  000B98  0E00               	movlw	0
  4348  000B9A  6EE6               	movwf	postinc1,c
  4349  000B9C  C03B  FFE6         	movff	int_high@i,postinc1
  4350  000BA0  C03C  FFE6         	movff	int_high@i+1,postinc1
  4351  000BA4  EC01  F00A         	call	___wmul	;wreg free
  4352  000BA8  0E08               	movlw	8
  4353  000BAA  2654               	addwf	btemp,f,c
  4354  000BAC  0E00               	movlw	0
  4355  000BAE  2255               	addwfc	btemp+1,f,c
  4356  000BB0  0E00               	movlw	low _F_APTOS
  4357  000BB2  2454               	addwf	btemp,w,c
  4358  000BB4  6ED9               	movwf	fsr2l,c
  4359  000BB6  0E01               	movlw	high _F_APTOS
  4360  000BB8  2055               	addwfc	btemp+1,w,c
  4361  000BBA  6EDA               	movwf	fsr2h,c
  4362  000BBC  0E03               	movlw	3
  4363  000BBE  18DE               	xorwf	postinc2,w,c
  4364  000BC0  A4D8               	btfss	status,2,c
  4365  000BC2  D045               	goto	i2l106
  4366                           
  4367                           ;kernel.c: 138: F_APTOS[i].delay_time--;
  4368  000BC4  0E11               	movlw	17
  4369  000BC6  6EE6               	movwf	postinc1,c
  4370  000BC8  0E00               	movlw	0
  4371  000BCA  6EE6               	movwf	postinc1,c
  4372  000BCC  C03B  FFE6         	movff	int_high@i,postinc1
  4373  000BD0  C03C  FFE6         	movff	int_high@i+1,postinc1
  4374  000BD4  EC01  F00A         	call	___wmul	;wreg free
  4375  000BD8  0E06               	movlw	6
  4376  000BDA  2654               	addwf	btemp,f,c
  4377  000BDC  0E00               	movlw	0
  4378  000BDE  2255               	addwfc	btemp+1,f,c
  4379  000BE0  0E00               	movlw	low _F_APTOS
  4380  000BE2  2454               	addwf	btemp,w,c
  4381  000BE4  6ED9               	movwf	fsr2l,c
  4382  000BE6  0E01               	movlw	high _F_APTOS
  4383  000BE8  2055               	addwfc	btemp+1,w,c
  4384  000BEA  6EDA               	movwf	fsr2h,c
  4385  000BEC  06DE               	decf	postinc2,f,c
  4386  000BEE  0E00               	movlw	0
  4387  000BF0  5ADD               	subwfb	postdec2,f,c
  4388                           
  4389                           ;kernel.c: 139: if (F_APTOS[i].delay_time == 0) {
  4390  000BF2  0E11               	movlw	17
  4391  000BF4  6EE6               	movwf	postinc1,c
  4392  000BF6  0E00               	movlw	0
  4393  000BF8  6EE6               	movwf	postinc1,c
  4394  000BFA  C03B  FFE6         	movff	int_high@i,postinc1
  4395  000BFE  C03C  FFE6         	movff	int_high@i+1,postinc1
  4396  000C02  EC01  F00A         	call	___wmul	;wreg free
  4397  000C06  0E06               	movlw	6
  4398  000C08  2654               	addwf	btemp,f,c
  4399  000C0A  0E00               	movlw	0
  4400  000C0C  2255               	addwfc	btemp+1,f,c
  4401  000C0E  0E00               	movlw	low _F_APTOS
  4402  000C10  2454               	addwf	btemp,w,c
  4403  000C12  6ED9               	movwf	fsr2l,c
  4404  000C14  0E01               	movlw	high _F_APTOS
  4405  000C16  2055               	addwfc	btemp+1,w,c
  4406  000C18  6EDA               	movwf	fsr2h,c
  4407  000C1A  50DE               	movf	postinc2,w,c
  4408  000C1C  10DE               	iorwf	postinc2,w,c
  4409  000C1E  A4D8               	btfss	status,2,c
  4410  000C20  D016               	goto	i2l106
  4411                           
  4412                           ;kernel.c: 140: F_APTOS[i].task_state = READY;
  4413  000C22  0E11               	movlw	17
  4414  000C24  6EE6               	movwf	postinc1,c
  4415  000C26  0E00               	movlw	0
  4416  000C28  6EE6               	movwf	postinc1,c
  4417  000C2A  C03B  FFE6         	movff	int_high@i,postinc1
  4418  000C2E  C03C  FFE6         	movff	int_high@i+1,postinc1
  4419  000C32  EC01  F00A         	call	___wmul	;wreg free
  4420  000C36  0E08               	movlw	8
  4421  000C38  2654               	addwf	btemp,f,c
  4422  000C3A  0E00               	movlw	0
  4423  000C3C  2255               	addwfc	btemp+1,f,c
  4424  000C3E  0E00               	movlw	low _F_APTOS
  4425  000C40  2454               	addwf	btemp,w,c
  4426  000C42  6ED9               	movwf	fsr2l,c
  4427  000C44  0E01               	movlw	high _F_APTOS
  4428  000C46  2055               	addwfc	btemp+1,w,c
  4429  000C48  6EDA               	movwf	fsr2h,c
  4430  000C4A  0E01               	movlw	1
  4431  000C4C  6EDF               	movwf	indf2,c
  4432  000C4E                     i2l106:
  4433  000C4E  4A3B               	infsnz	int_high@i,f,c
  4434  000C50  2A3C               	incf	int_high@i+1,f,c
  4435  000C52                     i2l103:
  4436  000C52  5005               	movf	_tasks_installed,w,c
  4437  000C54  5C3B               	subwf	int_high@i,w,c
  4438  000C56  5006               	movf	_tasks_installed+1,w,c
  4439  000C58  583C               	subwfb	int_high@i+1,w,c
  4440  000C5A  A0D8               	btfss	status,0,c
  4441  000C5C  D79B               	goto	i2l104
  4442                           
  4443                           ;kernel.c: 141: }
  4444                           ;kernel.c: 142: }
  4445                           ;kernel.c: 143: }
  4446                           ;kernel.c: 145: quantum--;
  4447  000C5E  0660               	decf	_quantum,f,c
  4448  000C60  A0D8               	btfss	status,0,c
  4449  000C62  0661               	decf	_quantum+1,f,c
  4450                           
  4451                           ;kernel.c: 146: if (quantum == 0) {
  4452  000C64  5060               	movf	_quantum,w,c
  4453  000C66  1061               	iorwf	_quantum+1,w,c
  4454  000C68  A4D8               	btfss	status,2,c
  4455  000C6A  D008               	goto	i2l108
  4456                           
  4457                           ;kernel.c: 147: quantum = 4;
  4458  000C6C  0E00               	movlw	0
  4459  000C6E  6E61               	movwf	_quantum+1,c
  4460  000C70  0E04               	movlw	4
  4461  000C72  6E60               	movwf	_quantum,c
  4462                           
  4463                           ;kernel.c: 148: dispatcher(READY);
  4464  000C74  0E01               	movlw	1
  4465  000C76  6EE6               	movwf	postinc1,c
  4466  000C78  EC03  F003         	call	_dispatcher	;wreg free
  4467  000C7C                     i2l108:
  4468  000C7C  C03A  F05F         	movff	??_int_high+14,btemp+11
  4469  000C80  C039  F05E         	movff	??_int_high+13,btemp+10
  4470  000C84  C038  F05D         	movff	??_int_high+12,btemp+9
  4471  000C88  C037  F05C         	movff	??_int_high+11,btemp+8
  4472  000C8C  C036  F056         	movff	??_int_high+10,btemp+2
  4473  000C90  C035  F055         	movff	??_int_high+9,btemp+1
  4474  000C94  C034  F054         	movff	??_int_high+8,btemp
  4475  000C98  C033  FFF4         	movff	??_int_high+7,prodh
  4476  000C9C  C032  FFF3         	movff	??_int_high+6,prodl
  4477  000CA0  C031  FFDA         	movff	??_int_high+5,fsr2h
  4478  000CA4  C030  FFD9         	movff	??_int_high+4,fsr2l
  4479  000CA8  C02F  FFE2         	movff	??_int_high+3,fsr1h
  4480  000CAC  C02E  FFE1         	movff	??_int_high+2,fsr1l
  4481  000CB0  0011               	retfie		f
  4482  000CB2                     __end_of_int_high:
  4483                           	opt stack 0
  4484                           tosu	equ	0xFFF
  4485                           tosh	equ	0xFFE
  4486                           tosl	equ	0xFFD
  4487                           stkptr	equ	0xFFC
  4488                           tblptru	equ	0xFF8
  4489                           tblptrh	equ	0xFF7
  4490                           tblptrl	equ	0xFF6
  4491                           tablat	equ	0xFF5
  4492                           prodh	equ	0xFF4
  4493                           prodl	equ	0xFF3
  4494                           intcon	equ	0xFF2
  4495                           postinc0	equ	0xFEE
  4496                           postdec0	equ	0xFED
  4497                           plusw0	equ	0xFEB
  4498                           fsr0h	equ	0xFEA
  4499                           fsr0l	equ	0xFE9
  4500                           wreg	equ	0xFE8
  4501                           postinc1	equ	0xFE6
  4502                           postdec1	equ	0xFE5
  4503                           plusw1	equ	0xFE3
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           bsr	equ	0xFE0
  4507                           indf2	equ	0xFDF
  4508                           postinc2	equ	0xFDE
  4509                           postdec2	equ	0xFDD
  4510                           plusw2	equ	0xFDB
  4511                           fsr2h	equ	0xFDA
  4512                           fsr2l	equ	0xFD9
  4513                           status	equ	0xFD8
  4514                           tosu	equ	0xFFF
  4515                           tosh	equ	0xFFE
  4516                           tosl	equ	0xFFD
  4517                           stkptr	equ	0xFFC
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           intcon	equ	0xFF2
  4525                           postinc0	equ	0xFEE
  4526                           postdec0	equ	0xFED
  4527                           plusw0	equ	0xFEB
  4528                           fsr0h	equ	0xFEA
  4529                           fsr0l	equ	0xFE9
  4530                           wreg	equ	0xFE8
  4531                           postinc1	equ	0xFE6
  4532                           postdec1	equ	0xFE5
  4533                           plusw1	equ	0xFE3
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           bsr	equ	0xFE0
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           postdec2	equ	0xFDD
  4540                           plusw2	equ	0xFDB
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8
  4544                           
  4545                           	psect	rparam
  4546  0000                     tosu	equ	0xFFF
  4547                           tosh	equ	0xFFE
  4548                           tosl	equ	0xFFD
  4549                           stkptr	equ	0xFFC
  4550                           tblptru	equ	0xFF8
  4551                           tblptrh	equ	0xFF7
  4552                           tblptrl	equ	0xFF6
  4553                           tablat	equ	0xFF5
  4554                           prodh	equ	0xFF4
  4555                           prodl	equ	0xFF3
  4556                           intcon	equ	0xFF2
  4557                           postinc0	equ	0xFEE
  4558                           postdec0	equ	0xFED
  4559                           plusw0	equ	0xFEB
  4560                           fsr0h	equ	0xFEA
  4561                           fsr0l	equ	0xFE9
  4562                           wreg	equ	0xFE8
  4563                           postinc1	equ	0xFE6
  4564                           postdec1	equ	0xFE5
  4565                           plusw1	equ	0xFE3
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           bsr	equ	0xFE0
  4569                           indf2	equ	0xFDF
  4570                           postinc2	equ	0xFDE
  4571                           postdec2	equ	0xFDD
  4572                           plusw2	equ	0xFDB
  4573                           fsr2h	equ	0xFDA
  4574                           fsr2l	equ	0xFD9
  4575                           status	equ	0xFD8
  4576                           
  4577                           	psect	temp
  4578  000054                     btemp:
  4579                           	opt stack 0
  4580  000054                     	ds	12
  4581  0000                     wtemp0	set	btemp
  4582  0000                     wtemp1	set	btemp+2
  4583  0000                     wtemp2	set	btemp+4
  4584  0000                     wtemp3	set	btemp+6
  4585  0000                     wtemp4	set	btemp+8
  4586  0000                     wtemp5	set	btemp+10
  4587  0000                     wtemp6	set	btemp+1
  4588  0000                     ttemp0	set	btemp
  4589  0000                     ttemp1	set	btemp+3
  4590  0000                     ttemp2	set	btemp+6
  4591  0000                     ttemp3	set	btemp+9
  4592  0000                     ltemp0	set	btemp
  4593  0000                     ltemp1	set	btemp+4
  4594  0000                     ltemp2	set	btemp+8
  4595                           tosu	equ	0xFFF
  4596                           tosh	equ	0xFFE
  4597                           tosl	equ	0xFFD
  4598                           stkptr	equ	0xFFC
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           postinc0	equ	0xFEE
  4607                           postdec0	equ	0xFED
  4608                           plusw0	equ	0xFEB
  4609                           fsr0h	equ	0xFEA
  4610                           fsr0l	equ	0xFE9
  4611                           wreg	equ	0xFE8
  4612                           postinc1	equ	0xFE6
  4613                           postdec1	equ	0xFE5
  4614                           plusw1	equ	0xFE3
  4615                           fsr1h	equ	0xFE2
  4616                           fsr1l	equ	0xFE1
  4617                           bsr	equ	0xFE0
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           plusw2	equ	0xFDB
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    2
    Data        2
    BSS         725
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     40      85
    BANK0           128      0       0
    BANK1           256      0     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    SRAMInitHeap@pHeap	near PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    read_pipe@pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    write_pipe@pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    create_pipe@pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    sem_post@s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    sem_wait@s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    sem_init@s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    F_APTOS.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao2(), 
		 -> aviao1(), 

    create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao2(), 
		 -> aviao1(), 

    S101tcb$task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao2(), 
		 -> aviao1(), 

    task.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao2(), 
		 -> aviao1(), 


Critical Paths under _main in COMRAM

    _main->_create_task
    _setupOS->_create_task

Critical Paths under _aviao1 in COMRAM

    None.

Critical Paths under _aviao2 in COMRAM

    None.

Critical Paths under _tluzesescreve in COMRAM

    None.

Critical Paths under _tluzes in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _aviao1 in COMRAM

    None.

Critical Paths under _aviao2 in COMRAM

    None.

Critical Paths under _aviao3 in COMRAM

    None.

Critical Paths under _tluzes in COMRAM

    None.

Critical Paths under _tluzesescreve in COMRAM

    None.

Critical Paths under _int_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _aviao1 in BANK0

    None.

Critical Paths under _aviao2 in BANK0

    None.

Critical Paths under _tluzesescreve in BANK0

    None.

Critical Paths under _tluzes in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _aviao1 in BANK0

    None.

Critical Paths under _aviao2 in BANK0

    None.

Critical Paths under _aviao3 in BANK0

    None.

Critical Paths under _tluzes in BANK0

    None.

Critical Paths under _tluzesescreve in BANK0

    None.

Critical Paths under _int_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _aviao1 in BANK1

    None.

Critical Paths under _aviao2 in BANK1

    None.

Critical Paths under _tluzesescreve in BANK1

    None.

Critical Paths under _tluzes in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _aviao1 in BANK1

    None.

Critical Paths under _aviao2 in BANK1

    None.

Critical Paths under _aviao3 in BANK1

    None.

Critical Paths under _tluzes in BANK1

    None.

Critical Paths under _tluzesescreve in BANK1

    None.

Critical Paths under _int_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _aviao1 in BANK2

    None.

Critical Paths under _aviao2 in BANK2

    None.

Critical Paths under _tluzesescreve in BANK2

    None.

Critical Paths under _tluzes in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _aviao1 in BANK2

    None.

Critical Paths under _aviao2 in BANK2

    None.

Critical Paths under _aviao3 in BANK2

    None.

Critical Paths under _tluzes in BANK2

    None.

Critical Paths under _tluzesescreve in BANK2

    None.

Critical Paths under _int_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _aviao1 in BANK3

    None.

Critical Paths under _aviao2 in BANK3

    None.

Critical Paths under _tluzesescreve in BANK3

    None.

Critical Paths under _tluzes in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _aviao1 in BANK3

    None.

Critical Paths under _aviao2 in BANK3

    None.

Critical Paths under _aviao3 in BANK3

    None.

Critical Paths under _tluzes in BANK3

    None.

Critical Paths under _tluzesescreve in BANK3

    None.

Critical Paths under _int_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _aviao1 in BANK4

    None.

Critical Paths under _aviao2 in BANK4

    None.

Critical Paths under _tluzesescreve in BANK4

    None.

Critical Paths under _tluzes in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _aviao1 in BANK4

    None.

Critical Paths under _aviao2 in BANK4

    None.

Critical Paths under _aviao3 in BANK4

    None.

Critical Paths under _tluzes in BANK4

    None.

Critical Paths under _tluzesescreve in BANK4

    None.

Critical Paths under _int_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _aviao1 in BANK5

    None.

Critical Paths under _aviao2 in BANK5

    None.

Critical Paths under _tluzesescreve in BANK5

    None.

Critical Paths under _tluzes in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _aviao1 in BANK5

    None.

Critical Paths under _aviao2 in BANK5

    None.

Critical Paths under _aviao3 in BANK5

    None.

Critical Paths under _tluzes in BANK5

    None.

Critical Paths under _tluzesescreve in BANK5

    None.

Critical Paths under _int_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5732
                       _SRAMInitHeap
                         _confi_port
                        _create_task
                           _sem_init
                            _setupOS
                           _start_os
 ---------------------------------------------------------------------------------
 (1) _start_os                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupOS                                              0     0      0    2746
                       _SRAMInitHeap
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                         23    17      6    2588
                                             17 COMRAM    23    17      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                             17 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _sem_init                                             4     0      4     240
                                             17 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _confi_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao1                                               0     0      0   12221
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2    3282
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    4567
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao2                                               0     0      0   12221
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2    3282
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    4567
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzesescreve                                        0     0      0    4440
                        _create_pipe
                         _write_pipe
 ---------------------------------------------------------------------------------
 (5) _write_pipe                                           3     0      3    4354
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (5) _create_pipe                                          2     0      2      86
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzes                                               1     1      0    8761
                              _delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (5) _read_pipe                                            3     1      2    4343
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao1                                               0     0      0   12221
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2    3282
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    4567
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao2                                               0     0      0   12221
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2    3282
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    4567
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao3                                               0     0      0   12221
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2    3282
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    4567
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzes                                               1     1      0    8761
                              _delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (5) _read_pipe                                            3     1      2    4343
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    4372
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzesescreve                                        0     0      0    4440
                        _create_pipe
                         _write_pipe
 ---------------------------------------------------------------------------------
 (5) _write_pipe                                           3     0      3    4354
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 (5) _create_pipe                                          2     0      2      86
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _int_high                                            17    17      0    4222
                                              0 COMRAM    17    17      0
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1    2847
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0    1562
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4    1263
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     231
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _confi_port
   _create_task
     ___wmul
   _sem_init
   _setupOS
     _SRAMInitHeap
     _create_task
       ___wmul
   _start_os

 _aviao1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzesescreve (ROOT)
   _create_pipe
   _write_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzes (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _read_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _task_idle (ROOT)

 _aviao1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzes (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _read_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzesescreve (ROOT)
   _create_pipe
   _write_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _int_high (ROOT)
   ___wmul
   _dispatcher
     ___wmul
     _rr_scheduler
       ___lwmod
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      17       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AA       7       66.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     28      55       1       73.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      15        0.0%
DATA                 0      0     303       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Nov 18 11:52:58 2018

                     l29 1400                       l80 094A                      l181 15B4  
                    l175 14A0                      l169 12D8                      l291 16B6  
                    l292 16E4                      _BSR 000FE0                      u520 16C2  
                    u531 174C                      _TOS 000FFD            create_task@id 003D  
                    wreg 000FE8        SRAMInitHeap@pHeap 003F        SRAMInitHeap@count 003D  
                   l2021 167E                     l2013 1636                     l2031 1876  
                   l1615 1186                     l1703 06C2                     l1625 11F6  
                   l1803 0CFE                     l1723 08DC                     l1815 0E02  
                   l1841 0F5C                     l1665 1540                     l1829 0E5C  
                   l1793 108A                     l1779 1166                     STR_1 0603  
                   _TOSH 000FFE                     _TOSL 000FFD                     _WREG 000FE8  
                   _TOSU 000FFF                     _cont 0001                     _main 136C  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0054                     prodh 000FF4                     prodl 000FF3  
                   start 000C             ___param_bank 000000                    ?_main 002C  
        _tasks_installed 0005                    i2l103 0C52                    i2l104 0B94  
        __end_of___lwmod 122A                    i2l106 0C4E                    i2l108 0C7C  
                  _TMR0L 000FD6                    u51_20 1214                    _PORTB 000F81  
                  u72_20 165E                    u72_26 1660                    u73_20 1686  
                  u49_20 11AE                    u57_20 0B1A                    _TRISB 000F93  
                  u73_26 1688                    _TRISD 000F95                    u59_20 0F98  
                  _delay 17AC          create_task@task 0043                    tablat 000FF5  
                  ltemp0 0054                    ltemp1 0058                    ltemp2 005C  
        __end_of_setupOS 186A                    plusw0 000FEB                    plusw1 000FE3  
                  plusw2 000FDB                    ttemp0 0054                    ttemp1 0057  
                  ttemp2 005A                    ttemp3 005D                    status 000FD8  
                  wtemp0 0054                    wtemp1 0056                    wtemp2 0058  
                  wtemp3 005A                    wtemp4 005C                    wtemp5 005E  
                  wtemp6 0055          __initialization 175A             __end_of_main 1402  
                 ??_main 0054            __activetblptr 000001   __size_of_tluzesescreve 001E  
                 _STATUS 000FD8                   _STKPTR 000FFC     __size_of_create_pipe 00A6  
   __size_of_create_task 0058                   ___wmul 1402                   _aviao1 12D0  
                 _aviao2 1498                   _aviao3 15AC                   clear_0 177A  
                 clear_1 178C                   clear_2 1798         __end_of_int_high 0CB2  
       create_task@prior 003F                   _spista 0007                   _tluzes 1630  
       __end_of_sem_init 1832         __end_of_sem_wait 116E         __end_of_sem_post 1092  
           __pdataCOMRAM 0060             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_setupOS 0054  
       __end_of_start_os 1892               __accesstop 0080  __end_of__initialization 179E  
          ___rparam_used 000001           __pcstackCOMRAM 002C               ___inthi_sp 0472  
          __end_of_delay 17F4            _tluzesescreve 186A               __pbssBANK1 0100  
          __uDynamicHeap 01AA       __size_of_read_pipe 0160                  ?_aviao3 002C  
     __size_of_task_idle 0004                  _F_APTOS 0100               _confi_port 1888  
             _dispatcher 0606                ?_int_high 002C                  __Hparam 0000  
              ?_sem_init 003D                  __Lparam 0000       __end_of_STACK_SIZE 0603  
        __size_of___wmul 0096                  ___lwmod 116E             __psmallconst 0600  
              ?_start_os 002C          __size_of_aviao1 009C          __size_of_aviao2 0090  
        __size_of_aviao3 0084                  __pcinit 175A                  __ramtop 0600  
          ?_SRAMInitHeap 002C                  __ptext0 136C                  __ptext1 188E  
                __ptext2 1832                  __ptext3 1702                  __ptext4 1402  
                __ptext5 16A8                  __ptext6 17F4                  __ptext7 1888  
                __ptext8 12D0                  __ptext9 1092                _T0CONbits 000FD5  
        __size_of_tluzes 0078        __end_of_read_pipe 0E12                  _setupOS 1832  
      create_task@task_f 0041                  _quantum 0060           __pintcode_body 0B46  
   end_of_initialization 179E        __end_of_task_idle 1896                  int_func 0B46  
             ??_int_high 002C               ??_sem_init 0041                  postdec0 000FED  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_start_os 003D  
         ??_SRAMInitHeap 003D                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISCbits 000F94  
            ?_confi_port 002C            sem_init@value 003F            ??_create_task 0043  
         __end_of___wmul 1498            __pidataCOMRAM 1896           __end_of_aviao1 136C  
         __end_of_aviao2 1528           __end_of_aviao3 1630               _write_pipe 0E12  
         __end_of_tluzes 16A8      start_initialization 175A      __end_of_create_pipe 12D0  
    __end_of_create_task 175A      __size_of_confi_port 0006      __size_of_dispatcher 0540  
               ??_aviao3 003D              __pbssBIGRAM 01AA              __pbssCOMRAM 0001  
   __end_of_SRAMInitHeap 1702        __size_of_int_high 0CAA                __pintcode 0008  
      __size_of_sem_init 003E        __size_of_sem_wait 00DC        __size_of_sem_post 012C  
      __size_of_start_os 0004              __smallconst 0600                 ?_setupOS 002C  
         __size_of_delay 0048     __end_of_rr_scheduler 15AC                _read_pipe 0CB2  
            _create_pipe 122A              _create_task 1702                _task_idle 1892  
              _pipeluzes 0021             ??_confi_port 003D      __size_of_write_pipe 0154  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
     __end_of_confi_port 188E                int_high@i 003B       __end_of_dispatcher 0B46  
  __end_of_tluzesescreve 1888         __size_of___lwmod 00BC    __size_of_SRAMInitHeap 005A  
               __ptext10 0F66                 __ptext11 17AC                 __ptext20 0CB2  
               __ptext12 0606                 __ptext21 1892                 __ptext13 1528  
               __ptext22 15AC                 __ptext14 116E                 __ptext15 1498  
               __ptext16 186A                 __ptext17 0E12                 __ptext18 122A  
               __ptext19 1630         __size_of_setupOS 0038                sem_init@s 003D  
          __size_of_main 0096                 _int_high 0008                 _sem_init 17F4  
               _sem_wait 1092                 _sem_post 0F66             _task_running 0003  
               _start_os 188E             _SRAMInitHeap 16A8    __size_of_rr_scheduler 0084  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
           _rr_scheduler 1528               _STACK_SIZE 0601             ?_create_task 003D  
     __end_of_write_pipe 0F66  
