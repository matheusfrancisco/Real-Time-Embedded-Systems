

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Nov 17 19:49:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;;_task	offset	0
    78 ;;_id	offset=-2 (param)
    79 ;;_prior	offset=-4 (param)
    80 ;;_task_f	offset=-6 (param)
    81 ;;_product	offset	0
    82 ;;_multiplier	offset=-2 (param)
    83 ;;_multiplicand	offset=-4 (param)
    84 ;;_count	offset	0
    85 ;;_pHeap	offset	2
    86 ;;_s	offset=-2 (param)
    87 ;;_value	offset=-4 (param)
    88 ;;_s	offset=-2 (param)
    89 ;;_s	offset=-2 (param)
    90 ;;_time_ms	offset=-2 (param)
    91 ;;_state	offset=-1 (param)
    92 ;;_next_task_to_run	offset	0
    93 ;;_product	offset	0
    94 ;;_multiplier	offset=-2 (param)
    95 ;;_multiplicand	offset=-4 (param)
    96 ;;_counter	offset	0
    97 ;;_dividend	offset=-2 (param)
    98 ;;_divisor	offset=-4 (param)
    99 ;;_pipe	offset=-2 (param)
   100 ;;_data	offset=-3 (param)
   101 ;;_pipe	offset=-2 (param)
   102 ;;_dado	offset	0
   103 ;;_dado	offset	0
   104 ;;_pipe	offset=-2 (param)
   105 ;;_state	offset=-1 (param)
   106 ;;_next_task_to_run	offset	0
   107 ;;_product	offset	0
   108 ;;_multiplier	offset=-2 (param)
   109 ;;_multiplicand	offset=-4 (param)
   110 ;;_counter	offset	0
   111 ;;_dividend	offset=-2 (param)
   112 ;;_divisor	offset=-4 (param)
   113                           
   114                           	psect	idataCOMRAM
   115  0019C6                     __pidataCOMRAM:
   116                           	opt stack 0
   117                           
   118                           ;initializer for _quantum
   119  0019C6  0004               	dw	4
   120                           
   121                           	psect	smallconst
   122  000600                     __psmallconst:
   123                           	opt stack 0
   124  000600  00                 	db	0
   125  000601  001F               	dw	31
   126  000603                     __end_of_STACK_SIZE:
   127                           	opt stack 0
   128  0000                     _TOS	set	4093
   129  0000                     _PORTCbits	set	3970
   130  0000                     _TRISCbits	set	3988
   131  0000                     _TRISD	set	3989
   132  0000                     _TMR0L	set	4054
   133  0000                     _T0CONbits	set	4053
   134  0000                     _PORTDbits	set	3971
   135  0000                     _TRISDbits	set	3989
   136  0000                     _STKPTR	set	4092
   137  0000                     _TOSH	set	4094
   138  0000                     _TOSL	set	4093
   139  0000                     _TOSU	set	4095
   140  0000                     _WREG	set	4072
   141  0000                     _STATUS	set	4056
   142  0000                     _BSR	set	4064
   143  0000                     _INTCONbits	set	4082
   144  000603  00                 	db	0	; dummy byte at the end
   145  0000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149  0018AE                     __pcinit:
   150                           	opt stack 0
   151  0018AE                     start_initialization:
   152                           	opt stack 0
   153  0018AE                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (2 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158  0018AE  0EC6               	movlw	low __pidataCOMRAM
   159  0018B0  6EF6               	movwf	tblptrl,c
   160  0018B2  0E19               	movlw	high __pidataCOMRAM
   161  0018B4  6EF7               	movwf	tblptrh,c
   162  0018B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163  0018B8  6EF8               	movwf	tblptru,c
   164  0018BA  0009               	tblrd		*+	;fetch initializer
   165  0018BC  CFF5 F047          	movff	tablat,__pdataCOMRAM
   166  0018C0  0009               	tblrd		*+	;fetch initializer
   167  0018C2  CFF5 F048          	movff	tablat,__pdataCOMRAM+1
   168                           
   169                           ; Clear objects allocated to BIGRAM (512 bytes)
   170  0018C6  EE01  F0AA         	lfsr	0,__pbssBIGRAM
   171  0018CA  EE22 F000          	lfsr	2,512
   172  0018CE                     clear_0:
   173  0018CE  6AEE               	clrf	postinc0,c
   174  0018D0  50DD               	movf	postdec2,w,c
   175  0018D2  50D9               	movf	fsr2l,w,c
   176  0018D4  E1FC               	bnz	clear_0
   177  0018D6  50DA               	movf	fsr2h,w,c
   178  0018D8  E1FA               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BANK1 (170 bytes)
   181  0018DA  EE01  F000         	lfsr	0,__pbssBANK1
   182  0018DE  0EAA               	movlw	170
   183  0018E0                     clear_1:
   184  0018E0  6AEE               	clrf	postinc0,c
   185  0018E2  06E8               	decf	wreg,f,c
   186  0018E4  E1FD               	bnz	clear_1
   187                           
   188                           ; Clear objects allocated to COMRAM (41 bytes)
   189  0018E6  EE00  F001         	lfsr	0,__pbssCOMRAM
   190  0018EA  0E29               	movlw	41
   191  0018EC                     clear_2:
   192  0018EC  6AEE               	clrf	postinc0,c
   193  0018EE  06E8               	decf	wreg,f,c
   194  0018F0  E1FD               	bnz	clear_2
   195  0018F2                     end_of_initialization:
   196                           	opt stack 0
   197  0018F2                     __end_of__initialization:
   198                           	opt stack 0
   199  0018F2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   200  0018F4  6EF8               	movwf	tblptru,c
   201  0018F6  0E06               	movlw	high __Lsmallconst
   202  0018F8  6EF7               	movwf	tblptrh,c
   203  0018FA  0100               	movlb	0
   204  0018FC  EFE1  F009         	goto	_main	;jump to C main() function
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           postdec2	equ	0xFDD
   212                           fsr2h	equ	0xFDA
   213                           fsr2l	equ	0xFD9
   214                           
   215                           	psect	bssCOMRAM
   216  000001                     __pbssCOMRAM:
   217                           	opt stack 0
   218  000001                     _task_running:
   219                           	opt stack 0
   220  000001                     	ds	2
   221  000003                     _tasks_installed:
   222                           	opt stack 0
   223  000003                     	ds	2
   224  000005                     _spista:
   225                           	opt stack 0
   226  000005                     	ds	26
   227  00001F                     _pipeluzes:
   228                           	opt stack 0
   229  00001F                     	ds	11
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec2	equ	0xFDD
   237                           fsr2h	equ	0xFDA
   238                           fsr2l	equ	0xFD9
   239                           
   240                           	psect	dataCOMRAM
   241  000047                     __pdataCOMRAM:
   242                           	opt stack 0
   243  000047                     _quantum:
   244                           	opt stack 0
   245  000047                     	ds	2
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           postdec2	equ	0xFDD
   253                           fsr2h	equ	0xFDA
   254                           fsr2l	equ	0xFD9
   255                           
   256                           	psect	bssBANK1
   257  000100                     __pbssBANK1:
   258                           	opt stack 0
   259  000100                     _F_APTOS:
   260                           	opt stack 0
   261  000100                     	ds	170
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec2	equ	0xFDD
   269                           fsr2h	equ	0xFDA
   270                           fsr2l	equ	0xFD9
   271                           
   272                           	psect	bssBIGRAM
   273  0001AA                     __pbssBIGRAM:
   274                           	opt stack 0
   275  0001AA                     __uDynamicHeap:
   276                           	opt stack 0
   277  0001AA                     	ds	512
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec2	equ	0xFDD
   285                           fsr2h	equ	0xFDA
   286                           fsr2l	equ	0xFD9
   287                           
   288                           	psect	cstackCOMRAM
   289  00002A                     __pcstackCOMRAM:
   290                           	opt stack 0
   291  00002A                     ??_int_high:
   292                           
   293                           ; 1 bytes @ 0x0
   294  00002A                     	ds	15
   295  000039                     int_high@i:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0xF
   299  000039                     	ds	2
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec2	equ	0xFDD
   307                           fsr2h	equ	0xFDA
   308                           fsr2l	equ	0xFD9
   309                           
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 16 in file "main.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1  [STACK] void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, pro
      +dl, prodh
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   329 ;;      Params:         0       0       0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0       0       0
   332 ;;      Totals:         0       0       0       0       0       0       0
   333 ;;Total ram usage:        0 bytes
   334 ;; Hardware stack levels required when called:   12
   335 ;; This function calls:
   336 ;;		_SRAMInitHeap
   337 ;;		_confi_port
   338 ;;		_create_task
   339 ;;		_sem_init
   340 ;;		_setupOS
   341 ;;		_start_os
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348  0013C2                     __ptext0:
   349                           	opt stack 0
   350  0013C2                     _main:
   351                           	opt stack 19
   352                           
   353                           ;main.c: 18: setupOS();
   354                           
   355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
   356                           ;incstack = 0
   357  0013C2  ECA4  F00C         	call	_setupOS	;wreg free
   358                           
   359                           ;main.c: 19: SRAMInitHeap();
   360  0013C6  ECB6  F008         	call	_SRAMInitHeap	;wreg free
   361                           
   362                           ;main.c: 20: extern sem_t spista;
   363                           ;main.c: 22: confi_port();
   364  0013CA  ECE1  F00C         	call	_confi_port	;wreg free
   365                           
   366                           ;main.c: 23: sem_init(&spista, 1);
   367  0013CE  0E01               	movlw	1
   368  0013D0  6EE6               	movwf	postinc1,c
   369  0013D2  0E00               	movlw	0
   370  0013D4  6EE6               	movwf	postinc1,c
   371  0013D6  0E05               	movlw	low _spista
   372  0013D8  6EE6               	movwf	postinc1,c
   373  0013DA  0E00               	movlw	high _spista
   374  0013DC  6EE6               	movwf	postinc1,c
   375  0013DE  EC1F  F00C         	call	_sem_init	;wreg free
   376                           
   377                           ;main.c: 27: create_task(2, 3, &aviao1);
   378  0013E2  0EB0               	movlw	low _aviao1
   379  0013E4  6EE6               	movwf	postinc1,c
   380  0013E6  0E15               	movlw	high _aviao1
   381  0013E8  6EE6               	movwf	postinc1,c
   382  0013EA  0E03               	movlw	3
   383  0013EC  6EE6               	movwf	postinc1,c
   384  0013EE  0E00               	movlw	0
   385  0013F0  6EE6               	movwf	postinc1,c
   386  0013F2  0E02               	movlw	2
   387  0013F4  6EE6               	movwf	postinc1,c
   388  0013F6  0E00               	movlw	0
   389  0013F8  6EE6               	movwf	postinc1,c
   390  0013FA  EC1D  F009         	call	_create_task	;wreg free
   391                           
   392                           ;main.c: 28: create_task(3, 3, &aviao2);
   393  0013FE  0E42               	movlw	low _aviao2
   394  001400  6EE6               	movwf	postinc1,c
   395  001402  0E16               	movlw	high _aviao2
   396  001404  6EE6               	movwf	postinc1,c
   397  001406  0E03               	movlw	3
   398  001408  6EE6               	movwf	postinc1,c
   399  00140A  0E00               	movlw	0
   400  00140C  6EE6               	movwf	postinc1,c
   401  00140E  0E03               	movlw	3
   402  001410  6EE6               	movwf	postinc1,c
   403  001412  0E00               	movlw	0
   404  001414  6EE6               	movwf	postinc1,c
   405  001416  EC1D  F009         	call	_create_task	;wreg free
   406                           
   407                           ;main.c: 29: create_task(4, 3, &aviao3);
   408  00141A  0E4C               	movlw	low _aviao3
   409  00141C  6EE6               	movwf	postinc1,c
   410  00141E  0E17               	movlw	high _aviao3
   411  001420  6EE6               	movwf	postinc1,c
   412  001422  0E03               	movlw	3
   413  001424  6EE6               	movwf	postinc1,c
   414  001426  0E00               	movlw	0
   415  001428  6EE6               	movwf	postinc1,c
   416  00142A  0E04               	movlw	4
   417  00142C  6EE6               	movwf	postinc1,c
   418  00142E  0E00               	movlw	0
   419  001430  6EE6               	movwf	postinc1,c
   420  001432  EC1D  F009         	call	_create_task	;wreg free
   421                           
   422                           ;main.c: 32: create_task(5, 3, &tluzesescreve);
   423  001436  0EA0               	movlw	low _tluzesescreve
   424  001438  6EE6               	movwf	postinc1,c
   425  00143A  0E19               	movlw	high _tluzesescreve
   426  00143C  6EE6               	movwf	postinc1,c
   427  00143E  0E03               	movlw	3
   428  001440  6EE6               	movwf	postinc1,c
   429  001442  0E00               	movlw	0
   430  001444  6EE6               	movwf	postinc1,c
   431  001446  0E05               	movlw	5
   432  001448  6EE6               	movwf	postinc1,c
   433  00144A  0E00               	movlw	0
   434  00144C  6EE6               	movwf	postinc1,c
   435  00144E  EC1D  F009         	call	_create_task	;wreg free
   436                           
   437                           ;main.c: 33: create_task(6, 3, &tluzes);
   438  001452  0EC6               	movlw	low _tluzes
   439  001454  6EE6               	movwf	postinc1,c
   440  001456  0E17               	movlw	high _tluzes
   441  001458  6EE6               	movwf	postinc1,c
   442  00145A  0E03               	movlw	3
   443  00145C  6EE6               	movwf	postinc1,c
   444  00145E  0E00               	movlw	0
   445  001460  6EE6               	movwf	postinc1,c
   446  001462  0E06               	movlw	6
   447  001464  6EE6               	movwf	postinc1,c
   448  001466  0E00               	movlw	0
   449  001468  6EE6               	movwf	postinc1,c
   450  00146A  EC1D  F009         	call	_create_task	;wreg free
   451                           
   452                           ;main.c: 46: start_os();
   453  00146E  ECDF  F00C         	call	_start_os	;wreg free
   454  001472                     l31:
   455                           
   456                           ;main.c: 48: {
   457  001472  D7FF               	goto	l31
   458  001474                     __end_of_main:
   459                           	opt stack 0
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           postinc1	equ	0xFE6
   467                           postdec2	equ	0xFDD
   468                           fsr2h	equ	0xFDA
   469                           fsr2l	equ	0xFD9
   470                           
   471 ;; *************** function _start_os *****************
   472 ;; Defined at:
   473 ;;		line 147 in file "kernel.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1  [STACK] void 
   480 ;; Registers used:
   481 ;;		None
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   487 ;;      Params:         0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    9
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502  0019BE                     __ptext1:
   503                           	opt stack 0
   504  0019BE                     _start_os:
   505                           	opt stack 21
   506                           
   507                           ;kernel.c: 151: T0CONbits.TMR0ON = 1;
   508                           
   509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
   510                           ;incstack = 0
   511  0019BE  8ED5               	bsf	4053,7,c	;volatile
   512                           
   513                           ; _start_os: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
   514  0019C0  0012               	return		;funcret
   515  0019C2                     __end_of_start_os:
   516                           	opt stack 0
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postinc1	equ	0xFE6
   524                           postdec2	equ	0xFDD
   525                           fsr2h	equ	0xFDA
   526                           fsr2l	equ	0xFD9
   527                           
   528 ;; *************** function _setupOS *****************
   529 ;; Defined at:
   530 ;;		line 85 in file "kernel.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1  [STACK] void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, pro
      +dl, prodh
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:   11
   551 ;; This function calls:
   552 ;;		_SRAMInitHeap
   553 ;;		_create_task
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a reentrant model
   557 ;;
   558                           
   559                           	psect	text2
   560  001948                     __ptext2:
   561                           	opt stack 0
   562  001948                     _setupOS:
   563                           	opt stack 19
   564                           
   565                           ;kernel.c: 97: T0CONbits.T0CS = 0;
   566                           
   567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
   568                           ;incstack = 0
   569  001948  9AD5               	bcf	4053,5,c	;volatile
   570                           
   571                           ;kernel.c: 98: T0CONbits.PSA = 0;
   572  00194A  96D5               	bcf	4053,3,c	;volatile
   573                           
   574                           ;kernel.c: 99: T0CONbits.T0PS = 0b111;
   575  00194C  0E07               	movlw	7
   576  00194E  12D5               	iorwf	4053,f,c	;volatile
   577                           
   578                           ;kernel.c: 100: INTCONbits.PEIE = 1;
   579  001950  8CF2               	bsf	intcon,6,c	;volatile
   580                           
   581                           ;kernel.c: 101: INTCONbits.TMR0IE = 1;
   582  001952  8AF2               	bsf	intcon,5,c	;volatile
   583                           
   584                           ;kernel.c: 102: TMR0L = 252;
   585  001954  0EFC               	movlw	252
   586  001956  6ED6               	movwf	4054,c	;volatile
   587                           
   588                           ;kernel.c: 104: T0CONbits.TMR0ON = 1;
   589  001958  8ED5               	bsf	4053,7,c	;volatile
   590                           
   591                           ;kernel.c: 109: create_task(1,5, &task_idle);
   592  00195A  0E7E               	movlw	low _task_idle
   593  00195C  6EE6               	movwf	postinc1,c
   594  00195E  0E19               	movlw	high _task_idle
   595  001960  6EE6               	movwf	postinc1,c
   596  001962  0E05               	movlw	5
   597  001964  6EE6               	movwf	postinc1,c
   598  001966  0E00               	movlw	0
   599  001968  6EE6               	movwf	postinc1,c
   600  00196A  0E01               	movlw	1
   601  00196C  6EE6               	movwf	postinc1,c
   602  00196E  0E00               	movlw	0
   603  001970  6EE6               	movwf	postinc1,c
   604  001972  EC1D  F009         	call	_create_task	;wreg free
   605                           
   606                           ;kernel.c: 116: SRAMInitHeap();
   607  001976  ECB6  F008         	call	_SRAMInitHeap	;wreg free
   608                           
   609                           ;kernel.c: 118: (INTCONbits.GIE = 1);
   610  00197A  8EF2               	bsf	intcon,7,c	;volatile
   611                           
   612                           ; _setupOS: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
   613  00197C  0012               	return		;funcret
   614  00197E                     __end_of_setupOS:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           intcon	equ	0xFF2
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           postinc1	equ	0xFE6
   624                           postdec2	equ	0xFDD
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           
   628 ;; *************** function _create_task *****************
   629 ;; Defined at:
   630 ;;		line 21 in file "kernel.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  id              2  [STACK] unsigned int 
   633 ;;  prior           2  [STACK] unsigned int 
   634 ;;  task_f          2  [STACK] PTR FTN()void 
   635 ;;		 -> task_idle(1), tluzes(1), tluzesescreve(1), aviao3(1), 
   636 ;;		 -> aviao2(1), aviao1(1), 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  task           17  [STACK] struct tcb
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1  [STACK] void 
   641 ;; Registers used:
   642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   648 ;;      Params:         0       0       0       0       0       0       0
   649 ;;      Locals:         0       0       0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0
   651 ;;      Totals:         0       0       0       0       0       0       0
   652 ;;Total ram usage:        0 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:   10
   655 ;; This function calls:
   656 ;;		___wmul
   657 ;; This function is called by:
   658 ;;		_main
   659 ;;		_setupOS
   660 ;; This function uses a reentrant model
   661 ;;
   662                           
   663                           	psect	text3
   664  00123A                     __ptext3:
   665                           	opt stack 0
   666  00123A                     _create_task:
   667                           	opt stack 0
   668                           
   669                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0
   670  00123A  0E11               	movlw	17
   671  00123C  26E1               	addwf	fsr1l,f,c
   672  00123E  0E00               	movlw	0
   673  001240  22E2               	addwfc	fsr1h,f,c
   674                           
   675                           ;kernel.c: 24: tcb_t task;
   676                           ;kernel.c: 26: task.task_id = id;
   677                           ;stkvar	_id @ sp[(-17)+-2]
   678                           ;stkvar	_task @ sp[(-17)+0]
   679                           
   680                           ;incstack = 0
   681  001242  0EED               	movlw	-19
   682  001244  CFE3 F03B          	movff	plusw1,btemp
   683  001248  0EEF               	movlw	-17
   684  00124A  C03B  FFE3         	movff	btemp,plusw1
   685  00124E  0EEE               	movlw	-18
   686  001250  CFE3 F03B          	movff	plusw1,btemp
   687  001254  0EF0               	movlw	-16
   688  001256  C03B  FFE3         	movff	btemp,plusw1
   689                           
   690                           ;kernel.c: 27: task.task_prior = prior;
   691                           ;stkvar	_prior @ sp[(-17)+-4]
   692  00125A  50E1               	movf	fsr1l,w,c
   693  00125C  0FEB               	addlw	-21
   694  00125E  6ED9               	movwf	fsr2l,c
   695  001260  50E2               	movf	fsr1h,w,c
   696  001262  6EDA               	movwf	fsr2h,c
   697  001264  0EFF               	movlw	255
   698  001266  22DA               	addwfc	fsr2h,f,c
   699                           
   700                           ;stkvar	_task @ sp[(-17)+0]
   701  001268  0EF1               	movlw	241
   702  00126A  24E1               	addwf	fsr1l,w,c
   703  00126C  6EE9               	movwf	fsr0l,c
   704  00126E  0EFF               	movlw	255
   705  001270  20E2               	addwfc	fsr1h,w,c
   706  001272  6EEA               	movwf	fsr0h,c
   707  001274  CFDE FFEE          	movff	postinc2,postinc0
   708  001278  CFDD FFED          	movff	postdec2,postdec0
   709                           
   710                           ;kernel.c: 28: task.task_f = task_f;
   711                           ;stkvar	_task_f @ sp[(-17)+-6]
   712  00127C  50E1               	movf	fsr1l,w,c
   713  00127E  0FE9               	addlw	-23
   714  001280  6ED9               	movwf	fsr2l,c
   715  001282  50E2               	movf	fsr1h,w,c
   716  001284  6EDA               	movwf	fsr2h,c
   717  001286  0EFF               	movlw	255
   718  001288  22DA               	addwfc	fsr2h,f,c
   719                           
   720                           ;stkvar	_task @ sp[(-17)+0]
   721  00128A  0EF3               	movlw	243
   722  00128C  24E1               	addwf	fsr1l,w,c
   723  00128E  6EE9               	movwf	fsr0l,c
   724  001290  0EFF               	movlw	255
   725  001292  20E2               	addwfc	fsr1h,w,c
   726  001294  6EEA               	movwf	fsr0h,c
   727  001296  CFDE FFEE          	movff	postinc2,postinc0
   728  00129A  CFDD FFED          	movff	postdec2,postdec0
   729                           
   730                           ;kernel.c: 29: task.task_stack.stack_size = 0;
   731                           ;stkvar	_task @ sp[(-17)+0]
   732  00129E  0EFB               	movlw	251
   733  0012A0  24E1               	addwf	fsr1l,w,c
   734  0012A2  6ED9               	movwf	fsr2l,c
   735  0012A4  0EFF               	movlw	255
   736  0012A6  20E2               	addwfc	fsr1h,w,c
   737  0012A8  6EDA               	movwf	fsr2h,c
   738  0012AA  0E00               	movlw	0
   739  0012AC  6EDE               	movwf	postinc2,c
   740  0012AE  0E00               	movlw	0
   741  0012B0  6EDD               	movwf	postdec2,c
   742                           
   743                           ;kernel.c: 30: task.task_state = READY;
   744                           ;stkvar	_task @ sp[(-17)+0]
   745  0012B2  0EF7               	movlw	247
   746  0012B4  24E1               	addwf	fsr1l,w,c
   747  0012B6  6ED9               	movwf	fsr2l,c
   748  0012B8  0EFF               	movlw	255
   749  0012BA  20E2               	addwfc	fsr1h,w,c
   750  0012BC  6EDA               	movwf	fsr2h,c
   751  0012BE  0E01               	movlw	1
   752  0012C0  6EDF               	movwf	indf2,c
   753                           
   754                           ;kernel.c: 32: F_APTOS[tasks_installed] = task;
   755  0012C2  0E11               	movlw	17
   756  0012C4  6EE6               	movwf	postinc1,c
   757  0012C6  0E00               	movlw	0
   758  0012C8  6EE6               	movwf	postinc1,c
   759  0012CA  C003  FFE6         	movff	_tasks_installed,postinc1
   760  0012CE  C004  FFE6         	movff	_tasks_installed+1,postinc1
   761  0012D2  EC8D  F00A         	call	___wmul	;wreg free
   762  0012D6  0E00               	movlw	low _F_APTOS
   763  0012D8  243B               	addwf	btemp,w,c
   764  0012DA  6EE9               	movwf	fsr0l,c
   765  0012DC  0E01               	movlw	high _F_APTOS
   766  0012DE  203C               	addwfc	btemp+1,w,c
   767  0012E0  6EEA               	movwf	fsr0h,c
   768                           
   769                           ;stkvar	_task @ sp[(-17)+0]
   770  0012E2  0EEF               	movlw	239
   771  0012E4  24E1               	addwf	fsr1l,w,c
   772  0012E6  6ED9               	movwf	fsr2l,c
   773  0012E8  0EFF               	movlw	255
   774  0012EA  20E2               	addwfc	fsr1h,w,c
   775  0012EC  6EDA               	movwf	fsr2h,c
   776  0012EE  0E10               	movlw	16
   777  0012F0                     u311:
   778  0012F0  CFDB FFEB          	movff	plusw2,plusw0
   779  0012F4  06E8               	decf	wreg,f,c
   780  0012F6  E2FC               	bc	u311
   781                           
   782                           ;kernel.c: 33: tasks_installed++;
   783  0012F8  4A03               	infsnz	_tasks_installed,f,c
   784  0012FA  2A04               	incf	_tasks_installed+1,f,c
   785                           
   786                           ; _create_task: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, 
      +                          argsize = 6, vargsize = 0
   787  0012FC  0EE9               	movlw	233
   788  0012FE  26E1               	addwf	fsr1l,f,c
   789  001300  0EFF               	movlw	255
   790  001302  22E2               	addwfc	fsr1h,f,c
   791  001304  0012               	return		;funcret
   792  001306                     __end_of_create_task:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           tblptrl	equ	0xFF6
   797                           tablat	equ	0xFF5
   798                           intcon	equ	0xFF2
   799                           postinc0	equ	0xFEE
   800                           postdec0	equ	0xFED
   801                           plusw0	equ	0xFEB
   802                           fsr0h	equ	0xFEA
   803                           fsr0l	equ	0xFE9
   804                           wreg	equ	0xFE8
   805                           postinc1	equ	0xFE6
   806                           plusw1	equ	0xFE3
   807                           fsr1h	equ	0xFE2
   808                           fsr1l	equ	0xFE1
   809                           indf2	equ	0xFDF
   810                           postinc2	equ	0xFDE
   811                           postdec2	equ	0xFDD
   812                           plusw2	equ	0xFDB
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           
   816 ;; *************** function ___wmul *****************
   817 ;; Defined at:
   818 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  multiplier      2  [STACK] unsigned int 
   821 ;;  multiplicand    2  [STACK] unsigned int 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  product         2  [STACK] unsigned int 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  2  [STACK] unsigned int 
   826 ;; Registers used:
   827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0
   836 ;;      Totals:         0       0       0       0       0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    9
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_create_task
   844 ;;		_dispatcher
   845 ;;		_delay
   846 ;;		_int_high
   847 ;;		_rr_scheduler
   848 ;;		_sem_post
   849 ;;		_write_pipe
   850 ;;		_read_pipe
   851 ;; This function uses a reentrant model
   852 ;;
   853                           
   854                           	psect	text4
   855  00151A                     __ptext4:
   856                           	opt stack 0
   857  00151A                     ___wmul:
   858                           	opt stack 0
   859                           
   860                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
   861  00151A  52E6               	movf	postinc1,f,c
   862  00151C  52E6               	movf	postinc1,f,c
   863                           
   864                           ;stkvar	_multiplicand @ sp[(-2)+-4]
   865                           
   866                           ;incstack = 0
   867  00151E  0EFA               	movlw	-6
   868  001520  CFE3 F046          	movff	plusw1,btemp+11
   869                           
   870                           ;stkvar	_multiplier @ sp[(-2)+-2]
   871  001524  0EFC               	movlw	-4
   872  001526  50E3               	movf	plusw1,w,c
   873  001528  0246               	mulwf	btemp+11,c
   874                           
   875                           ;stkvar	_product @ sp[(-2)+0]
   876  00152A  0EFE               	movlw	-2
   877  00152C  CFF3 FFE3          	movff	prodl,plusw1
   878  001530  0EFF               	movlw	-1
   879  001532  CFF4 FFE3          	movff	prodh,plusw1
   880                           
   881                           ;stkvar	_multiplicand @ sp[(-2)+-4]
   882  001536  0EFB               	movlw	251
   883  001538  24E1               	addwf	fsr1l,w,c
   884  00153A  6ED9               	movwf	fsr2l,c
   885  00153C  0EFF               	movlw	255
   886  00153E  20E2               	addwfc	fsr1h,w,c
   887  001540  6EDA               	movwf	fsr2h,c
   888  001542  50DF               	movf	indf2,w,c
   889  001544  6E46               	movwf	btemp+11,c
   890                           
   891                           ;stkvar	_multiplier @ sp[(-2)+-2]
   892  001546  0EFC               	movlw	-4
   893  001548  50E3               	movf	plusw1,w,c
   894  00154A  0246               	mulwf	btemp+11,c
   895  00154C  CFF3 FFF4          	movff	prodl,prodh
   896  001550  6AF3               	clrf	prodl,c
   897                           
   898                           ;stkvar	_product @ sp[(-2)+0]
   899  001552  50E1               	movf	fsr1l,w,c
   900  001554  0FFE               	addlw	-2
   901  001556  6ED9               	movwf	fsr2l,c
   902  001558  50E2               	movf	fsr1h,w,c
   903  00155A  6EDA               	movwf	fsr2h,c
   904  00155C  0EFF               	movlw	255
   905  00155E  22DA               	addwfc	fsr2h,f,c
   906  001560  50F3               	movf	prodl,w,c
   907  001562  26DE               	addwf	postinc2,f,c
   908  001564  50F4               	movf	prodh,w,c
   909  001566  22DD               	addwfc	postdec2,f,c
   910                           
   911                           ;stkvar	_multiplicand @ sp[(-2)+-4]
   912  001568  0EFA               	movlw	-6
   913  00156A  CFE3 F046          	movff	plusw1,btemp+11
   914                           
   915                           ;stkvar	_multiplier @ sp[(-2)+-2]
   916  00156E  0EFD               	movlw	253
   917  001570  24E1               	addwf	fsr1l,w,c
   918  001572  6ED9               	movwf	fsr2l,c
   919  001574  0EFF               	movlw	255
   920  001576  20E2               	addwfc	fsr1h,w,c
   921  001578  6EDA               	movwf	fsr2h,c
   922  00157A  50DF               	movf	indf2,w,c
   923  00157C  0246               	mulwf	btemp+11,c
   924  00157E  CFF3 FFF4          	movff	prodl,prodh
   925  001582  6AF3               	clrf	prodl,c
   926                           
   927                           ;stkvar	_product @ sp[(-2)+0]
   928  001584  50E1               	movf	fsr1l,w,c
   929  001586  0FFE               	addlw	-2
   930  001588  6ED9               	movwf	fsr2l,c
   931  00158A  50E2               	movf	fsr1h,w,c
   932  00158C  6EDA               	movwf	fsr2h,c
   933  00158E  0EFF               	movlw	255
   934  001590  22DA               	addwfc	fsr2h,f,c
   935  001592  50F3               	movf	prodl,w,c
   936  001594  26DE               	addwf	postinc2,f,c
   937  001596  50F4               	movf	prodh,w,c
   938  001598  22DD               	addwfc	postdec2,f,c
   939                           
   940                           ;stkvar	_product @ sp[(-2)+0]
   941  00159A  0EFE               	movlw	-2
   942  00159C  CFE3 F03B          	movff	plusw1,btemp
   943  0015A0  0EFF               	movlw	-1
   944  0015A2  CFE3 F03C          	movff	plusw1,btemp+1
   945                           
   946                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
   947  0015A6  0EFA               	movlw	250
   948  0015A8  26E1               	addwf	fsr1l,f,c
   949  0015AA  0EFF               	movlw	255
   950  0015AC  22E2               	addwfc	fsr1h,f,c
   951  0015AE  0012               	return		;funcret
   952  0015B0                     __end_of___wmul:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           intcon	equ	0xFF2
   961                           postinc0	equ	0xFEE
   962                           postdec0	equ	0xFED
   963                           plusw0	equ	0xFEB
   964                           fsr0h	equ	0xFEA
   965                           fsr0l	equ	0xFE9
   966                           wreg	equ	0xFE8
   967                           postinc1	equ	0xFE6
   968                           plusw1	equ	0xFE3
   969                           fsr1h	equ	0xFE2
   970                           fsr1l	equ	0xFE1
   971                           indf2	equ	0xFDF
   972                           postinc2	equ	0xFDE
   973                           postdec2	equ	0xFDD
   974                           plusw2	equ	0xFDB
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           
   978 ;; *************** function _SRAMInitHeap *****************
   979 ;; Defined at:
   980 ;;		line 303 in file "memory.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  count           2  [STACK] unsigned int 
   985 ;;  pHeap           2  [STACK] near PTR unsigned char 
   986 ;;		 -> _uDynamicHeap(512), 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1  [STACK] void 
   989 ;; Registers used:
   990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    9
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;;		_setupOS
  1008 ;; This function uses a reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text5
  1012  00116C                     __ptext5:
  1013                           	opt stack 0
  1014  00116C                     _SRAMInitHeap:
  1015                           	opt stack 0
  1016                           
  1017                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1018  00116C  52E6               	movf	postinc1,f,c
  1019  00116E  52E6               	movf	postinc1,f,c
  1020  001170  52E6               	movf	postinc1,f,c
  1021  001172  52E6               	movf	postinc1,f,c
  1022                           
  1023                           ;memory.c: 305: unsigned char * near pHeap;
  1024                           ;memory.c: 306: near unsigned int count;
  1025                           ;memory.c: 308: pHeap = _uDynamicHeap;
  1026                           ;stkvar	_pHeap @ sp[(-4)+2]
  1027                           
  1028                           ;incstack = 0
  1029  001174  0E01               	movlw	high __uDynamicHeap
  1030  001176  6E3B               	movwf	btemp,c
  1031  001178  0EFF               	movlw	-1
  1032  00117A  C03B  FFE3         	movff	btemp,plusw1
  1033  00117E  0EAA               	movlw	low __uDynamicHeap
  1034  001180  6E3B               	movwf	btemp,c
  1035  001182  0EFE               	movlw	-2
  1036  001184  C03B  FFE3         	movff	btemp,plusw1
  1037                           
  1038                           ;memory.c: 309: count = 0x200-1;
  1039  001188  0EFF               	movlw	255
  1040  00118A  6E3C               	movwf	btemp+1,c
  1041  00118C  0E01               	movlw	1
  1042  00118E  6E3D               	movwf	btemp+2,c
  1043                           
  1044                           ;stkvar	_count @ sp[(-4)+0]
  1045  001190  0EFC               	movlw	-4
  1046  001192  C03C  FFE3         	movff	btemp+1,plusw1
  1047  001196  0EFD               	movlw	-3
  1048  001198  C03D  FFE3         	movff	btemp+2,plusw1
  1049  00119C                     l1384:
  1050                           
  1051                           ;memory.c: 312: {
  1052                           ;memory.c: 313: if (count > 0x7F)
  1053                           ;stkvar	_count @ sp[(-4)+0]
  1054  00119C  0EFD               	movlw	-3
  1055  00119E  50E3               	movf	plusw1,w,c
  1056  0011A0  E107               	bnz	u300
  1057  0011A2  0EFC               	movlw	-4
  1058  0011A4  CFE3 F03B          	movff	plusw1,btemp
  1059  0011A8  0E80               	movlw	128
  1060  0011AA  5E3B               	subwf	btemp,f,c
  1061  0011AC  A0D8               	btfss	status,0,c
  1062  0011AE  D023               	goto	l1392
  1063  0011B0                     u300:
  1064                           
  1065                           ;memory.c: 314: {
  1066                           ;memory.c: 315: *pHeap = 0x7F;
  1067                           ;stkvar	_pHeap @ sp[(-4)+2]
  1068  0011B0  0EFE               	movlw	-2
  1069  0011B2  CFE3 FFD9          	movff	plusw1,fsr2l
  1070  0011B6  0EFF               	movlw	-1
  1071  0011B8  CFE3 FFDA          	movff	plusw1,fsr2h
  1072  0011BC  0E7F               	movlw	127
  1073  0011BE  6EDF               	movwf	indf2,c
  1074                           
  1075                           ;memory.c: 316: pHeap += 0x7F;
  1076                           ;stkvar	_pHeap @ sp[(-4)+2]
  1077  0011C0  0EFE               	movlw	-2
  1078  0011C2  50E3               	movf	plusw1,w,c
  1079  0011C4  0F7F               	addlw	127
  1080  0011C6  6E3B               	movwf	btemp,c
  1081  0011C8  0EFE               	movlw	-2
  1082  0011CA  C03B  FFE3         	movff	btemp,plusw1
  1083  0011CE  6A3B               	clrf	btemp,c
  1084  0011D0  0EFF               	movlw	-1
  1085  0011D2  50E3               	movf	plusw1,w,c
  1086  0011D4  203B               	addwfc	btemp,w,c
  1087  0011D6  6E3B               	movwf	btemp,c
  1088  0011D8  0EFF               	movlw	-1
  1089  0011DA  C03B  FFE3         	movff	btemp,plusw1
  1090                           
  1091                           ;memory.c: 317: count = count - 0x7F;
  1092                           ;stkvar	_count @ sp[(-4)+0]
  1093  0011DE  50E1               	movf	fsr1l,w,c
  1094  0011E0  0FFC               	addlw	-4
  1095  0011E2  6ED9               	movwf	fsr2l,c
  1096  0011E4  50E2               	movf	fsr1h,w,c
  1097  0011E6  6EDA               	movwf	fsr2h,c
  1098  0011E8  0EFF               	movlw	255
  1099  0011EA  22DA               	addwfc	fsr2h,f,c
  1100  0011EC  0E81               	movlw	129
  1101  0011EE  26DE               	addwf	postinc2,f,c
  1102  0011F0  0EFF               	movlw	255
  1103  0011F2  22DD               	addwfc	postdec2,f,c
  1104                           
  1105                           ;memory.c: 318: }
  1106  0011F4  D7D3               	goto	l1384
  1107  0011F6                     l1392:
  1108                           
  1109                           ;memory.c: 319: else
  1110                           ;memory.c: 320: {
  1111                           ;memory.c: 321: *pHeap = count;
  1112                           ;stkvar	_count @ sp[(-4)+0]
  1113                           ;stkvar	_pHeap @ sp[(-4)+2]
  1114  0011F6  0EFE               	movlw	-2
  1115  0011F8  CFE3 FFD9          	movff	plusw1,fsr2l
  1116  0011FC  0EFF               	movlw	-1
  1117  0011FE  CFE3 FFDA          	movff	plusw1,fsr2h
  1118  001202  0EFC               	movlw	-4
  1119  001204  CFE3 FFDF          	movff	plusw1,indf2
  1120                           
  1121                           ;memory.c: 322: *(pHeap + count) = 0;
  1122                           ;stkvar	_count @ sp[(-4)+0]
  1123  001208  0EFC               	movlw	-4
  1124  00120A  CFE3 F03C          	movff	plusw1,btemp+1
  1125  00120E  0EFD               	movlw	-3
  1126  001210  CFE3 F03D          	movff	plusw1,btemp+2
  1127                           
  1128                           ;stkvar	_pHeap @ sp[(-4)+2]
  1129  001214  0EFE               	movlw	-2
  1130  001216  CFE3 F045          	movff	plusw1,btemp+10
  1131  00121A  0EFF               	movlw	-1
  1132  00121C  CFE3 F046          	movff	plusw1,btemp+11
  1133  001220  503C               	movf	btemp+1,w,c
  1134  001222  2445               	addwf	btemp+10,w,c
  1135  001224  6ED9               	movwf	fsr2l,c
  1136  001226  503D               	movf	btemp+2,w,c
  1137  001228  2046               	addwfc	btemp+11,w,c
  1138  00122A  6EDA               	movwf	fsr2h,c
  1139  00122C  0E00               	movlw	0
  1140  00122E  6EDF               	movwf	indf2,c
  1141                           
  1142                           ; _SRAMInitHeap: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  1143  001230  52E5               	movf	postdec1,f,c
  1144  001232  52E5               	movf	postdec1,f,c
  1145  001234  52E5               	movf	postdec1,f,c
  1146  001236  52E5               	movf	postdec1,f,c
  1147  001238  0012               	return		;funcret
  1148  00123A                     __end_of_SRAMInitHeap:
  1149                           	opt stack 0
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           prodh	equ	0xFF4
  1155                           prodl	equ	0xFF3
  1156                           intcon	equ	0xFF2
  1157                           postinc0	equ	0xFEE
  1158                           postdec0	equ	0xFED
  1159                           plusw0	equ	0xFEB
  1160                           fsr0h	equ	0xFEA
  1161                           fsr0l	equ	0xFE9
  1162                           wreg	equ	0xFE8
  1163                           postinc1	equ	0xFE6
  1164                           postdec1	equ	0xFE5
  1165                           plusw1	equ	0xFE3
  1166                           fsr1h	equ	0xFE2
  1167                           fsr1l	equ	0xFE1
  1168                           indf2	equ	0xFDF
  1169                           postinc2	equ	0xFDE
  1170                           postdec2	equ	0xFDD
  1171                           plusw2	equ	0xFDB
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function _sem_init *****************
  1177 ;; Defined at:
  1178 ;;		line 6 in file "semaphore.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  s               2  [STACK] PTR struct sem
  1181 ;;		 -> spista(26), 
  1182 ;;  value           2  [STACK] int 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1  [STACK] void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    9
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text6
  1209  00183E                     __ptext6:
  1210                           	opt stack 0
  1211  00183E                     _sem_init:
  1212                           	opt stack 21
  1213                           
  1214                           ;semaphore.c: 8: (INTCONbits.GIE = 0);
  1215                           
  1216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  1217                           ;incstack = 0
  1218  00183E  9EF2               	bcf	intcon,7,c	;volatile
  1219                           
  1220                           ;semaphore.c: 10: s->contador = value;
  1221                           ;stkvar	_value @ sp[(0)+-4]
  1222  001840  50E1               	movf	fsr1l,w,c
  1223  001842  0FFC               	addlw	-4
  1224  001844  6ED9               	movwf	fsr2l,c
  1225  001846  50E2               	movf	fsr1h,w,c
  1226  001848  6EDA               	movwf	fsr2h,c
  1227  00184A  0EFF               	movlw	255
  1228  00184C  22DA               	addwfc	fsr2h,f,c
  1229                           
  1230                           ;stkvar	_s @ sp[(0)+-2]
  1231  00184E  0EFE               	movlw	-2
  1232  001850  CFE3 FFE9          	movff	plusw1,fsr0l
  1233  001854  0EFF               	movlw	-1
  1234  001856  CFE3 FFEA          	movff	plusw1,fsr0h
  1235  00185A  CFDE FFEE          	movff	postinc2,postinc0
  1236  00185E  CFDD FFED          	movff	postdec2,postdec0
  1237                           
  1238                           ;semaphore.c: 11: s->queue.s_queue_pos_in = 0;
  1239                           ;stkvar	_s @ sp[(0)+-2]
  1240  001862  0EFE               	movlw	-2
  1241  001864  CFE3 F03C          	movff	plusw1,btemp+1
  1242  001868  0EFF               	movlw	-1
  1243  00186A  CFE3 F03D          	movff	plusw1,btemp+2
  1244  00186E  0E16               	movlw	22
  1245  001870  243C               	addwf	btemp+1,w,c
  1246  001872  6ED9               	movwf	fsr2l,c
  1247  001874  0E00               	movlw	0
  1248  001876  203D               	addwfc	btemp+2,w,c
  1249  001878  6EDA               	movwf	fsr2h,c
  1250  00187A  0E00               	movlw	0
  1251  00187C  6EDE               	movwf	postinc2,c
  1252  00187E  0E00               	movlw	0
  1253  001880  6EDD               	movwf	postdec2,c
  1254                           
  1255                           ;semaphore.c: 12: s->queue.s_queue_pos_out = 0;
  1256                           ;stkvar	_s @ sp[(0)+-2]
  1257  001882  0EFE               	movlw	-2
  1258  001884  CFE3 F03C          	movff	plusw1,btemp+1
  1259  001888  0EFF               	movlw	-1
  1260  00188A  CFE3 F03D          	movff	plusw1,btemp+2
  1261  00188E  0E18               	movlw	24
  1262  001890  243C               	addwf	btemp+1,w,c
  1263  001892  6ED9               	movwf	fsr2l,c
  1264  001894  0E00               	movlw	0
  1265  001896  203D               	addwfc	btemp+2,w,c
  1266  001898  6EDA               	movwf	fsr2h,c
  1267  00189A  0E00               	movlw	0
  1268  00189C  6EDE               	movwf	postinc2,c
  1269  00189E  0E00               	movlw	0
  1270  0018A0  6EDD               	movwf	postdec2,c
  1271                           
  1272                           ;semaphore.c: 14: (INTCONbits.GIE = 1);
  1273  0018A2  8EF2               	bsf	intcon,7,c	;volatile
  1274                           
  1275                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  1276  0018A4  52E5               	movf	postdec1,f,c
  1277  0018A6  52E5               	movf	postdec1,f,c
  1278  0018A8  52E5               	movf	postdec1,f,c
  1279  0018AA  52E5               	movf	postdec1,f,c
  1280  0018AC  0012               	return		;funcret
  1281  0018AE                     __end_of_sem_init:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           prodh	equ	0xFF4
  1288                           prodl	equ	0xFF3
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           postdec0	equ	0xFED
  1292                           plusw0	equ	0xFEB
  1293                           fsr0h	equ	0xFEA
  1294                           fsr0l	equ	0xFE9
  1295                           wreg	equ	0xFE8
  1296                           postinc1	equ	0xFE6
  1297                           postdec1	equ	0xFE5
  1298                           plusw1	equ	0xFE3
  1299                           fsr1h	equ	0xFE2
  1300                           fsr1l	equ	0xFE1
  1301                           indf2	equ	0xFDF
  1302                           postinc2	equ	0xFDE
  1303                           postdec2	equ	0xFDD
  1304                           plusw2	equ	0xFDB
  1305                           fsr2h	equ	0xFDA
  1306                           fsr2l	equ	0xFD9
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function _confi_port *****************
  1310 ;; Defined at:
  1311 ;;		line 21 in file "tasks.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1  [STACK] void 
  1318 ;; Registers used:
  1319 ;;		None
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         0       0       0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    9
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text7
  1340  0019C2                     __ptext7:
  1341                           	opt stack 0
  1342  0019C2                     _confi_port:
  1343                           	opt stack 21
  1344                           
  1345                           ;tasks.c: 23: TRISD = 0x00;
  1346                           
  1347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1348                           ;incstack = 0
  1349  0019C2  6A95               	clrf	3989,c	;volatile
  1350                           
  1351                           ; _confi_port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  1352  0019C4  0012               	return		;funcret
  1353  0019C6                     __end_of_confi_port:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           prodh	equ	0xFF4
  1360                           prodl	equ	0xFF3
  1361                           intcon	equ	0xFF2
  1362                           postinc0	equ	0xFEE
  1363                           postdec0	equ	0xFED
  1364                           plusw0	equ	0xFEB
  1365                           fsr0h	equ	0xFEA
  1366                           fsr0l	equ	0xFE9
  1367                           wreg	equ	0xFE8
  1368                           postinc1	equ	0xFE6
  1369                           postdec1	equ	0xFE5
  1370                           plusw1	equ	0xFE3
  1371                           fsr1h	equ	0xFE2
  1372                           fsr1l	equ	0xFE1
  1373                           indf2	equ	0xFDF
  1374                           postinc2	equ	0xFDE
  1375                           postdec2	equ	0xFDD
  1376                           plusw2	equ	0xFDB
  1377                           fsr2h	equ	0xFDA
  1378                           fsr2l	equ	0xFD9
  1379                           status	equ	0xFD8
  1380                           
  1381 ;; *************** function _aviao1 *****************
  1382 ;; Defined at:
  1383 ;;		line 27 in file "tasks.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1  [STACK] void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1397 ;;      Params:         0       0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    8
  1404 ;; This function calls:
  1405 ;;		_delay
  1406 ;;		_sem_post
  1407 ;;		_sem_wait
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text8
  1414  0015B0                     __ptext8:
  1415                           	opt stack 0
  1416  0015B0                     _aviao1:
  1417                           	opt stack 19
  1418                           
  1419                           ;tasks.c: 30: PORTDbits.RD3 = 0;
  1420                           
  1421                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1422                           ;incstack = 0
  1423  0015B0  9683               	bcf	3971,3,c	;volatile
  1424                           
  1425                           ;tasks.c: 31: PORTDbits.RD6 = 0;
  1426  0015B2  9C83               	bcf	3971,6,c	;volatile
  1427                           
  1428                           ;tasks.c: 32: PORTDbits.RD4 = 0;
  1429  0015B4  9883               	bcf	3971,4,c	;volatile
  1430                           
  1431                           ;tasks.c: 33: PORTDbits.RD0 = 0;
  1432  0015B6  9083               	bcf	3971,0,c	;volatile
  1433  0015B8                     l150:
  1434                           
  1435                           ;tasks.c: 37: PORTDbits.RD3 = 1;
  1436  0015B8  8683               	bsf	3971,3,c	;volatile
  1437                           
  1438                           ;tasks.c: 39: delay(5000);
  1439  0015BA  0E88               	movlw	136
  1440  0015BC  6EE6               	movwf	postinc1,c
  1441  0015BE  0E13               	movlw	19
  1442  0015C0  6EE6               	movwf	postinc1,c
  1443  0015C2  EC80  F00C         	call	_delay	;wreg free
  1444                           
  1445                           ;tasks.c: 41: sem_wait(&spista);
  1446  0015C6  0E05               	movlw	low _spista
  1447  0015C8  6EE6               	movwf	postinc1,c
  1448  0015CA  0E00               	movlw	high _spista
  1449  0015CC  6EE6               	movwf	postinc1,c
  1450  0015CE  EC48  F008         	call	_sem_wait	;wreg free
  1451                           
  1452                           ;tasks.c: 43: PORTDbits.RD3 = 0;
  1453  0015D2  9683               	bcf	3971,3,c	;volatile
  1454                           
  1455                           ;tasks.c: 45: PORTDbits.RD6 = 1;
  1456  0015D4  8C83               	bsf	3971,6,c	;volatile
  1457                           
  1458                           ;tasks.c: 47: delay(5000);
  1459  0015D6  0E88               	movlw	136
  1460  0015D8  6EE6               	movwf	postinc1,c
  1461  0015DA  0E13               	movlw	19
  1462  0015DC  6EE6               	movwf	postinc1,c
  1463  0015DE  EC80  F00C         	call	_delay	;wreg free
  1464                           
  1465                           ;tasks.c: 50: PORTDbits.RD6 = 0;
  1466  0015E2  9C83               	bcf	3971,6,c	;volatile
  1467                           
  1468                           ;tasks.c: 53: sem_post(&spista);
  1469  0015E4  0E05               	movlw	low _spista
  1470  0015E6  6EE6               	movwf	postinc1,c
  1471  0015E8  0E00               	movlw	high _spista
  1472  0015EA  6EE6               	movwf	postinc1,c
  1473  0015EC  ECB2  F007         	call	_sem_post	;wreg free
  1474                           
  1475                           ;tasks.c: 54: delay(300);
  1476  0015F0  0E2C               	movlw	44
  1477  0015F2  6EE6               	movwf	postinc1,c
  1478  0015F4  0E01               	movlw	1
  1479  0015F6  6EE6               	movwf	postinc1,c
  1480  0015F8  EC80  F00C         	call	_delay	;wreg free
  1481                           
  1482                           ;tasks.c: 57: PORTDbits.RD0 = 1;
  1483  0015FC  8083               	bsf	3971,0,c	;volatile
  1484                           
  1485                           ;tasks.c: 59: delay(5000);
  1486  0015FE  0E88               	movlw	136
  1487  001600  6EE6               	movwf	postinc1,c
  1488  001602  0E13               	movlw	19
  1489  001604  6EE6               	movwf	postinc1,c
  1490  001606  EC80  F00C         	call	_delay	;wreg free
  1491                           
  1492                           ;tasks.c: 63: sem_wait(&spista);
  1493  00160A  0E05               	movlw	low _spista
  1494  00160C  6EE6               	movwf	postinc1,c
  1495  00160E  0E00               	movlw	high _spista
  1496  001610  6EE6               	movwf	postinc1,c
  1497  001612  EC48  F008         	call	_sem_wait	;wreg free
  1498                           
  1499                           ;tasks.c: 65: PORTDbits.RD0 = 0;
  1500  001616  9083               	bcf	3971,0,c	;volatile
  1501                           
  1502                           ;tasks.c: 68: PORTDbits.RD4 = 1;
  1503  001618  8883               	bsf	3971,4,c	;volatile
  1504                           
  1505                           ;tasks.c: 70: delay(5000);
  1506  00161A  0E88               	movlw	136
  1507  00161C  6EE6               	movwf	postinc1,c
  1508  00161E  0E13               	movlw	19
  1509  001620  6EE6               	movwf	postinc1,c
  1510  001622  EC80  F00C         	call	_delay	;wreg free
  1511                           
  1512                           ;tasks.c: 72: PORTDbits.RD4 = 0;
  1513  001626  9883               	bcf	3971,4,c	;volatile
  1514                           
  1515                           ;tasks.c: 74: sem_post(&spista);
  1516  001628  0E05               	movlw	low _spista
  1517  00162A  6EE6               	movwf	postinc1,c
  1518  00162C  0E00               	movlw	high _spista
  1519  00162E  6EE6               	movwf	postinc1,c
  1520  001630  ECB2  F007         	call	_sem_post	;wreg free
  1521                           
  1522                           ;tasks.c: 75: delay(400);
  1523  001634  0E90               	movlw	144
  1524  001636  6EE6               	movwf	postinc1,c
  1525  001638  0E01               	movlw	1
  1526  00163A  6EE6               	movwf	postinc1,c
  1527  00163C  EC80  F00C         	call	_delay	;wreg free
  1528  001640  D7BB               	goto	l150
  1529  001642                     __end_of_aviao1:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           prodh	equ	0xFF4
  1536                           prodl	equ	0xFF3
  1537                           intcon	equ	0xFF2
  1538                           postinc0	equ	0xFEE
  1539                           postdec0	equ	0xFED
  1540                           plusw0	equ	0xFEB
  1541                           fsr0h	equ	0xFEA
  1542                           fsr0l	equ	0xFE9
  1543                           wreg	equ	0xFE8
  1544                           postinc1	equ	0xFE6
  1545                           postdec1	equ	0xFE5
  1546                           plusw1	equ	0xFE3
  1547                           fsr1h	equ	0xFE2
  1548                           fsr1l	equ	0xFE1
  1549                           indf2	equ	0xFDF
  1550                           postinc2	equ	0xFDE
  1551                           postdec2	equ	0xFDD
  1552                           plusw2	equ	0xFDB
  1553                           fsr2h	equ	0xFDA
  1554                           fsr2l	equ	0xFD9
  1555                           status	equ	0xFD8
  1556                           
  1557 ;; *************** function _sem_wait *****************
  1558 ;; Defined at:
  1559 ;;		line 17 in file "semaphore.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  s               2  [STACK] PTR struct sem
  1562 ;;		 -> spista(26), 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1  [STACK] void 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1574 ;;      Params:         0       0       0       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0
  1577 ;;      Totals:         0       0       0       0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    7
  1581 ;; This function calls:
  1582 ;;		___lwmod
  1583 ;;		_dispatcher
  1584 ;; This function is called by:
  1585 ;;		_aviao1
  1586 ;;		_aviao2
  1587 ;;		_aviao3
  1588 ;; This function uses a reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text9
  1592  001090                     __ptext9:
  1593                           	opt stack 0
  1594  001090                     _sem_wait:
  1595                           	opt stack 19
  1596                           
  1597                           ;semaphore.c: 19: (INTCONbits.GIE = 0);
  1598                           
  1599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1600                           ;incstack = 0
  1601  001090  9EF2               	bcf	intcon,7,c	;volatile
  1602                           
  1603                           ;semaphore.c: 22: s->contador--;
  1604                           ;stkvar	_s @ sp[(0)+-2]
  1605  001092  0EFE               	movlw	-2
  1606  001094  CFE3 FFD9          	movff	plusw1,fsr2l
  1607  001098  0EFF               	movlw	-1
  1608  00109A  CFE3 FFDA          	movff	plusw1,fsr2h
  1609  00109E  06DE               	decf	postinc2,f,c
  1610  0010A0  0E00               	movlw	0
  1611  0010A2  5ADD               	subwfb	postdec2,f,c
  1612                           
  1613                           ;semaphore.c: 23: if (s->contador < 0) {
  1614                           ;stkvar	_s @ sp[(0)+-2]
  1615  0010A4  0EFE               	movlw	-2
  1616  0010A6  CFE3 FFD9          	movff	plusw1,fsr2l
  1617  0010AA  0EFF               	movlw	-1
  1618  0010AC  CFE3 FFDA          	movff	plusw1,fsr2h
  1619  0010B0  0E01               	movlw	1
  1620  0010B2  AEDB               	btfss	plusw2,7,c
  1621  0010B4  D057               	goto	l1512
  1622                           
  1623                           ;semaphore.c: 24: s->queue.s_queue[s->queue.s_queue_pos_in] = task_running;
  1624                           ;stkvar	_s @ sp[(0)+-2]
  1625  0010B6  0EFE               	movlw	-2
  1626  0010B8  CFE3 F03C          	movff	plusw1,btemp+1
  1627  0010BC  0EFF               	movlw	-1
  1628  0010BE  CFE3 F03D          	movff	plusw1,btemp+2
  1629  0010C2  0E16               	movlw	22
  1630  0010C4  243C               	addwf	btemp+1,w,c
  1631  0010C6  6ED9               	movwf	fsr2l,c
  1632  0010C8  0E00               	movlw	0
  1633  0010CA  203D               	addwfc	btemp+2,w,c
  1634  0010CC  6EDA               	movwf	fsr2h,c
  1635  0010CE  CFDE F045          	movff	postinc2,btemp+10
  1636  0010D2  CFDD F046          	movff	postdec2,btemp+11
  1637  0010D6  90D8               	bcf	status,0,c
  1638  0010D8  3445               	rlcf	btemp+10,w,c
  1639  0010DA  6E3C               	movwf	btemp+1,c
  1640  0010DC  3446               	rlcf	btemp+11,w,c
  1641  0010DE  6E3D               	movwf	btemp+2,c
  1642                           
  1643                           ;stkvar	_s @ sp[(0)+-2]
  1644  0010E0  0EFE               	movlw	-2
  1645  0010E2  50E3               	movf	plusw1,w,c
  1646  0010E4  263C               	addwf	btemp+1,f,c
  1647  0010E6  0EFF               	movlw	-1
  1648  0010E8  50E3               	movf	plusw1,w,c
  1649  0010EA  223D               	addwfc	btemp+2,f,c
  1650  0010EC  0E02               	movlw	2
  1651  0010EE  243C               	addwf	btemp+1,w,c
  1652  0010F0  6ED9               	movwf	fsr2l,c
  1653  0010F2  0E00               	movlw	0
  1654  0010F4  203D               	addwfc	btemp+2,w,c
  1655  0010F6  6EDA               	movwf	fsr2h,c
  1656  0010F8  C001  FFDE         	movff	_task_running,postinc2
  1657  0010FC  C002  FFDD         	movff	_task_running+1,postdec2
  1658                           
  1659                           ;semaphore.c: 25: s->queue.s_queue_pos_in = (s->queue.s_queue_pos_in + 1) % 10;
  1660  001100  0E0A               	movlw	10
  1661  001102  6EE6               	movwf	postinc1,c
  1662  001104  0E00               	movlw	0
  1663  001106  6EE6               	movwf	postinc1,c
  1664                           
  1665                           ;stkvar	_s @ sp[(-2)+-2]
  1666  001108  0EFC               	movlw	-4
  1667  00110A  CFE3 F03C          	movff	plusw1,btemp+1
  1668  00110E  0EFD               	movlw	-3
  1669  001110  CFE3 F03D          	movff	plusw1,btemp+2
  1670  001114  0E16               	movlw	22
  1671  001116  243C               	addwf	btemp+1,w,c
  1672  001118  6ED9               	movwf	fsr2l,c
  1673  00111A  0E00               	movlw	0
  1674  00111C  203D               	addwfc	btemp+2,w,c
  1675  00111E  6EDA               	movwf	fsr2h,c
  1676  001120  CFDE F03C          	movff	postinc2,btemp+1
  1677  001124  CFDD F03D          	movff	postdec2,btemp+2
  1678  001128  0E01               	movlw	1
  1679  00112A  263C               	addwf	btemp+1,f,c
  1680  00112C  0E00               	movlw	0
  1681  00112E  223D               	addwfc	btemp+2,f,c
  1682  001130  C03C  FFE6         	movff	btemp+1,postinc1
  1683  001134  C03D  FFE6         	movff	btemp+2,postinc1
  1684  001138  EC83  F009         	call	___lwmod	;wreg free
  1685                           
  1686                           ;stkvar	_s @ sp[(0)+-2]
  1687  00113C  0EFE               	movlw	-2
  1688  00113E  CFE3 F045          	movff	plusw1,btemp+10
  1689  001142  0EFF               	movlw	-1
  1690  001144  CFE3 F046          	movff	plusw1,btemp+11
  1691  001148  0E16               	movlw	22
  1692  00114A  2445               	addwf	btemp+10,w,c
  1693  00114C  6ED9               	movwf	fsr2l,c
  1694  00114E  0E00               	movlw	0
  1695  001150  2046               	addwfc	btemp+11,w,c
  1696  001152  6EDA               	movwf	fsr2h,c
  1697  001154  C03B  FFDE         	movff	btemp,postinc2
  1698  001158  C03C  FFDD         	movff	btemp+1,postdec2
  1699                           
  1700                           ;semaphore.c: 26: dispatcher(WAITING);
  1701  00115C  0E04               	movlw	4
  1702  00115E  6EE6               	movwf	postinc1,c
  1703  001160  EC02  F003         	call	_dispatcher	;wreg free
  1704  001164                     l1512:
  1705                           
  1706                           ;semaphore.c: 27: }
  1707                           ;semaphore.c: 29: (INTCONbits.GIE = 1);
  1708  001164  8EF2               	bsf	intcon,7,c	;volatile
  1709                           
  1710                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  1711  001166  52E5               	movf	postdec1,f,c
  1712  001168  52E5               	movf	postdec1,f,c
  1713  00116A  0012               	return		;funcret
  1714  00116C                     __end_of_sem_wait:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           prodh	equ	0xFF4
  1721                           prodl	equ	0xFF3
  1722                           intcon	equ	0xFF2
  1723                           postinc0	equ	0xFEE
  1724                           postdec0	equ	0xFED
  1725                           plusw0	equ	0xFEB
  1726                           fsr0h	equ	0xFEA
  1727                           fsr0l	equ	0xFE9
  1728                           wreg	equ	0xFE8
  1729                           postinc1	equ	0xFE6
  1730                           postdec1	equ	0xFE5
  1731                           plusw1	equ	0xFE3
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           postinc2	equ	0xFDE
  1736                           postdec2	equ	0xFDD
  1737                           plusw2	equ	0xFDB
  1738                           fsr2h	equ	0xFDA
  1739                           fsr2l	equ	0xFD9
  1740                           status	equ	0xFD8
  1741                           
  1742 ;; *************** function _sem_post *****************
  1743 ;; Defined at:
  1744 ;;		line 32 in file "semaphore.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  s               2  [STACK] PTR struct sem
  1747 ;;		 -> spista(26), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1  [STACK] void 
  1752 ;; Registers used:
  1753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1759 ;;      Params:         0       0       0       0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    7
  1766 ;; This function calls:
  1767 ;;		___lwmod
  1768 ;;		___wmul
  1769 ;;		_dispatcher
  1770 ;; This function is called by:
  1771 ;;		_aviao1
  1772 ;;		_aviao2
  1773 ;;		_aviao3
  1774 ;; This function uses a reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text10
  1778  000F64                     __ptext10:
  1779                           	opt stack 0
  1780  000F64                     _sem_post:
  1781                           	opt stack 19
  1782                           
  1783                           ;semaphore.c: 34: (INTCONbits.GIE = 0);
  1784                           
  1785                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1786                           ;incstack = 0
  1787  000F64  9EF2               	bcf	intcon,7,c	;volatile
  1788                           
  1789                           ;semaphore.c: 36: s->contador++;
  1790                           ;stkvar	_s @ sp[(0)+-2]
  1791  000F66  0EFE               	movlw	-2
  1792  000F68  CFE3 FFD9          	movff	plusw1,fsr2l
  1793  000F6C  0EFF               	movlw	-1
  1794  000F6E  CFE3 FFDA          	movff	plusw1,fsr2h
  1795  000F72  2ADE               	incf	postinc2,f,c
  1796  000F74  0E00               	movlw	0
  1797  000F76  22DD               	addwfc	postdec2,f,c
  1798                           
  1799                           ;semaphore.c: 37: if (s->contador <= 0) {
  1800                           ;stkvar	_s @ sp[(0)+-2]
  1801  000F78  0EFE               	movlw	-2
  1802  000F7A  CFE3 FFD9          	movff	plusw1,fsr2l
  1803  000F7E  0EFF               	movlw	-1
  1804  000F80  CFE3 FFDA          	movff	plusw1,fsr2h
  1805  000F84  0E01               	movlw	1
  1806  000F86  BEDB               	btfsc	plusw2,7,c
  1807  000F88  D006               	goto	u37_20
  1808  000F8A  0E01               	movlw	1
  1809  000F8C  50DB               	movf	plusw2,w,c
  1810  000F8E  E17C               	bnz	l1526
  1811  000F90  04DE               	decf	postinc2,w,c
  1812  000F92  B0D8               	btfsc	status,0,c
  1813  000F94  D079               	goto	l1526
  1814  000F96                     u37_20:
  1815                           
  1816                           ;semaphore.c: 38: F_APTOS[s->queue.s_queue[s->queue.s_queue_pos_out]].task_state = READY
      +                          ;
  1817  000F96  0E11               	movlw	17
  1818  000F98  6EE6               	movwf	postinc1,c
  1819  000F9A  0E00               	movlw	0
  1820  000F9C  6EE6               	movwf	postinc1,c
  1821                           
  1822                           ;stkvar	_s @ sp[(-2)+-2]
  1823  000F9E  0EFC               	movlw	-4
  1824  000FA0  CFE3 F03C          	movff	plusw1,btemp+1
  1825  000FA4  0EFD               	movlw	-3
  1826  000FA6  CFE3 F03D          	movff	plusw1,btemp+2
  1827  000FAA  0E18               	movlw	24
  1828  000FAC  243C               	addwf	btemp+1,w,c
  1829  000FAE  6ED9               	movwf	fsr2l,c
  1830  000FB0  0E00               	movlw	0
  1831  000FB2  203D               	addwfc	btemp+2,w,c
  1832  000FB4  6EDA               	movwf	fsr2h,c
  1833  000FB6  CFDE F045          	movff	postinc2,btemp+10
  1834  000FBA  CFDD F046          	movff	postdec2,btemp+11
  1835  000FBE  90D8               	bcf	status,0,c
  1836  000FC0  3445               	rlcf	btemp+10,w,c
  1837  000FC2  6E3C               	movwf	btemp+1,c
  1838  000FC4  3446               	rlcf	btemp+11,w,c
  1839  000FC6  6E3D               	movwf	btemp+2,c
  1840                           
  1841                           ;stkvar	_s @ sp[(-2)+-2]
  1842  000FC8  0EFC               	movlw	-4
  1843  000FCA  50E3               	movf	plusw1,w,c
  1844  000FCC  263C               	addwf	btemp+1,f,c
  1845  000FCE  0EFD               	movlw	-3
  1846  000FD0  50E3               	movf	plusw1,w,c
  1847  000FD2  223D               	addwfc	btemp+2,f,c
  1848  000FD4  0E02               	movlw	2
  1849  000FD6  243C               	addwf	btemp+1,w,c
  1850  000FD8  6ED9               	movwf	fsr2l,c
  1851  000FDA  0E00               	movlw	0
  1852  000FDC  203D               	addwfc	btemp+2,w,c
  1853  000FDE  6EDA               	movwf	fsr2h,c
  1854  000FE0  CFDE F03C          	movff	postinc2,btemp+1
  1855  000FE4  CFDD F03D          	movff	postdec2,btemp+2
  1856  000FE8  C03C  FFE6         	movff	btemp+1,postinc1
  1857  000FEC  C03D  FFE6         	movff	btemp+2,postinc1
  1858  000FF0  EC8D  F00A         	call	___wmul	;wreg free
  1859  000FF4  0E08               	movlw	low (_F_APTOS+8)
  1860  000FF6  243B               	addwf	btemp,w,c
  1861  000FF8  6ED9               	movwf	fsr2l,c
  1862  000FFA  0E01               	movlw	high (_F_APTOS+8)
  1863  000FFC  203C               	addwfc	btemp+1,w,c
  1864  000FFE  6EDA               	movwf	fsr2h,c
  1865  001000  0E01               	movlw	1
  1866  001002  6EDF               	movwf	indf2,c
  1867                           
  1868                           ;semaphore.c: 39: s->queue.s_queue_pos_out = (s->queue.s_queue_pos_out + 1) % s->queue.s
      +                          _queue_pos_in;
  1869                           ;stkvar	_s @ sp[(0)+-2]
  1870  001004  0EFE               	movlw	-2
  1871  001006  CFE3 F03C          	movff	plusw1,btemp+1
  1872  00100A  0EFF               	movlw	-1
  1873  00100C  CFE3 F03D          	movff	plusw1,btemp+2
  1874  001010  0E16               	movlw	22
  1875  001012  243C               	addwf	btemp+1,w,c
  1876  001014  6ED9               	movwf	fsr2l,c
  1877  001016  0E00               	movlw	0
  1878  001018  203D               	addwfc	btemp+2,w,c
  1879  00101A  6EDA               	movwf	fsr2h,c
  1880  00101C  CFDE F03C          	movff	postinc2,btemp+1
  1881  001020  CFDD F03D          	movff	postdec2,btemp+2
  1882  001024  C03C  FFE6         	movff	btemp+1,postinc1
  1883  001028  C03D  FFE6         	movff	btemp+2,postinc1
  1884                           
  1885                           ;stkvar	_s @ sp[(-2)+-2]
  1886  00102C  0EFC               	movlw	-4
  1887  00102E  CFE3 F03C          	movff	plusw1,btemp+1
  1888  001032  0EFD               	movlw	-3
  1889  001034  CFE3 F03D          	movff	plusw1,btemp+2
  1890  001038  0E18               	movlw	24
  1891  00103A  243C               	addwf	btemp+1,w,c
  1892  00103C  6ED9               	movwf	fsr2l,c
  1893  00103E  0E00               	movlw	0
  1894  001040  203D               	addwfc	btemp+2,w,c
  1895  001042  6EDA               	movwf	fsr2h,c
  1896  001044  CFDE F03C          	movff	postinc2,btemp+1
  1897  001048  CFDD F03D          	movff	postdec2,btemp+2
  1898  00104C  0E01               	movlw	1
  1899  00104E  263C               	addwf	btemp+1,f,c
  1900  001050  0E00               	movlw	0
  1901  001052  223D               	addwfc	btemp+2,f,c
  1902  001054  C03C  FFE6         	movff	btemp+1,postinc1
  1903  001058  C03D  FFE6         	movff	btemp+2,postinc1
  1904  00105C  EC83  F009         	call	___lwmod	;wreg free
  1905                           
  1906                           ;stkvar	_s @ sp[(0)+-2]
  1907  001060  0EFE               	movlw	-2
  1908  001062  CFE3 F045          	movff	plusw1,btemp+10
  1909  001066  0EFF               	movlw	-1
  1910  001068  CFE3 F046          	movff	plusw1,btemp+11
  1911  00106C  0E18               	movlw	24
  1912  00106E  2445               	addwf	btemp+10,w,c
  1913  001070  6ED9               	movwf	fsr2l,c
  1914  001072  0E00               	movlw	0
  1915  001074  2046               	addwfc	btemp+11,w,c
  1916  001076  6EDA               	movwf	fsr2h,c
  1917  001078  C03B  FFDE         	movff	btemp,postinc2
  1918  00107C  C03C  FFDD         	movff	btemp+1,postdec2
  1919                           
  1920                           ;semaphore.c: 40: dispatcher(READY);
  1921  001080  0E01               	movlw	1
  1922  001082  6EE6               	movwf	postinc1,c
  1923  001084  EC02  F003         	call	_dispatcher	;wreg free
  1924  001088                     l1526:
  1925                           
  1926                           ;semaphore.c: 41: }
  1927                           ;semaphore.c: 43: (INTCONbits.GIE = 1);
  1928  001088  8EF2               	bsf	intcon,7,c	;volatile
  1929                           
  1930                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  1931  00108A  52E5               	movf	postdec1,f,c
  1932  00108C  52E5               	movf	postdec1,f,c
  1933  00108E  0012               	return		;funcret
  1934  001090                     __end_of_sem_post:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           intcon	equ	0xFF2
  1943                           postinc0	equ	0xFEE
  1944                           postdec0	equ	0xFED
  1945                           plusw0	equ	0xFEB
  1946                           fsr0h	equ	0xFEA
  1947                           fsr0l	equ	0xFE9
  1948                           wreg	equ	0xFE8
  1949                           postinc1	equ	0xFE6
  1950                           postdec1	equ	0xFE5
  1951                           plusw1	equ	0xFE3
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           indf2	equ	0xFDF
  1955                           postinc2	equ	0xFDE
  1956                           postdec2	equ	0xFDD
  1957                           plusw2	equ	0xFDB
  1958                           fsr2h	equ	0xFDA
  1959                           fsr2l	equ	0xFD9
  1960                           status	equ	0xFD8
  1961                           
  1962 ;; *************** function _delay *****************
  1963 ;; Defined at:
  1964 ;;		line 62 in file "kernel.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  time_ms         2  [STACK] unsigned int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1  [STACK] void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         0       0       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    7
  1985 ;; This function calls:
  1986 ;;		___wmul
  1987 ;;		_dispatcher
  1988 ;; This function is called by:
  1989 ;;		_aviao1
  1990 ;;		_aviao2
  1991 ;;		_aviao3
  1992 ;;		_tluzes
  1993 ;; This function uses a reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text11
  1997  001900                     __ptext11:
  1998                           	opt stack 0
  1999  001900                     _delay:
  2000                           	opt stack 19
  2001                           
  2002                           ;kernel.c: 64: (INTCONbits.GIE = 0);
  2003                           
  2004                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  2005                           ;incstack = 0
  2006  001900  9EF2               	bcf	intcon,7,c	;volatile
  2007                           
  2008                           ;kernel.c: 66: F_APTOS[task_running].delay_time = time_ms;
  2009  001902  0E11               	movlw	17
  2010  001904  6EE6               	movwf	postinc1,c
  2011  001906  0E00               	movlw	0
  2012  001908  6EE6               	movwf	postinc1,c
  2013  00190A  C001  FFE6         	movff	_task_running,postinc1
  2014  00190E  C002  FFE6         	movff	_task_running+1,postinc1
  2015  001912  EC8D  F00A         	call	___wmul	;wreg free
  2016  001916  0E06               	movlw	low (_F_APTOS+6)
  2017  001918  243B               	addwf	btemp,w,c
  2018  00191A  6EE9               	movwf	fsr0l,c
  2019  00191C  0E01               	movlw	high (_F_APTOS+6)
  2020  00191E  203C               	addwfc	btemp+1,w,c
  2021  001920  6EEA               	movwf	fsr0h,c
  2022                           
  2023                           ;stkvar	_time_ms @ sp[(0)+-2]
  2024  001922  50E1               	movf	fsr1l,w,c
  2025  001924  0FFE               	addlw	-2
  2026  001926  6ED9               	movwf	fsr2l,c
  2027  001928  50E2               	movf	fsr1h,w,c
  2028  00192A  6EDA               	movwf	fsr2h,c
  2029  00192C  0EFF               	movlw	255
  2030  00192E  22DA               	addwfc	fsr2h,f,c
  2031  001930  CFDE FFEE          	movff	postinc2,postinc0
  2032  001934  CFDD FFED          	movff	postdec2,postdec0
  2033                           
  2034                           ;kernel.c: 67: dispatcher(SLEEPING);
  2035  001938  0E03               	movlw	3
  2036  00193A  6EE6               	movwf	postinc1,c
  2037  00193C  EC02  F003         	call	_dispatcher	;wreg free
  2038                           
  2039                           ;kernel.c: 69: (INTCONbits.GIE = 1);
  2040  001940  8EF2               	bsf	intcon,7,c	;volatile
  2041                           
  2042                           ; _delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2043  001942  52E5               	movf	postdec1,f,c
  2044  001944  52E5               	movf	postdec1,f,c
  2045  001946  0012               	return		;funcret
  2046  001948                     __end_of_delay:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           postdec0	equ	0xFED
  2057                           plusw0	equ	0xFEB
  2058                           fsr0h	equ	0xFEA
  2059                           fsr0l	equ	0xFE9
  2060                           wreg	equ	0xFE8
  2061                           postinc1	equ	0xFE6
  2062                           postdec1	equ	0xFE5
  2063                           plusw1	equ	0xFE3
  2064                           fsr1h	equ	0xFE2
  2065                           fsr1l	equ	0xFE1
  2066                           indf2	equ	0xFDF
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           plusw2	equ	0xFDB
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _dispatcher *****************
  2075 ;; Defined at:
  2076 ;;		line 37 in file "kernel.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  state           1  [STACK] enum E3008
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1  [STACK] void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2090 ;;      Params:         0       0       0       0       0       0       0
  2091 ;;      Locals:         0       0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0
  2093 ;;      Totals:         0       0       0       0       0       0       0
  2094 ;;Total ram usage:        0 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    6
  2097 ;; This function calls:
  2098 ;;		___wmul
  2099 ;;		_rr_scheduler
  2100 ;; This function is called by:
  2101 ;;		_delay
  2102 ;;		_int_high
  2103 ;;		_sem_wait
  2104 ;;		_sem_post
  2105 ;;		_write_pipe
  2106 ;;		_read_pipe
  2107 ;; This function uses a reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text12
  2111  000604                     __ptext12:
  2112                           	opt stack 0
  2113  000604                     _dispatcher:
  2114                           	opt stack 15
  2115                           
  2116                           ;kernel.c: 39: (INTCONbits.GIE = 0);
  2117                           
  2118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  2119                           ;incstack = 0
  2120  000604  9EF2               	bcf	intcon,7,c	;volatile
  2121                           
  2122                           ;kernel.c: 42: F_APTOS[task_running].task_state = state; F_APTOS[task_running].BSR_regis
      +                          ter = BSR; F_APTOS[task_running].STATUS_register = STATUS; F_APTOS[task_running].WORK_re
      +                          gister = WREG; F_APTOS[task_running].task_stack.stack_size = 0; do { \F_APTOS[task_runni
      +                          n
  2123                           ;stkvar	_state @ sp[(0)+-1]
  2124  000606  0E11               	movlw	17
  2125  000608  6EE6               	movwf	postinc1,c
  2126  00060A  0E00               	movlw	0
  2127  00060C  6EE6               	movwf	postinc1,c
  2128  00060E  C001  FFE6         	movff	_task_running,postinc1
  2129  000612  C002  FFE6         	movff	_task_running+1,postinc1
  2130  000616  EC8D  F00A         	call	___wmul	;wreg free
  2131  00061A  0E08               	movlw	low (_F_APTOS+8)
  2132  00061C  243B               	addwf	btemp,w,c
  2133  00061E  6ED9               	movwf	fsr2l,c
  2134  000620  0E01               	movlw	high (_F_APTOS+8)
  2135  000622  203C               	addwfc	btemp+1,w,c
  2136  000624  6EDA               	movwf	fsr2h,c
  2137  000626  0EFF               	movlw	-1
  2138  000628  CFE3 FFDF          	movff	plusw1,indf2
  2139  00062C  0E11               	movlw	17
  2140  00062E  6EE6               	movwf	postinc1,c
  2141  000630  0E00               	movlw	0
  2142  000632  6EE6               	movwf	postinc1,c
  2143  000634  C001  FFE6         	movff	_task_running,postinc1
  2144  000638  C002  FFE6         	movff	_task_running+1,postinc1
  2145  00063C  EC8D  F00A         	call	___wmul	;wreg free
  2146  000640  0E0E               	movlw	low (_F_APTOS+14)
  2147  000642  243B               	addwf	btemp,w,c
  2148  000644  6ED9               	movwf	fsr2l,c
  2149  000646  0E01               	movlw	high (_F_APTOS+14)
  2150  000648  203C               	addwfc	btemp+1,w,c
  2151  00064A  6EDA               	movwf	fsr2h,c
  2152  00064C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2153  000650  0E11               	movlw	17
  2154  000652  6EE6               	movwf	postinc1,c
  2155  000654  0E00               	movlw	0
  2156  000656  6EE6               	movwf	postinc1,c
  2157  000658  C001  FFE6         	movff	_task_running,postinc1
  2158  00065C  C002  FFE6         	movff	_task_running+1,postinc1
  2159  000660  EC8D  F00A         	call	___wmul	;wreg free
  2160  000664  0E0F               	movlw	low (_F_APTOS+15)
  2161  000666  243B               	addwf	btemp,w,c
  2162  000668  6ED9               	movwf	fsr2l,c
  2163  00066A  0E01               	movlw	high (_F_APTOS+15)
  2164  00066C  203C               	addwfc	btemp+1,w,c
  2165  00066E  6EDA               	movwf	fsr2h,c
  2166  000670  CFD8 FFDF          	movff	status,indf2	;volatile
  2167  000674  0E11               	movlw	17
  2168  000676  6EE6               	movwf	postinc1,c
  2169  000678  0E00               	movlw	0
  2170  00067A  6EE6               	movwf	postinc1,c
  2171  00067C  C001  FFE6         	movff	_task_running,postinc1
  2172  000680  C002  FFE6         	movff	_task_running+1,postinc1
  2173  000684  EC8D  F00A         	call	___wmul	;wreg free
  2174  000688  0E10               	movlw	low (_F_APTOS+16)
  2175  00068A  243B               	addwf	btemp,w,c
  2176  00068C  6ED9               	movwf	fsr2l,c
  2177  00068E  0E01               	movlw	high (_F_APTOS+16)
  2178  000690  203C               	addwfc	btemp+1,w,c
  2179  000692  6EDA               	movwf	fsr2h,c
  2180  000694  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2181  000698  0E11               	movlw	17
  2182  00069A  6EE6               	movwf	postinc1,c
  2183  00069C  0E00               	movlw	0
  2184  00069E  6EE6               	movwf	postinc1,c
  2185  0006A0  C001  FFE6         	movff	_task_running,postinc1
  2186  0006A4  C002  FFE6         	movff	_task_running+1,postinc1
  2187  0006A8  EC8D  F00A         	call	___wmul	;wreg free
  2188  0006AC  0E0C               	movlw	low (_F_APTOS+12)
  2189  0006AE  243B               	addwf	btemp,w,c
  2190  0006B0  6ED9               	movwf	fsr2l,c
  2191  0006B2  0E01               	movlw	high (_F_APTOS+12)
  2192  0006B4  203C               	addwfc	btemp+1,w,c
  2193  0006B6  6EDA               	movwf	fsr2h,c
  2194  0006B8  0E00               	movlw	0
  2195  0006BA  6EDE               	movwf	postinc2,c
  2196  0006BC  0E00               	movlw	0
  2197  0006BE  6EDD               	movwf	postdec2,c
  2198  0006C0                     l1456:
  2199  0006C0  0E03               	movlw	3
  2200  0006C2  6EE6               	movwf	postinc1,c
  2201  0006C4  0E00               	movlw	0
  2202  0006C6  6EE6               	movwf	postinc1,c
  2203  0006C8  0E11               	movlw	17
  2204  0006CA  6EE6               	movwf	postinc1,c
  2205  0006CC  0E00               	movlw	0
  2206  0006CE  6EE6               	movwf	postinc1,c
  2207  0006D0  C001  FFE6         	movff	_task_running,postinc1
  2208  0006D4  C002  FFE6         	movff	_task_running+1,postinc1
  2209  0006D8  EC8D  F00A         	call	___wmul	;wreg free
  2210  0006DC  0E0C               	movlw	low (_F_APTOS+12)
  2211  0006DE  243B               	addwf	btemp,w,c
  2212  0006E0  6ED9               	movwf	fsr2l,c
  2213  0006E2  0E01               	movlw	high (_F_APTOS+12)
  2214  0006E4  203C               	addwfc	btemp+1,w,c
  2215  0006E6  6EDA               	movwf	fsr2h,c
  2216  0006E8  CFDE F03C          	movff	postinc2,btemp+1
  2217  0006EC  CFDD F03D          	movff	postdec2,btemp+2
  2218  0006F0  C03C  FFE6         	movff	btemp+1,postinc1
  2219  0006F4  C03D  FFE6         	movff	btemp+2,postinc1
  2220  0006F8  EC8D  F00A         	call	___wmul	;wreg free
  2221  0006FC  C03B  F043         	movff	btemp,btemp+8
  2222  000700  C03C  F044         	movff	btemp+1,btemp+9
  2223  000704  0E11               	movlw	17
  2224  000706  6EE6               	movwf	postinc1,c
  2225  000708  0E00               	movlw	0
  2226  00070A  6EE6               	movwf	postinc1,c
  2227  00070C  C001  FFE6         	movff	_task_running,postinc1
  2228  000710  C002  FFE6         	movff	_task_running+1,postinc1
  2229  000714  EC8D  F00A         	call	___wmul	;wreg free
  2230  000718  0E00               	movlw	low _F_APTOS
  2231  00071A  6E45               	movwf	btemp+10,c
  2232  00071C  0E01               	movlw	high _F_APTOS
  2233  00071E  6E46               	movwf	btemp+11,c
  2234  000720  0E09               	movlw	9
  2235  000722  2645               	addwf	btemp+10,f,c
  2236  000724  0E00               	movlw	0
  2237  000726  2246               	addwfc	btemp+11,f,c
  2238  000728  503B               	movf	btemp,w,c
  2239  00072A  2645               	addwf	btemp+10,f,c
  2240  00072C  503C               	movf	btemp+1,w,c
  2241  00072E  2246               	addwfc	btemp+11,f,c
  2242  000730  5043               	movf	btemp+8,w,c
  2243  000732  2445               	addwf	btemp+10,w,c
  2244  000734  6ED9               	movwf	fsr2l,c
  2245  000736  5044               	movf	btemp+9,w,c
  2246  000738  2046               	addwfc	btemp+11,w,c
  2247  00073A  6EDA               	movwf	fsr2h,c
  2248  00073C  CFFF FFDF          	movff	tosu,indf2	;volatile
  2249  000740  0E03               	movlw	3
  2250  000742  6EE6               	movwf	postinc1,c
  2251  000744  0E00               	movlw	0
  2252  000746  6EE6               	movwf	postinc1,c
  2253  000748  0E11               	movlw	17
  2254  00074A  6EE6               	movwf	postinc1,c
  2255  00074C  0E00               	movlw	0
  2256  00074E  6EE6               	movwf	postinc1,c
  2257  000750  C001  FFE6         	movff	_task_running,postinc1
  2258  000754  C002  FFE6         	movff	_task_running+1,postinc1
  2259  000758  EC8D  F00A         	call	___wmul	;wreg free
  2260  00075C  0E0C               	movlw	low (_F_APTOS+12)
  2261  00075E  243B               	addwf	btemp,w,c
  2262  000760  6ED9               	movwf	fsr2l,c
  2263  000762  0E01               	movlw	high (_F_APTOS+12)
  2264  000764  203C               	addwfc	btemp+1,w,c
  2265  000766  6EDA               	movwf	fsr2h,c
  2266  000768  CFDE F03C          	movff	postinc2,btemp+1
  2267  00076C  CFDD F03D          	movff	postdec2,btemp+2
  2268  000770  C03C  FFE6         	movff	btemp+1,postinc1
  2269  000774  C03D  FFE6         	movff	btemp+2,postinc1
  2270  000778  EC8D  F00A         	call	___wmul	;wreg free
  2271  00077C  C03B  F043         	movff	btemp,btemp+8
  2272  000780  C03C  F044         	movff	btemp+1,btemp+9
  2273  000784  0E11               	movlw	17
  2274  000786  6EE6               	movwf	postinc1,c
  2275  000788  0E00               	movlw	0
  2276  00078A  6EE6               	movwf	postinc1,c
  2277  00078C  C001  FFE6         	movff	_task_running,postinc1
  2278  000790  C002  FFE6         	movff	_task_running+1,postinc1
  2279  000794  EC8D  F00A         	call	___wmul	;wreg free
  2280  000798  0E00               	movlw	low _F_APTOS
  2281  00079A  6E45               	movwf	btemp+10,c
  2282  00079C  0E01               	movlw	high _F_APTOS
  2283  00079E  6E46               	movwf	btemp+11,c
  2284  0007A0  0E0A               	movlw	10
  2285  0007A2  2645               	addwf	btemp+10,f,c
  2286  0007A4  0E00               	movlw	0
  2287  0007A6  2246               	addwfc	btemp+11,f,c
  2288  0007A8  503B               	movf	btemp,w,c
  2289  0007AA  2645               	addwf	btemp+10,f,c
  2290  0007AC  503C               	movf	btemp+1,w,c
  2291  0007AE  2246               	addwfc	btemp+11,f,c
  2292  0007B0  5043               	movf	btemp+8,w,c
  2293  0007B2  2445               	addwf	btemp+10,w,c
  2294  0007B4  6ED9               	movwf	fsr2l,c
  2295  0007B6  5044               	movf	btemp+9,w,c
  2296  0007B8  2046               	addwfc	btemp+11,w,c
  2297  0007BA  6EDA               	movwf	fsr2h,c
  2298  0007BC  CFFD FFDF          	movff	tosl,indf2	;volatile
  2299  0007C0  0E03               	movlw	3
  2300  0007C2  6EE6               	movwf	postinc1,c
  2301  0007C4  0E00               	movlw	0
  2302  0007C6  6EE6               	movwf	postinc1,c
  2303  0007C8  0E11               	movlw	17
  2304  0007CA  6EE6               	movwf	postinc1,c
  2305  0007CC  0E00               	movlw	0
  2306  0007CE  6EE6               	movwf	postinc1,c
  2307  0007D0  C001  FFE6         	movff	_task_running,postinc1
  2308  0007D4  C002  FFE6         	movff	_task_running+1,postinc1
  2309  0007D8  EC8D  F00A         	call	___wmul	;wreg free
  2310  0007DC  0E0C               	movlw	low (_F_APTOS+12)
  2311  0007DE  243B               	addwf	btemp,w,c
  2312  0007E0  6ED9               	movwf	fsr2l,c
  2313  0007E2  0E01               	movlw	high (_F_APTOS+12)
  2314  0007E4  203C               	addwfc	btemp+1,w,c
  2315  0007E6  6EDA               	movwf	fsr2h,c
  2316  0007E8  CFDE F03C          	movff	postinc2,btemp+1
  2317  0007EC  CFDD F03D          	movff	postdec2,btemp+2
  2318  0007F0  C03C  FFE6         	movff	btemp+1,postinc1
  2319  0007F4  C03D  FFE6         	movff	btemp+2,postinc1
  2320  0007F8  EC8D  F00A         	call	___wmul	;wreg free
  2321  0007FC  C03B  F043         	movff	btemp,btemp+8
  2322  000800  C03C  F044         	movff	btemp+1,btemp+9
  2323  000804  0E11               	movlw	17
  2324  000806  6EE6               	movwf	postinc1,c
  2325  000808  0E00               	movlw	0
  2326  00080A  6EE6               	movwf	postinc1,c
  2327  00080C  C001  FFE6         	movff	_task_running,postinc1
  2328  000810  C002  FFE6         	movff	_task_running+1,postinc1
  2329  000814  EC8D  F00A         	call	___wmul	;wreg free
  2330  000818  0E00               	movlw	low _F_APTOS
  2331  00081A  6E45               	movwf	btemp+10,c
  2332  00081C  0E01               	movlw	high _F_APTOS
  2333  00081E  6E46               	movwf	btemp+11,c
  2334  000820  0E0B               	movlw	11
  2335  000822  2645               	addwf	btemp+10,f,c
  2336  000824  0E00               	movlw	0
  2337  000826  2246               	addwfc	btemp+11,f,c
  2338  000828  503B               	movf	btemp,w,c
  2339  00082A  2645               	addwf	btemp+10,f,c
  2340  00082C  503C               	movf	btemp+1,w,c
  2341  00082E  2246               	addwfc	btemp+11,f,c
  2342  000830  5043               	movf	btemp+8,w,c
  2343  000832  2445               	addwf	btemp+10,w,c
  2344  000834  6ED9               	movwf	fsr2l,c
  2345  000836  5044               	movf	btemp+9,w,c
  2346  000838  2046               	addwfc	btemp+11,w,c
  2347  00083A  6EDA               	movwf	fsr2h,c
  2348  00083C  CFFE FFDF          	movff	tosh,indf2	;volatile
  2349  000840  0E11               	movlw	17
  2350  000842  6EE6               	movwf	postinc1,c
  2351  000844  0E00               	movlw	0
  2352  000846  6EE6               	movwf	postinc1,c
  2353  000848  C001  FFE6         	movff	_task_running,postinc1
  2354  00084C  C002  FFE6         	movff	_task_running+1,postinc1
  2355  000850  EC8D  F00A         	call	___wmul	;wreg free
  2356  000854  0E0C               	movlw	low (_F_APTOS+12)
  2357  000856  243B               	addwf	btemp,w,c
  2358  000858  6ED9               	movwf	fsr2l,c
  2359  00085A  0E01               	movlw	high (_F_APTOS+12)
  2360  00085C  203C               	addwfc	btemp+1,w,c
  2361  00085E  6EDA               	movwf	fsr2h,c
  2362  000860  2ADE               	incf	postinc2,f,c
  2363  000862  0E00               	movlw	0
  2364  000864  22DD               	addwfc	postdec2,f,c
  2365  000866  0006               	pop		;# 
  2366  000868  50FC               	movf	stkptr,w,c	;volatile
  2367  00086A  A4D8               	btfss	status,2,c
  2368  00086C  D729               	goto	l1456
  2369                           
  2370                           ;kernel.c: 46: task_running = rr_scheduler();
  2371  00086E  EC64  F00B         	call	_rr_scheduler	;wreg free
  2372  000872  C03B  F001         	movff	btemp,_task_running
  2373  000876  C03C  F002         	movff	btemp+1,_task_running+1
  2374                           
  2375                           ;kernel.c: 52: \STKPTR = 0;\if (F_APTOS[task_running].task_stack.stack_size == 0) {\asm(
      +                          "PUSH");\TOS = F_APTOS[task_running].task_f;\}\else {\BSR = F_APTOS[task_running].BSR_re
      +                          gister;\STATUS = F_APTOS[task_running].STATUS_register;\WREG = F_APTOS[task_running].WOR
      +                          K
  2376  00087A  6AFC               	clrf	stkptr,c	;volatile
  2377  00087C  0E11               	movlw	17
  2378  00087E  6EE6               	movwf	postinc1,c
  2379  000880  0E00               	movlw	0
  2380  000882  6EE6               	movwf	postinc1,c
  2381  000884  C001  FFE6         	movff	_task_running,postinc1
  2382  000888  C002  FFE6         	movff	_task_running+1,postinc1
  2383  00088C  EC8D  F00A         	call	___wmul	;wreg free
  2384  000890  0E0C               	movlw	low (_F_APTOS+12)
  2385  000892  243B               	addwf	btemp,w,c
  2386  000894  6ED9               	movwf	fsr2l,c
  2387  000896  0E01               	movlw	high (_F_APTOS+12)
  2388  000898  203C               	addwfc	btemp+1,w,c
  2389  00089A  6EDA               	movwf	fsr2h,c
  2390  00089C  50DE               	movf	postinc2,w,c
  2391  00089E  10DE               	iorwf	postinc2,w,c
  2392  0008A0  A4D8               	btfss	status,2,c
  2393  0008A2  D01B               	goto	l1476
  2394  0008A4  0005               	push		;# 
  2395  0008A6  0E11               	movlw	17
  2396  0008A8  6EE6               	movwf	postinc1,c
  2397  0008AA  0E00               	movlw	0
  2398  0008AC  6EE6               	movwf	postinc1,c
  2399  0008AE  C001  FFE6         	movff	_task_running,postinc1
  2400  0008B2  C002  FFE6         	movff	_task_running+1,postinc1
  2401  0008B6  EC8D  F00A         	call	___wmul	;wreg free
  2402  0008BA  0E04               	movlw	low (_F_APTOS+4)
  2403  0008BC  243B               	addwf	btemp,w,c
  2404  0008BE  6ED9               	movwf	fsr2l,c
  2405  0008C0  0E01               	movlw	high (_F_APTOS+4)
  2406  0008C2  203C               	addwfc	btemp+1,w,c
  2407  0008C4  6EDA               	movwf	fsr2h,c
  2408  0008C6  CFDE F03C          	movff	postinc2,btemp+1
  2409  0008CA  CFDD F03D          	movff	postdec2,btemp+2
  2410  0008CE  C03C  FFFD         	movff	btemp+1,tosl	;volatile
  2411  0008D2  C03D  FFFE         	movff	btemp+2,tosh	;volatile
  2412  0008D6  6AFF               	clrf	tosu,c	;volatile
  2413  0008D8  D11F               	goto	u35_20
  2414  0008DA                     l1476:
  2415  0008DA  0E11               	movlw	17
  2416  0008DC  6EE6               	movwf	postinc1,c
  2417  0008DE  0E00               	movlw	0
  2418  0008E0  6EE6               	movwf	postinc1,c
  2419  0008E2  C001  FFE6         	movff	_task_running,postinc1
  2420  0008E6  C002  FFE6         	movff	_task_running+1,postinc1
  2421  0008EA  EC8D  F00A         	call	___wmul	;wreg free
  2422  0008EE  0E0E               	movlw	low (_F_APTOS+14)
  2423  0008F0  243B               	addwf	btemp,w,c
  2424  0008F2  6ED9               	movwf	fsr2l,c
  2425  0008F4  0E01               	movlw	high (_F_APTOS+14)
  2426  0008F6  203C               	addwfc	btemp+1,w,c
  2427  0008F8  6EDA               	movwf	fsr2h,c
  2428  0008FA  50DF               	movf	indf2,w,c
  2429  0008FC  6EE0               	movwf	bsr,c	;volatile
  2430  0008FE  0E11               	movlw	17
  2431  000900  6EE6               	movwf	postinc1,c
  2432  000902  0E00               	movlw	0
  2433  000904  6EE6               	movwf	postinc1,c
  2434  000906  C001  FFE6         	movff	_task_running,postinc1
  2435  00090A  C002  FFE6         	movff	_task_running+1,postinc1
  2436  00090E  EC8D  F00A         	call	___wmul	;wreg free
  2437  000912  0E0F               	movlw	low (_F_APTOS+15)
  2438  000914  243B               	addwf	btemp,w,c
  2439  000916  6ED9               	movwf	fsr2l,c
  2440  000918  0E01               	movlw	high (_F_APTOS+15)
  2441  00091A  203C               	addwfc	btemp+1,w,c
  2442  00091C  6EDA               	movwf	fsr2h,c
  2443  00091E  50DF               	movf	indf2,w,c
  2444  000920  6ED8               	movwf	status,c	;volatile
  2445  000922  0E11               	movlw	17
  2446  000924  6EE6               	movwf	postinc1,c
  2447  000926  0E00               	movlw	0
  2448  000928  6EE6               	movwf	postinc1,c
  2449  00092A  C001  FFE6         	movff	_task_running,postinc1
  2450  00092E  C002  FFE6         	movff	_task_running+1,postinc1
  2451  000932  EC8D  F00A         	call	___wmul	;wreg free
  2452  000936  0E10               	movlw	low (_F_APTOS+16)
  2453  000938  243B               	addwf	btemp,w,c
  2454  00093A  6ED9               	movwf	fsr2l,c
  2455  00093C  0E01               	movlw	high (_F_APTOS+16)
  2456  00093E  203C               	addwfc	btemp+1,w,c
  2457  000940  6EDA               	movwf	fsr2h,c
  2458  000942  50DF               	movf	indf2,w,c
  2459  000944  6E46               	movwf	btemp+11,c
  2460  000946  5046               	movf	btemp+11,w,c
  2461  000948                     l86:
  2462  000948  0005               	push		;# 
  2463  00094A  0E11               	movlw	17
  2464  00094C  6EE6               	movwf	postinc1,c
  2465  00094E  0E00               	movlw	0
  2466  000950  6EE6               	movwf	postinc1,c
  2467  000952  C001  FFE6         	movff	_task_running,postinc1
  2468  000956  C002  FFE6         	movff	_task_running+1,postinc1
  2469  00095A  EC8D  F00A         	call	___wmul	;wreg free
  2470  00095E  0E0C               	movlw	low (_F_APTOS+12)
  2471  000960  243B               	addwf	btemp,w,c
  2472  000962  6ED9               	movwf	fsr2l,c
  2473  000964  0E01               	movlw	high (_F_APTOS+12)
  2474  000966  203C               	addwfc	btemp+1,w,c
  2475  000968  6EDA               	movwf	fsr2h,c
  2476  00096A  06DE               	decf	postinc2,f,c
  2477  00096C  0E00               	movlw	0
  2478  00096E  5ADD               	subwfb	postdec2,f,c
  2479  000970  0E03               	movlw	3
  2480  000972  6EE6               	movwf	postinc1,c
  2481  000974  0E00               	movlw	0
  2482  000976  6EE6               	movwf	postinc1,c
  2483  000978  0E11               	movlw	17
  2484  00097A  6EE6               	movwf	postinc1,c
  2485  00097C  0E00               	movlw	0
  2486  00097E  6EE6               	movwf	postinc1,c
  2487  000980  C001  FFE6         	movff	_task_running,postinc1
  2488  000984  C002  FFE6         	movff	_task_running+1,postinc1
  2489  000988  EC8D  F00A         	call	___wmul	;wreg free
  2490  00098C  0E0C               	movlw	low (_F_APTOS+12)
  2491  00098E  243B               	addwf	btemp,w,c
  2492  000990  6ED9               	movwf	fsr2l,c
  2493  000992  0E01               	movlw	high (_F_APTOS+12)
  2494  000994  203C               	addwfc	btemp+1,w,c
  2495  000996  6EDA               	movwf	fsr2h,c
  2496  000998  CFDE F03C          	movff	postinc2,btemp+1
  2497  00099C  CFDD F03D          	movff	postdec2,btemp+2
  2498  0009A0  C03C  FFE6         	movff	btemp+1,postinc1
  2499  0009A4  C03D  FFE6         	movff	btemp+2,postinc1
  2500  0009A8  EC8D  F00A         	call	___wmul	;wreg free
  2501  0009AC  C03B  F043         	movff	btemp,btemp+8
  2502  0009B0  C03C  F044         	movff	btemp+1,btemp+9
  2503  0009B4  0E11               	movlw	17
  2504  0009B6  6EE6               	movwf	postinc1,c
  2505  0009B8  0E00               	movlw	0
  2506  0009BA  6EE6               	movwf	postinc1,c
  2507  0009BC  C001  FFE6         	movff	_task_running,postinc1
  2508  0009C0  C002  FFE6         	movff	_task_running+1,postinc1
  2509  0009C4  EC8D  F00A         	call	___wmul	;wreg free
  2510  0009C8  0E00               	movlw	low _F_APTOS
  2511  0009CA  6E45               	movwf	btemp+10,c
  2512  0009CC  0E01               	movlw	high _F_APTOS
  2513  0009CE  6E46               	movwf	btemp+11,c
  2514  0009D0  0E09               	movlw	9
  2515  0009D2  2645               	addwf	btemp+10,f,c
  2516  0009D4  0E00               	movlw	0
  2517  0009D6  2246               	addwfc	btemp+11,f,c
  2518  0009D8  503B               	movf	btemp,w,c
  2519  0009DA  2645               	addwf	btemp+10,f,c
  2520  0009DC  503C               	movf	btemp+1,w,c
  2521  0009DE  2246               	addwfc	btemp+11,f,c
  2522  0009E0  5043               	movf	btemp+8,w,c
  2523  0009E2  2445               	addwf	btemp+10,w,c
  2524  0009E4  6ED9               	movwf	fsr2l,c
  2525  0009E6  5044               	movf	btemp+9,w,c
  2526  0009E8  2046               	addwfc	btemp+11,w,c
  2527  0009EA  6EDA               	movwf	fsr2h,c
  2528  0009EC  50DF               	movf	indf2,w,c
  2529  0009EE  6EFF               	movwf	tosu,c	;volatile
  2530  0009F0  0E03               	movlw	3
  2531  0009F2  6EE6               	movwf	postinc1,c
  2532  0009F4  0E00               	movlw	0
  2533  0009F6  6EE6               	movwf	postinc1,c
  2534  0009F8  0E11               	movlw	17
  2535  0009FA  6EE6               	movwf	postinc1,c
  2536  0009FC  0E00               	movlw	0
  2537  0009FE  6EE6               	movwf	postinc1,c
  2538  000A00  C001  FFE6         	movff	_task_running,postinc1
  2539  000A04  C002  FFE6         	movff	_task_running+1,postinc1
  2540  000A08  EC8D  F00A         	call	___wmul	;wreg free
  2541  000A0C  0E0C               	movlw	low (_F_APTOS+12)
  2542  000A0E  243B               	addwf	btemp,w,c
  2543  000A10  6ED9               	movwf	fsr2l,c
  2544  000A12  0E01               	movlw	high (_F_APTOS+12)
  2545  000A14  203C               	addwfc	btemp+1,w,c
  2546  000A16  6EDA               	movwf	fsr2h,c
  2547  000A18  CFDE F03C          	movff	postinc2,btemp+1
  2548  000A1C  CFDD F03D          	movff	postdec2,btemp+2
  2549  000A20  C03C  FFE6         	movff	btemp+1,postinc1
  2550  000A24  C03D  FFE6         	movff	btemp+2,postinc1
  2551  000A28  EC8D  F00A         	call	___wmul	;wreg free
  2552  000A2C  C03B  F043         	movff	btemp,btemp+8
  2553  000A30  C03C  F044         	movff	btemp+1,btemp+9
  2554  000A34  0E11               	movlw	17
  2555  000A36  6EE6               	movwf	postinc1,c
  2556  000A38  0E00               	movlw	0
  2557  000A3A  6EE6               	movwf	postinc1,c
  2558  000A3C  C001  FFE6         	movff	_task_running,postinc1
  2559  000A40  C002  FFE6         	movff	_task_running+1,postinc1
  2560  000A44  EC8D  F00A         	call	___wmul	;wreg free
  2561  000A48  0E00               	movlw	low _F_APTOS
  2562  000A4A  6E45               	movwf	btemp+10,c
  2563  000A4C  0E01               	movlw	high _F_APTOS
  2564  000A4E  6E46               	movwf	btemp+11,c
  2565  000A50  0E0A               	movlw	10
  2566  000A52  2645               	addwf	btemp+10,f,c
  2567  000A54  0E00               	movlw	0
  2568  000A56  2246               	addwfc	btemp+11,f,c
  2569  000A58  503B               	movf	btemp,w,c
  2570  000A5A  2645               	addwf	btemp+10,f,c
  2571  000A5C  503C               	movf	btemp+1,w,c
  2572  000A5E  2246               	addwfc	btemp+11,f,c
  2573  000A60  5043               	movf	btemp+8,w,c
  2574  000A62  2445               	addwf	btemp+10,w,c
  2575  000A64  6ED9               	movwf	fsr2l,c
  2576  000A66  5044               	movf	btemp+9,w,c
  2577  000A68  2046               	addwfc	btemp+11,w,c
  2578  000A6A  6EDA               	movwf	fsr2h,c
  2579  000A6C  50DF               	movf	indf2,w,c
  2580  000A6E  6EFD               	movwf	tosl,c	;volatile
  2581  000A70  0E03               	movlw	3
  2582  000A72  6EE6               	movwf	postinc1,c
  2583  000A74  0E00               	movlw	0
  2584  000A76  6EE6               	movwf	postinc1,c
  2585  000A78  0E11               	movlw	17
  2586  000A7A  6EE6               	movwf	postinc1,c
  2587  000A7C  0E00               	movlw	0
  2588  000A7E  6EE6               	movwf	postinc1,c
  2589  000A80  C001  FFE6         	movff	_task_running,postinc1
  2590  000A84  C002  FFE6         	movff	_task_running+1,postinc1
  2591  000A88  EC8D  F00A         	call	___wmul	;wreg free
  2592  000A8C  0E0C               	movlw	low (_F_APTOS+12)
  2593  000A8E  243B               	addwf	btemp,w,c
  2594  000A90  6ED9               	movwf	fsr2l,c
  2595  000A92  0E01               	movlw	high (_F_APTOS+12)
  2596  000A94  203C               	addwfc	btemp+1,w,c
  2597  000A96  6EDA               	movwf	fsr2h,c
  2598  000A98  CFDE F03C          	movff	postinc2,btemp+1
  2599  000A9C  CFDD F03D          	movff	postdec2,btemp+2
  2600  000AA0  C03C  FFE6         	movff	btemp+1,postinc1
  2601  000AA4  C03D  FFE6         	movff	btemp+2,postinc1
  2602  000AA8  EC8D  F00A         	call	___wmul	;wreg free
  2603  000AAC  C03B  F043         	movff	btemp,btemp+8
  2604  000AB0  C03C  F044         	movff	btemp+1,btemp+9
  2605  000AB4  0E11               	movlw	17
  2606  000AB6  6EE6               	movwf	postinc1,c
  2607  000AB8  0E00               	movlw	0
  2608  000ABA  6EE6               	movwf	postinc1,c
  2609  000ABC  C001  FFE6         	movff	_task_running,postinc1
  2610  000AC0  C002  FFE6         	movff	_task_running+1,postinc1
  2611  000AC4  EC8D  F00A         	call	___wmul	;wreg free
  2612  000AC8  0E00               	movlw	low _F_APTOS
  2613  000ACA  6E45               	movwf	btemp+10,c
  2614  000ACC  0E01               	movlw	high _F_APTOS
  2615  000ACE  6E46               	movwf	btemp+11,c
  2616  000AD0  0E0B               	movlw	11
  2617  000AD2  2645               	addwf	btemp+10,f,c
  2618  000AD4  0E00               	movlw	0
  2619  000AD6  2246               	addwfc	btemp+11,f,c
  2620  000AD8  503B               	movf	btemp,w,c
  2621  000ADA  2645               	addwf	btemp+10,f,c
  2622  000ADC  503C               	movf	btemp+1,w,c
  2623  000ADE  2246               	addwfc	btemp+11,f,c
  2624  000AE0  5043               	movf	btemp+8,w,c
  2625  000AE2  2445               	addwf	btemp+10,w,c
  2626  000AE4  6ED9               	movwf	fsr2l,c
  2627  000AE6  5044               	movf	btemp+9,w,c
  2628  000AE8  2046               	addwfc	btemp+11,w,c
  2629  000AEA  6EDA               	movwf	fsr2h,c
  2630  000AEC  50DF               	movf	indf2,w,c
  2631  000AEE  6EFE               	movwf	tosh,c	;volatile
  2632  000AF0  0E11               	movlw	17
  2633  000AF2  6EE6               	movwf	postinc1,c
  2634  000AF4  0E00               	movlw	0
  2635  000AF6  6EE6               	movwf	postinc1,c
  2636  000AF8  C001  FFE6         	movff	_task_running,postinc1
  2637  000AFC  C002  FFE6         	movff	_task_running+1,postinc1
  2638  000B00  EC8D  F00A         	call	___wmul	;wreg free
  2639  000B04  0E0C               	movlw	low (_F_APTOS+12)
  2640  000B06  243B               	addwf	btemp,w,c
  2641  000B08  6ED9               	movwf	fsr2l,c
  2642  000B0A  0E01               	movlw	high (_F_APTOS+12)
  2643  000B0C  203C               	addwfc	btemp+1,w,c
  2644  000B0E  6EDA               	movwf	fsr2h,c
  2645  000B10  50DE               	movf	postinc2,w,c
  2646  000B12  10DE               	iorwf	postinc2,w,c
  2647  000B14  A4D8               	btfss	status,2,c
  2648  000B16  D718               	goto	l86
  2649  000B18                     u35_20:
  2650  000B18  0E11               	movlw	17
  2651  000B1A  6EE6               	movwf	postinc1,c
  2652  000B1C  0E00               	movlw	0
  2653  000B1E  6EE6               	movwf	postinc1,c
  2654  000B20  C001  FFE6         	movff	_task_running,postinc1
  2655  000B24  C002  FFE6         	movff	_task_running+1,postinc1
  2656  000B28  EC8D  F00A         	call	___wmul	;wreg free
  2657  000B2C  0E08               	movlw	low (_F_APTOS+8)
  2658  000B2E  243B               	addwf	btemp,w,c
  2659  000B30  6ED9               	movwf	fsr2l,c
  2660  000B32  0E01               	movlw	high (_F_APTOS+8)
  2661  000B34  203C               	addwfc	btemp+1,w,c
  2662  000B36  6EDA               	movwf	fsr2h,c
  2663  000B38  0E02               	movlw	2
  2664  000B3A  6EDF               	movwf	indf2,c
  2665  000B3C  8EF2               	bsf	intcon,7,c	;volatile
  2666                           
  2667                           ;kernel.c: 54: (INTCONbits.GIE = 1);
  2668  000B3E  8EF2               	bsf	intcon,7,c	;volatile
  2669                           
  2670                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2671  000B40  52E5               	movf	postdec1,f,c
  2672  000B42  0012               	return		;funcret
  2673  000B44                     __end_of_dispatcher:
  2674                           	opt stack 0
  2675                           tosu	equ	0xFFF
  2676                           tosh	equ	0xFFE
  2677                           tosl	equ	0xFFD
  2678                           stkptr	equ	0xFFC
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           intcon	equ	0xFF2
  2686                           postinc0	equ	0xFEE
  2687                           postdec0	equ	0xFED
  2688                           plusw0	equ	0xFEB
  2689                           fsr0h	equ	0xFEA
  2690                           fsr0l	equ	0xFE9
  2691                           wreg	equ	0xFE8
  2692                           postinc1	equ	0xFE6
  2693                           postdec1	equ	0xFE5
  2694                           plusw1	equ	0xFE3
  2695                           fsr1h	equ	0xFE2
  2696                           fsr1l	equ	0xFE1
  2697                           bsr	equ	0xFE0
  2698                           indf2	equ	0xFDF
  2699                           postinc2	equ	0xFDE
  2700                           postdec2	equ	0xFDD
  2701                           plusw2	equ	0xFDB
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _rr_scheduler *****************
  2707 ;; Defined at:
  2708 ;;		line 12 in file "scheduler.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  next_task_to    2  [STACK] unsigned int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2  [STACK] unsigned int 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    5
  2729 ;; This function calls:
  2730 ;;		___lwmod
  2731 ;;		___wmul
  2732 ;; This function is called by:
  2733 ;;		_dispatcher
  2734 ;; This function uses a reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text13
  2738  0016C8                     __ptext13:
  2739                           	opt stack 0
  2740  0016C8                     _rr_scheduler:
  2741                           	opt stack 0
  2742                           
  2743                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  2744  0016C8  52E6               	movf	postinc1,f,c
  2745  0016CA  52E6               	movf	postinc1,f,c
  2746                           
  2747                           ;scheduler.c: 14: u_int next_task_to_run = task_running;
  2748                           
  2749                           ;incstack = 0
  2750  0016CC  C001  F03C         	movff	_task_running,btemp+1
  2751  0016D0  C002  F03D         	movff	_task_running+1,btemp+2
  2752                           
  2753                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2754  0016D4  0EFE               	movlw	-2
  2755  0016D6  C03C  FFE3         	movff	btemp+1,plusw1
  2756  0016DA  0EFF               	movlw	-1
  2757  0016DC  C03D  FFE3         	movff	btemp+2,plusw1
  2758  0016E0                     l1414:
  2759                           
  2760                           ;scheduler.c: 17: next_task_to_run = (next_task_to_run + 1) % tasks_installed;
  2761  0016E0  C003  FFE6         	movff	_tasks_installed,postinc1
  2762  0016E4  C004  FFE6         	movff	_tasks_installed+1,postinc1
  2763                           
  2764                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2765  0016E8  0EFC               	movlw	-4
  2766  0016EA  50E3               	movf	plusw1,w,c
  2767  0016EC  0F01               	addlw	1
  2768  0016EE  6E3C               	movwf	btemp+1,c
  2769  0016F0  0EFD               	movlw	-3
  2770  0016F2  CFE3 F03D          	movff	plusw1,btemp+2
  2771  0016F6  0E00               	movlw	0
  2772  0016F8  223D               	addwfc	btemp+2,f,c
  2773  0016FA  C03C  FFE6         	movff	btemp+1,postinc1
  2774  0016FE  C03D  FFE6         	movff	btemp+2,postinc1
  2775  001702  EC83  F009         	call	___lwmod	;wreg free
  2776                           
  2777                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2778  001706  0EFE               	movlw	-2
  2779  001708  C03B  FFE3         	movff	btemp,plusw1
  2780  00170C  0EFF               	movlw	-1
  2781  00170E  C03C  FFE3         	movff	btemp+1,plusw1
  2782                           
  2783                           ;scheduler.c: 18: } while (F_APTOS[next_task_to_run].task_state != READY);
  2784  001712  0E11               	movlw	17
  2785  001714  6EE6               	movwf	postinc1,c
  2786  001716  0E00               	movlw	0
  2787  001718  6EE6               	movwf	postinc1,c
  2788                           
  2789                           ;stkvar	_next_task_to_run @ sp[(-4)+0]
  2790  00171A  0EFC               	movlw	-4
  2791  00171C  CFE3 FFE6          	movff	plusw1,postinc1
  2792  001720  CFE3 FFE6          	movff	plusw1,postinc1
  2793  001724  EC8D  F00A         	call	___wmul	;wreg free
  2794  001728  0E08               	movlw	low (_F_APTOS+8)
  2795  00172A  243B               	addwf	btemp,w,c
  2796  00172C  6ED9               	movwf	fsr2l,c
  2797  00172E  0E01               	movlw	high (_F_APTOS+8)
  2798  001730  203C               	addwfc	btemp+1,w,c
  2799  001732  6EDA               	movwf	fsr2h,c
  2800  001734  04DE               	decf	postinc2,w,c
  2801  001736  A4D8               	btfss	status,2,c
  2802  001738  D7D3               	goto	l1414
  2803                           
  2804                           ;scheduler.c: 20: return next_task_to_run;
  2805                           ;stkvar	_next_task_to_run @ sp[(-2)+0]
  2806  00173A  0EFE               	movlw	-2
  2807  00173C  CFE3 F03B          	movff	plusw1,btemp
  2808  001740  0EFF               	movlw	-1
  2809  001742  CFE3 F03C          	movff	plusw1,btemp+1
  2810                           
  2811                           ; _rr_scheduler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2812  001746  52E5               	movf	postdec1,f,c
  2813  001748  52E5               	movf	postdec1,f,c
  2814  00174A  0012               	return		;funcret
  2815  00174C                     __end_of_rr_scheduler:
  2816                           	opt stack 0
  2817                           tosu	equ	0xFFF
  2818                           tosh	equ	0xFFE
  2819                           tosl	equ	0xFFD
  2820                           stkptr	equ	0xFFC
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           postdec0	equ	0xFED
  2830                           plusw0	equ	0xFEB
  2831                           fsr0h	equ	0xFEA
  2832                           fsr0l	equ	0xFE9
  2833                           wreg	equ	0xFE8
  2834                           postinc1	equ	0xFE6
  2835                           postdec1	equ	0xFE5
  2836                           plusw1	equ	0xFE3
  2837                           fsr1h	equ	0xFE2
  2838                           fsr1l	equ	0xFE1
  2839                           bsr	equ	0xFE0
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           postdec2	equ	0xFDD
  2843                           plusw2	equ	0xFDB
  2844                           fsr2h	equ	0xFDA
  2845                           fsr2l	equ	0xFD9
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function ___lwmod *****************
  2849 ;; Defined at:
  2850 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  dividend        2  [STACK] unsigned int 
  2853 ;;  divisor         2  [STACK] unsigned int 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  counter         1  [STACK] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2  [STACK] unsigned int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2865 ;;      Params:         0       0       0       0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    4
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_rr_scheduler
  2876 ;;		_sem_wait
  2877 ;;		_sem_post
  2878 ;; This function uses a reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text14
  2882  001306                     __ptext14:
  2883                           	opt stack 0
  2884  001306                     ___lwmod:
  2885                           	opt stack 0
  2886                           
  2887                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  2888  001306  52E6               	movf	postinc1,f,c
  2889                           
  2890                           ;stkvar	_divisor @ sp[(-1)+-4]
  2891                           
  2892                           ;incstack = 0
  2893  001308  0EFB               	movlw	-5
  2894  00130A  CFE3 F03B          	movff	plusw1,btemp
  2895  00130E  0EFC               	movlw	-4
  2896  001310  50E3               	movf	plusw1,w,c
  2897  001312  103B               	iorwf	btemp,w,c
  2898  001314  B4D8               	btfsc	status,2,c
  2899  001316  D04A               	goto	u29_20
  2900                           
  2901                           ;stkvar	_counter @ sp[(-1)+0]
  2902  001318  0EFF               	movlw	-1
  2903  00131A  6AE3               	clrf	plusw1,c
  2904  00131C  D010               	goto	L1
  2905  00131E                     l1362:
  2906                           
  2907                           ;stkvar	_divisor @ sp[(-1)+-4]
  2908  00131E  0EFB               	movlw	-5
  2909  001320  50E3               	movf	plusw1,w,c
  2910  001322  90D8               	bcf	status,0,c
  2911  001324  34E8               	rlcf	wreg,w,c
  2912  001326  6E3B               	movwf	btemp,c
  2913  001328  0EFB               	movlw	-5
  2914  00132A  C03B  FFE3         	movff	btemp,plusw1
  2915  00132E  0EFC               	movlw	-4
  2916  001330  50E3               	movf	plusw1,w,c
  2917  001332  34E8               	rlcf	wreg,w,c
  2918  001334  6E3B               	movwf	btemp,c
  2919  001336  0EFC               	movlw	-4
  2920  001338  C03B  FFE3         	movff	btemp,plusw1
  2921                           
  2922                           ;stkvar	_counter @ sp[(-1)+0]
  2923  00133C  0EFF               	movlw	-1
  2924  00133E                     L1:
  2925  00133E  2AE3               	incf	plusw1,f,c
  2926                           
  2927                           ;stkvar	_divisor @ sp[(-1)+-4]
  2928  001340  0EFC               	movlw	-4
  2929  001342  AEE3               	btfss	plusw1,7,c
  2930  001344  D7EC               	goto	l1362
  2931  001346                     u27_20:
  2932                           
  2933                           ;stkvar	_divisor @ sp[(-1)+-4]
  2934  001346  0EFB               	movlw	-5
  2935  001348  CFE3 F03C          	movff	plusw1,btemp+1
  2936  00134C  0EFC               	movlw	-4
  2937  00134E  CFE3 F03D          	movff	plusw1,btemp+2
  2938                           
  2939                           ;stkvar	_dividend @ sp[(-1)+-2]
  2940  001352  0EFD               	movlw	-3
  2941  001354  CFE3 F045          	movff	plusw1,btemp+10
  2942  001358  0EFE               	movlw	-2
  2943  00135A  CFE3 F046          	movff	plusw1,btemp+11
  2944  00135E  503C               	movf	btemp+1,w,c
  2945  001360  5C45               	subwf	btemp+10,w,c
  2946  001362  503D               	movf	btemp+2,w,c
  2947  001364  5846               	subwfb	btemp+11,w,c
  2948  001366  A0D8               	btfss	status,0,c
  2949  001368  D012               	goto	l1372
  2950                           
  2951                           ;stkvar	_divisor @ sp[(-1)+-4]
  2952                           ;stkvar	_dividend @ sp[(-1)+-2]
  2953  00136A  0EFD               	movlw	-3
  2954  00136C  50E3               	movf	plusw1,w,c
  2955  00136E  6E3B               	movwf	btemp,c
  2956  001370  0EFB               	movlw	-5
  2957  001372  50E3               	movf	plusw1,w,c
  2958  001374  5E3B               	subwf	btemp,f,c
  2959  001376  0EFD               	movlw	-3
  2960  001378  C03B  FFE3         	movff	btemp,plusw1
  2961  00137C  0EFE               	movlw	-2
  2962  00137E  50E3               	movf	plusw1,w,c
  2963  001380  6E3B               	movwf	btemp,c
  2964  001382  0EFC               	movlw	-4
  2965  001384  50E3               	movf	plusw1,w,c
  2966  001386  5A3B               	subwfb	btemp,f,c
  2967  001388  0EFE               	movlw	-2
  2968  00138A  C03B  FFE3         	movff	btemp,plusw1
  2969  00138E                     l1372:
  2970                           
  2971                           ;stkvar	_divisor @ sp[(-1)+-4]
  2972  00138E  90D8               	bcf	status,0,c
  2973  001390  0EFC               	movlw	-4
  2974  001392  32E3               	rrcf	plusw1,f,c
  2975  001394  0EFB               	movlw	-5
  2976  001396  32E3               	rrcf	plusw1,f,c
  2977                           
  2978                           ;stkvar	_counter @ sp[(-1)+0]
  2979  001398  0EFF               	movlw	-1
  2980  00139A  50E3               	movf	plusw1,w,c
  2981  00139C  6E3B               	movwf	btemp,c
  2982  00139E  0E01               	movlw	1
  2983  0013A0  5E3B               	subwf	btemp,f,c
  2984  0013A2  0EFF               	movlw	-1
  2985  0013A4  C03B  FFE3         	movff	btemp,plusw1
  2986  0013A8  A4D8               	btfss	status,2,c
  2987  0013AA  D7CD               	goto	u27_20
  2988  0013AC                     u29_20:
  2989                           
  2990                           ;stkvar	_dividend @ sp[(-1)+-2]
  2991  0013AC  0EFD               	movlw	-3
  2992  0013AE  CFE3 F03B          	movff	plusw1,btemp
  2993  0013B2  0EFE               	movlw	-2
  2994  0013B4  CFE3 F03C          	movff	plusw1,btemp+1
  2995                           
  2996                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  2997  0013B8  0EFB               	movlw	251
  2998  0013BA  26E1               	addwf	fsr1l,f,c
  2999  0013BC  0EFF               	movlw	255
  3000  0013BE  22E2               	addwfc	fsr1h,f,c
  3001  0013C0  0012               	return		;funcret
  3002  0013C2                     __end_of___lwmod:
  3003                           	opt stack 0
  3004                           tosu	equ	0xFFF
  3005                           tosh	equ	0xFFE
  3006                           tosl	equ	0xFFD
  3007                           stkptr	equ	0xFFC
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           prodh	equ	0xFF4
  3013                           prodl	equ	0xFF3
  3014                           intcon	equ	0xFF2
  3015                           postinc0	equ	0xFEE
  3016                           postdec0	equ	0xFED
  3017                           plusw0	equ	0xFEB
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           postinc1	equ	0xFE6
  3022                           postdec1	equ	0xFE5
  3023                           plusw1	equ	0xFE3
  3024                           fsr1h	equ	0xFE2
  3025                           fsr1l	equ	0xFE1
  3026                           bsr	equ	0xFE0
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           plusw2	equ	0xFDB
  3031                           fsr2h	equ	0xFDA
  3032                           fsr2l	equ	0xFD9
  3033                           status	equ	0xFD8
  3034                           
  3035 ;; *************** function _aviao2 *****************
  3036 ;; Defined at:
  3037 ;;		line 83 in file "tasks.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1  [STACK] void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3051 ;;      Params:         0       0       0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    8
  3058 ;; This function calls:
  3059 ;;		_delay
  3060 ;;		_sem_post
  3061 ;;		_sem_wait
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text15
  3068  001642                     __ptext15:
  3069                           	opt stack 0
  3070  001642                     _aviao2:
  3071                           	opt stack 19
  3072                           
  3073                           ;tasks.c: 85: PORTDbits.RD5 = 0;
  3074                           
  3075                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3076                           ;incstack = 0
  3077  001642  9A83               	bcf	3971,5,c	;volatile
  3078                           
  3079                           ;tasks.c: 86: PORTDbits.RD6 = 0;
  3080  001644  9C83               	bcf	3971,6,c	;volatile
  3081                           
  3082                           ;tasks.c: 87: PORTDbits.RD4 = 0;
  3083  001646  9883               	bcf	3971,4,c	;volatile
  3084                           
  3085                           ;tasks.c: 88: PORTDbits.RD1 = 0;
  3086  001648  9283               	bcf	3971,1,c	;volatile
  3087  00164A                     l156:
  3088                           
  3089                           ;tasks.c: 91: {
  3090                           ;tasks.c: 93: PORTDbits.RD5 = 1;
  3091  00164A  8A83               	bsf	3971,5,c	;volatile
  3092                           
  3093                           ;tasks.c: 95: delay(6000);
  3094  00164C  0E70               	movlw	112
  3095  00164E  6EE6               	movwf	postinc1,c
  3096  001650  0E17               	movlw	23
  3097  001652  6EE6               	movwf	postinc1,c
  3098  001654  EC80  F00C         	call	_delay	;wreg free
  3099                           
  3100                           ;tasks.c: 97: sem_wait(&spista);
  3101  001658  0E05               	movlw	low _spista
  3102  00165A  6EE6               	movwf	postinc1,c
  3103  00165C  0E00               	movlw	high _spista
  3104  00165E  6EE6               	movwf	postinc1,c
  3105  001660  EC48  F008         	call	_sem_wait	;wreg free
  3106                           
  3107                           ;tasks.c: 99: PORTDbits.RD5 = 0;
  3108  001664  9A83               	bcf	3971,5,c	;volatile
  3109                           
  3110                           ;tasks.c: 101: PORTDbits.RD6 = 1;
  3111  001666  8C83               	bsf	3971,6,c	;volatile
  3112                           
  3113                           ;tasks.c: 103: delay(6000);
  3114  001668  0E70               	movlw	112
  3115  00166A  6EE6               	movwf	postinc1,c
  3116  00166C  0E17               	movlw	23
  3117  00166E  6EE6               	movwf	postinc1,c
  3118  001670  EC80  F00C         	call	_delay	;wreg free
  3119                           
  3120                           ;tasks.c: 106: PORTDbits.RD6 = 0;
  3121  001674  9C83               	bcf	3971,6,c	;volatile
  3122                           
  3123                           ;tasks.c: 109: sem_post(&spista);
  3124  001676  0E05               	movlw	low _spista
  3125  001678  6EE6               	movwf	postinc1,c
  3126  00167A  0E00               	movlw	high _spista
  3127  00167C  6EE6               	movwf	postinc1,c
  3128  00167E  ECB2  F007         	call	_sem_post	;wreg free
  3129                           
  3130                           ;tasks.c: 110: delay(300);
  3131  001682  0E2C               	movlw	44
  3132  001684  6EE6               	movwf	postinc1,c
  3133  001686  0E01               	movlw	1
  3134  001688  6EE6               	movwf	postinc1,c
  3135  00168A  EC80  F00C         	call	_delay	;wreg free
  3136                           
  3137                           ;tasks.c: 112: PORTDbits.RD1 = 1;
  3138  00168E  8283               	bsf	3971,1,c	;volatile
  3139                           
  3140                           ;tasks.c: 114: delay(6000);
  3141  001690  0E70               	movlw	112
  3142  001692  6EE6               	movwf	postinc1,c
  3143  001694  0E17               	movlw	23
  3144  001696  6EE6               	movwf	postinc1,c
  3145  001698  EC80  F00C         	call	_delay	;wreg free
  3146                           
  3147                           ;tasks.c: 116: sem_wait(&spista);
  3148  00169C  0E05               	movlw	low _spista
  3149  00169E  6EE6               	movwf	postinc1,c
  3150  0016A0  0E00               	movlw	high _spista
  3151  0016A2  6EE6               	movwf	postinc1,c
  3152  0016A4  EC48  F008         	call	_sem_wait	;wreg free
  3153                           
  3154                           ;tasks.c: 118: PORTDbits.RD1 = 0;
  3155  0016A8  9283               	bcf	3971,1,c	;volatile
  3156                           
  3157                           ;tasks.c: 120: PORTDbits.RD4 = 1;
  3158  0016AA  8883               	bsf	3971,4,c	;volatile
  3159                           
  3160                           ;tasks.c: 122: delay(6000);
  3161  0016AC  0E70               	movlw	112
  3162  0016AE  6EE6               	movwf	postinc1,c
  3163  0016B0  0E17               	movlw	23
  3164  0016B2  6EE6               	movwf	postinc1,c
  3165  0016B4  EC80  F00C         	call	_delay	;wreg free
  3166                           
  3167                           ;tasks.c: 124: PORTDbits.RD4 = 0;
  3168  0016B8  9883               	bcf	3971,4,c	;volatile
  3169                           
  3170                           ;tasks.c: 126: sem_post(&spista);
  3171  0016BA  0E05               	movlw	low _spista
  3172  0016BC  6EE6               	movwf	postinc1,c
  3173  0016BE  0E00               	movlw	high _spista
  3174  0016C0  6EE6               	movwf	postinc1,c
  3175  0016C2  ECB2  F007         	call	_sem_post	;wreg free
  3176  0016C6  D7C1               	goto	l156
  3177  0016C8                     __end_of_aviao2:
  3178                           	opt stack 0
  3179                           tosu	equ	0xFFF
  3180                           tosh	equ	0xFFE
  3181                           tosl	equ	0xFFD
  3182                           stkptr	equ	0xFFC
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           prodh	equ	0xFF4
  3188                           prodl	equ	0xFF3
  3189                           intcon	equ	0xFF2
  3190                           postinc0	equ	0xFEE
  3191                           postdec0	equ	0xFED
  3192                           plusw0	equ	0xFEB
  3193                           fsr0h	equ	0xFEA
  3194                           fsr0l	equ	0xFE9
  3195                           wreg	equ	0xFE8
  3196                           postinc1	equ	0xFE6
  3197                           postdec1	equ	0xFE5
  3198                           plusw1	equ	0xFE3
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           bsr	equ	0xFE0
  3202                           indf2	equ	0xFDF
  3203                           postinc2	equ	0xFDE
  3204                           postdec2	equ	0xFDD
  3205                           plusw2	equ	0xFDB
  3206                           fsr2h	equ	0xFDA
  3207                           fsr2l	equ	0xFD9
  3208                           status	equ	0xFD8
  3209                           
  3210 ;; *************** function _aviao3 *****************
  3211 ;; Defined at:
  3212 ;;		line 133 in file "tasks.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1  [STACK] void 
  3219 ;; Registers used:
  3220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3226 ;;      Params:         0       0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    8
  3233 ;; This function calls:
  3234 ;;		_delay
  3235 ;;		_sem_post
  3236 ;;		_sem_wait
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text16
  3243  00174C                     __ptext16:
  3244                           	opt stack 0
  3245  00174C                     _aviao3:
  3246                           	opt stack 19
  3247                           
  3248                           ;tasks.c: 135: PORTDbits.RD7 = 0;
  3249                           
  3250                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3251                           ;incstack = 0
  3252  00174C  9E83               	bcf	3971,7,c	;volatile
  3253                           
  3254                           ;tasks.c: 136: PORTDbits.RD6 = 0;
  3255  00174E  9C83               	bcf	3971,6,c	;volatile
  3256                           
  3257                           ;tasks.c: 137: PORTDbits.RD4 = 0;
  3258  001750  9883               	bcf	3971,4,c	;volatile
  3259                           
  3260                           ;tasks.c: 138: PORTDbits.RD2 = 0;
  3261  001752  9483               	bcf	3971,2,c	;volatile
  3262  001754                     l162:
  3263                           
  3264                           ;tasks.c: 142: PORTDbits.RD7 = 1;
  3265  001754  8E83               	bsf	3971,7,c	;volatile
  3266                           
  3267                           ;tasks.c: 144: delay(6000);
  3268  001756  0E70               	movlw	112
  3269  001758  6EE6               	movwf	postinc1,c
  3270  00175A  0E17               	movlw	23
  3271  00175C  6EE6               	movwf	postinc1,c
  3272  00175E  EC80  F00C         	call	_delay	;wreg free
  3273                           
  3274                           ;tasks.c: 146: sem_wait(&spista);
  3275  001762  0E05               	movlw	low _spista
  3276  001764  6EE6               	movwf	postinc1,c
  3277  001766  0E00               	movlw	high _spista
  3278  001768  6EE6               	movwf	postinc1,c
  3279  00176A  EC48  F008         	call	_sem_wait	;wreg free
  3280                           
  3281                           ;tasks.c: 148: PORTDbits.RD7 = 0;
  3282  00176E  9E83               	bcf	3971,7,c	;volatile
  3283                           
  3284                           ;tasks.c: 150: PORTDbits.RD6 = 1;
  3285  001770  8C83               	bsf	3971,6,c	;volatile
  3286                           
  3287                           ;tasks.c: 152: delay(6000);
  3288  001772  0E70               	movlw	112
  3289  001774  6EE6               	movwf	postinc1,c
  3290  001776  0E17               	movlw	23
  3291  001778  6EE6               	movwf	postinc1,c
  3292  00177A  EC80  F00C         	call	_delay	;wreg free
  3293                           
  3294                           ;tasks.c: 155: PORTDbits.RD6 = 0;
  3295  00177E  9C83               	bcf	3971,6,c	;volatile
  3296                           
  3297                           ;tasks.c: 158: sem_post(&spista);
  3298  001780  0E05               	movlw	low _spista
  3299  001782  6EE6               	movwf	postinc1,c
  3300  001784  0E00               	movlw	high _spista
  3301  001786  6EE6               	movwf	postinc1,c
  3302  001788  ECB2  F007         	call	_sem_post	;wreg free
  3303                           
  3304                           ;tasks.c: 160: PORTDbits.RD2 = 1;
  3305  00178C  8483               	bsf	3971,2,c	;volatile
  3306                           
  3307                           ;tasks.c: 162: delay(6000);
  3308  00178E  0E70               	movlw	112
  3309  001790  6EE6               	movwf	postinc1,c
  3310  001792  0E17               	movlw	23
  3311  001794  6EE6               	movwf	postinc1,c
  3312  001796  EC80  F00C         	call	_delay	;wreg free
  3313                           
  3314                           ;tasks.c: 166: sem_wait(&spista);
  3315  00179A  0E05               	movlw	low _spista
  3316  00179C  6EE6               	movwf	postinc1,c
  3317  00179E  0E00               	movlw	high _spista
  3318  0017A0  6EE6               	movwf	postinc1,c
  3319  0017A2  EC48  F008         	call	_sem_wait	;wreg free
  3320                           
  3321                           ;tasks.c: 168: PORTDbits.RD2 = 0;
  3322  0017A6  9483               	bcf	3971,2,c	;volatile
  3323                           
  3324                           ;tasks.c: 171: PORTDbits.RD4 = 1;
  3325  0017A8  8883               	bsf	3971,4,c	;volatile
  3326                           
  3327                           ;tasks.c: 173: delay(6000);
  3328  0017AA  0E70               	movlw	112
  3329  0017AC  6EE6               	movwf	postinc1,c
  3330  0017AE  0E17               	movlw	23
  3331  0017B0  6EE6               	movwf	postinc1,c
  3332  0017B2  EC80  F00C         	call	_delay	;wreg free
  3333                           
  3334                           ;tasks.c: 175: PORTDbits.RD4 = 0;
  3335  0017B6  9883               	bcf	3971,4,c	;volatile
  3336                           
  3337                           ;tasks.c: 177: sem_post(&spista);
  3338  0017B8  0E05               	movlw	low _spista
  3339  0017BA  6EE6               	movwf	postinc1,c
  3340  0017BC  0E00               	movlw	high _spista
  3341  0017BE  6EE6               	movwf	postinc1,c
  3342  0017C0  ECB2  F007         	call	_sem_post	;wreg free
  3343  0017C4  D7C7               	goto	l162
  3344  0017C6                     __end_of_aviao3:
  3345                           	opt stack 0
  3346                           tosu	equ	0xFFF
  3347                           tosh	equ	0xFFE
  3348                           tosl	equ	0xFFD
  3349                           stkptr	equ	0xFFC
  3350                           tblptru	equ	0xFF8
  3351                           tblptrh	equ	0xFF7
  3352                           tblptrl	equ	0xFF6
  3353                           tablat	equ	0xFF5
  3354                           prodh	equ	0xFF4
  3355                           prodl	equ	0xFF3
  3356                           intcon	equ	0xFF2
  3357                           postinc0	equ	0xFEE
  3358                           postdec0	equ	0xFED
  3359                           plusw0	equ	0xFEB
  3360                           fsr0h	equ	0xFEA
  3361                           fsr0l	equ	0xFE9
  3362                           wreg	equ	0xFE8
  3363                           postinc1	equ	0xFE6
  3364                           postdec1	equ	0xFE5
  3365                           plusw1	equ	0xFE3
  3366                           fsr1h	equ	0xFE2
  3367                           fsr1l	equ	0xFE1
  3368                           bsr	equ	0xFE0
  3369                           indf2	equ	0xFDF
  3370                           postinc2	equ	0xFDE
  3371                           postdec2	equ	0xFDD
  3372                           plusw2	equ	0xFDB
  3373                           fsr2h	equ	0xFDA
  3374                           fsr2l	equ	0xFD9
  3375                           status	equ	0xFD8
  3376                           
  3377 ;; *************** function _tluzesescreve *****************
  3378 ;; Defined at:
  3379 ;;		line 214 in file "tasks.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1  [STACK] void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3393 ;;      Params:         0       0       0       0       0       0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0
  3395 ;;      Temps:          0       0       0       0       0       0       0
  3396 ;;      Totals:         0       0       0       0       0       0       0
  3397 ;;Total ram usage:        0 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; Hardware stack levels required when called:    8
  3400 ;; This function calls:
  3401 ;;		_create_pipe
  3402 ;;		_write_pipe
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text17
  3409  0019A0                     __ptext17:
  3410                           	opt stack 0
  3411  0019A0                     _tluzesescreve:
  3412                           	opt stack 19
  3413                           
  3414                           ;tasks.c: 217: create_pipe(&pipeluzes);
  3415                           
  3416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3417                           ;incstack = 0
  3418  0019A0  0E1F               	movlw	low _pipeluzes
  3419  0019A2  6EE6               	movwf	postinc1,c
  3420  0019A4  0E00               	movlw	high _pipeluzes
  3421  0019A6  6EE6               	movwf	postinc1,c
  3422  0019A8  EC3A  F00A         	call	_create_pipe	;wreg free
  3423  0019AC                     l1728:
  3424                           
  3425                           ;tasks.c: 220: {
  3426                           ;tasks.c: 222: write_pipe(&pipeluzes, 'l');
  3427  0019AC  0E6C               	movlw	108
  3428  0019AE  6EE6               	movwf	postinc1,c
  3429  0019B0  0E1F               	movlw	low _pipeluzes
  3430  0019B2  6EE6               	movwf	postinc1,c
  3431  0019B4  0E00               	movlw	high _pipeluzes
  3432  0019B6  6EE6               	movwf	postinc1,c
  3433  0019B8  EC08  F007         	call	_write_pipe	;wreg free
  3434  0019BC  D7F7               	goto	l1728
  3435  0019BE                     __end_of_tluzesescreve:
  3436                           	opt stack 0
  3437                           tosu	equ	0xFFF
  3438                           tosh	equ	0xFFE
  3439                           tosl	equ	0xFFD
  3440                           stkptr	equ	0xFFC
  3441                           tblptru	equ	0xFF8
  3442                           tblptrh	equ	0xFF7
  3443                           tblptrl	equ	0xFF6
  3444                           tablat	equ	0xFF5
  3445                           prodh	equ	0xFF4
  3446                           prodl	equ	0xFF3
  3447                           intcon	equ	0xFF2
  3448                           postinc0	equ	0xFEE
  3449                           postdec0	equ	0xFED
  3450                           plusw0	equ	0xFEB
  3451                           fsr0h	equ	0xFEA
  3452                           fsr0l	equ	0xFE9
  3453                           wreg	equ	0xFE8
  3454                           postinc1	equ	0xFE6
  3455                           postdec1	equ	0xFE5
  3456                           plusw1	equ	0xFE3
  3457                           fsr1h	equ	0xFE2
  3458                           fsr1l	equ	0xFE1
  3459                           bsr	equ	0xFE0
  3460                           indf2	equ	0xFDF
  3461                           postinc2	equ	0xFDE
  3462                           postdec2	equ	0xFDD
  3463                           plusw2	equ	0xFDB
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _write_pipe *****************
  3469 ;; Defined at:
  3470 ;;		line 22 in file "pipe.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  pipe            2  [STACK] PTR struct pipe
  3473 ;;		 -> pipeluzes(11), 
  3474 ;;  data            1  [STACK] unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1  [STACK] void 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3486 ;;      Params:         0       0       0       0       0       0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0       0       0
  3489 ;;      Totals:         0       0       0       0       0       0       0
  3490 ;;Total ram usage:        0 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:    7
  3493 ;; This function calls:
  3494 ;;		___wmul
  3495 ;;		_dispatcher
  3496 ;; This function is called by:
  3497 ;;		_tluzesescreve
  3498 ;; This function uses a reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text18
  3502  000E10                     __ptext18:
  3503                           	opt stack 0
  3504  000E10                     _write_pipe:
  3505                           	opt stack 19
  3506                           
  3507                           ;pipe.c: 24: (INTCONbits.GIE = 0);
  3508                           
  3509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
  3510                           ;incstack = 0
  3511  000E10  9EF2               	bcf	intcon,7,c	;volatile
  3512                           
  3513                           ;pipe.c: 27: if (pipe->pipe_itens == 1) {
  3514                           ;stkvar	_pipe @ sp[(0)+-2]
  3515  000E12  0EFE               	movlw	-2
  3516  000E14  CFE3 F03C          	movff	plusw1,btemp+1
  3517  000E18  0EFF               	movlw	-1
  3518  000E1A  CFE3 F03D          	movff	plusw1,btemp+2
  3519  000E1E  0E05               	movlw	5
  3520  000E20  243C               	addwf	btemp+1,w,c
  3521  000E22  6ED9               	movwf	fsr2l,c
  3522  000E24  0E00               	movlw	0
  3523  000E26  203D               	addwfc	btemp+2,w,c
  3524  000E28  6EDA               	movwf	fsr2h,c
  3525  000E2A  04DE               	decf	postinc2,w,c
  3526  000E2C  10DE               	iorwf	postinc2,w,c
  3527  000E2E  A4D8               	btfss	status,2,c
  3528  000E30  D014               	goto	l1562
  3529                           
  3530                           ;pipe.c: 29: pipe->pos_bloqued_write = task_running;
  3531                           ;stkvar	_pipe @ sp[(0)+-2]
  3532  000E32  0EFE               	movlw	-2
  3533  000E34  CFE3 F03C          	movff	plusw1,btemp+1
  3534  000E38  0EFF               	movlw	-1
  3535  000E3A  CFE3 F03D          	movff	plusw1,btemp+2
  3536  000E3E  0E09               	movlw	9
  3537  000E40  243C               	addwf	btemp+1,w,c
  3538  000E42  6ED9               	movwf	fsr2l,c
  3539  000E44  0E00               	movlw	0
  3540  000E46  203D               	addwfc	btemp+2,w,c
  3541  000E48  6EDA               	movwf	fsr2h,c
  3542  000E4A  C001  FFDE         	movff	_task_running,postinc2
  3543  000E4E  C002  FFDD         	movff	_task_running+1,postdec2
  3544                           
  3545                           ;pipe.c: 31: dispatcher(WAITING_PIPE);
  3546  000E52  0E05               	movlw	5
  3547  000E54  6EE6               	movwf	postinc1,c
  3548  000E56  EC02  F003         	call	_dispatcher	;wreg free
  3549  000E5A                     l1562:
  3550                           
  3551                           ;pipe.c: 32: }
  3552                           ;pipe.c: 34: pipe->pipe_queue[pipe->pos_write_pipe] = data;
  3553                           ;stkvar	_data @ sp[(0)+-3]
  3554                           ;stkvar	_pipe @ sp[(0)+-2]
  3555  000E5A  0EFE               	movlw	-2
  3556  000E5C  CFE3 F03C          	movff	plusw1,btemp+1
  3557  000E60  0EFF               	movlw	-1
  3558  000E62  CFE3 F03D          	movff	plusw1,btemp+2
  3559  000E66  0E03               	movlw	3
  3560  000E68  243C               	addwf	btemp+1,w,c
  3561  000E6A  6ED9               	movwf	fsr2l,c
  3562  000E6C  0E00               	movlw	0
  3563  000E6E  203D               	addwfc	btemp+2,w,c
  3564  000E70  6EDA               	movwf	fsr2h,c
  3565  000E72  CFDE F03C          	movff	postinc2,btemp+1
  3566  000E76  CFDD F03D          	movff	postdec2,btemp+2
  3567                           
  3568                           ;stkvar	_pipe @ sp[(0)+-2]
  3569  000E7A  0EFE               	movlw	-2
  3570  000E7C  CFE3 F045          	movff	plusw1,btemp+10
  3571  000E80  0EFF               	movlw	-1
  3572  000E82  CFE3 F046          	movff	plusw1,btemp+11
  3573  000E86  503C               	movf	btemp+1,w,c
  3574  000E88  2445               	addwf	btemp+10,w,c
  3575  000E8A  6ED9               	movwf	fsr2l,c
  3576  000E8C  503D               	movf	btemp+2,w,c
  3577  000E8E  2046               	addwfc	btemp+11,w,c
  3578  000E90  6EDA               	movwf	fsr2h,c
  3579  000E92  0EFD               	movlw	-3
  3580  000E94  CFE3 FFDF          	movff	plusw1,indf2
  3581                           
  3582                           ;pipe.c: 35: pipe->pos_write_pipe = (pipe->pos_write_pipe + 1) % 1;
  3583                           ;stkvar	_pipe @ sp[(0)+-2]
  3584  000E98  0EFE               	movlw	-2
  3585  000E9A  CFE3 F03C          	movff	plusw1,btemp+1
  3586  000E9E  0EFF               	movlw	-1
  3587  000EA0  CFE3 F03D          	movff	plusw1,btemp+2
  3588  000EA4  0E03               	movlw	3
  3589  000EA6  243C               	addwf	btemp+1,w,c
  3590  000EA8  6ED9               	movwf	fsr2l,c
  3591  000EAA  0E00               	movlw	0
  3592  000EAC  203D               	addwfc	btemp+2,w,c
  3593  000EAE  6EDA               	movwf	fsr2h,c
  3594  000EB0  0E00               	movlw	0
  3595  000EB2  6EDE               	movwf	postinc2,c
  3596  000EB4  0E00               	movlw	0
  3597  000EB6  6EDD               	movwf	postdec2,c
  3598                           
  3599                           ;pipe.c: 36: pipe->pipe_itens++;
  3600                           ;stkvar	_pipe @ sp[(0)+-2]
  3601  000EB8  0EFE               	movlw	-2
  3602  000EBA  CFE3 F03C          	movff	plusw1,btemp+1
  3603  000EBE  0EFF               	movlw	-1
  3604  000EC0  CFE3 F03D          	movff	plusw1,btemp+2
  3605  000EC4  0E05               	movlw	5
  3606  000EC6  243C               	addwf	btemp+1,w,c
  3607  000EC8  6ED9               	movwf	fsr2l,c
  3608  000ECA  0E00               	movlw	0
  3609  000ECC  203D               	addwfc	btemp+2,w,c
  3610  000ECE  6EDA               	movwf	fsr2h,c
  3611  000ED0  2ADE               	incf	postinc2,f,c
  3612  000ED2  0E00               	movlw	0
  3613  000ED4  22DD               	addwfc	postdec2,f,c
  3614                           
  3615                           ;pipe.c: 39: if (pipe->pos_bloqued_read > 0) {
  3616                           ;stkvar	_pipe @ sp[(0)+-2]
  3617  000ED6  0EFE               	movlw	-2
  3618  000ED8  CFE3 F03C          	movff	plusw1,btemp+1
  3619  000EDC  0EFF               	movlw	-1
  3620  000EDE  CFE3 F03D          	movff	plusw1,btemp+2
  3621  000EE2  0E07               	movlw	7
  3622  000EE4  243C               	addwf	btemp+1,w,c
  3623  000EE6  6ED9               	movwf	fsr2l,c
  3624  000EE8  0E00               	movlw	0
  3625  000EEA  203D               	addwfc	btemp+2,w,c
  3626  000EEC  6EDA               	movwf	fsr2h,c
  3627  000EEE  50DE               	movf	postinc2,w,c
  3628  000EF0  10DE               	iorwf	postinc2,w,c
  3629  000EF2  B4D8               	btfsc	status,2,c
  3630  000EF4  D032               	goto	l1574
  3631                           
  3632                           ;pipe.c: 40: F_APTOS[pipe->pos_bloqued_read].task_state = READY;
  3633  000EF6  0E11               	movlw	17
  3634  000EF8  6EE6               	movwf	postinc1,c
  3635  000EFA  0E00               	movlw	0
  3636  000EFC  6EE6               	movwf	postinc1,c
  3637                           
  3638                           ;stkvar	_pipe @ sp[(-2)+-2]
  3639  000EFE  0EFC               	movlw	-4
  3640  000F00  CFE3 F03C          	movff	plusw1,btemp+1
  3641  000F04  0EFD               	movlw	-3
  3642  000F06  CFE3 F03D          	movff	plusw1,btemp+2
  3643  000F0A  0E07               	movlw	7
  3644  000F0C  243C               	addwf	btemp+1,w,c
  3645  000F0E  6ED9               	movwf	fsr2l,c
  3646  000F10  0E00               	movlw	0
  3647  000F12  203D               	addwfc	btemp+2,w,c
  3648  000F14  6EDA               	movwf	fsr2h,c
  3649  000F16  CFDE F03C          	movff	postinc2,btemp+1
  3650  000F1A  CFDD F03D          	movff	postdec2,btemp+2
  3651  000F1E  C03C  FFE6         	movff	btemp+1,postinc1
  3652  000F22  C03D  FFE6         	movff	btemp+2,postinc1
  3653  000F26  EC8D  F00A         	call	___wmul	;wreg free
  3654  000F2A  0E08               	movlw	low (_F_APTOS+8)
  3655  000F2C  243B               	addwf	btemp,w,c
  3656  000F2E  6ED9               	movwf	fsr2l,c
  3657  000F30  0E01               	movlw	high (_F_APTOS+8)
  3658  000F32  203C               	addwfc	btemp+1,w,c
  3659  000F34  6EDA               	movwf	fsr2h,c
  3660  000F36  0E01               	movlw	1
  3661  000F38  6EDF               	movwf	indf2,c
  3662                           
  3663                           ;pipe.c: 41: pipe->pos_bloqued_read = 0;
  3664                           ;stkvar	_pipe @ sp[(0)+-2]
  3665  000F3A  0EFE               	movlw	-2
  3666  000F3C  CFE3 F03C          	movff	plusw1,btemp+1
  3667  000F40  0EFF               	movlw	-1
  3668  000F42  CFE3 F03D          	movff	plusw1,btemp+2
  3669  000F46  0E07               	movlw	7
  3670  000F48  243C               	addwf	btemp+1,w,c
  3671  000F4A  6ED9               	movwf	fsr2l,c
  3672  000F4C  0E00               	movlw	0
  3673  000F4E  203D               	addwfc	btemp+2,w,c
  3674  000F50  6EDA               	movwf	fsr2h,c
  3675  000F52  0E00               	movlw	0
  3676  000F54  6EDE               	movwf	postinc2,c
  3677  000F56  0E00               	movlw	0
  3678  000F58  6EDD               	movwf	postdec2,c
  3679  000F5A                     l1574:
  3680                           
  3681                           ;pipe.c: 45: }
  3682                           ;pipe.c: 48: (INTCONbits.GIE = 1);
  3683  000F5A  8EF2               	bsf	intcon,7,c	;volatile
  3684                           
  3685                           ; _write_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  3686  000F5C  52E5               	movf	postdec1,f,c
  3687  000F5E  52E5               	movf	postdec1,f,c
  3688  000F60  52E5               	movf	postdec1,f,c
  3689  000F62  0012               	return		;funcret
  3690  000F64                     __end_of_write_pipe:
  3691                           	opt stack 0
  3692                           tosu	equ	0xFFF
  3693                           tosh	equ	0xFFE
  3694                           tosl	equ	0xFFD
  3695                           stkptr	equ	0xFFC
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           postinc0	equ	0xFEE
  3704                           postdec0	equ	0xFED
  3705                           plusw0	equ	0xFEB
  3706                           fsr0h	equ	0xFEA
  3707                           fsr0l	equ	0xFE9
  3708                           wreg	equ	0xFE8
  3709                           postinc1	equ	0xFE6
  3710                           postdec1	equ	0xFE5
  3711                           plusw1	equ	0xFE3
  3712                           fsr1h	equ	0xFE2
  3713                           fsr1l	equ	0xFE1
  3714                           bsr	equ	0xFE0
  3715                           indf2	equ	0xFDF
  3716                           postinc2	equ	0xFDE
  3717                           postdec2	equ	0xFDD
  3718                           plusw2	equ	0xFDB
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _create_pipe *****************
  3724 ;; Defined at:
  3725 ;;		line 11 in file "pipe.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  pipe            2  [STACK] PTR struct pipe
  3728 ;;		 -> pipeluzes(11), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1  [STACK] void 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+2
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0       0       0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    4
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_tluzesescreve
  3751 ;; This function uses a reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text19
  3755  001474                     __ptext19:
  3756                           	opt stack 0
  3757  001474                     _create_pipe:
  3758                           	opt stack 22
  3759                           
  3760                           ;pipe.c: 13: pipe->pos_read_pipe = 0;
  3761                           ;stkvar	_pipe @ sp[(0)+-2]
  3762                           
  3763                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  3764                           ;incstack = 0
  3765  001474  0EFE               	movlw	-2
  3766  001476  CFE3 F03C          	movff	plusw1,btemp+1
  3767  00147A  0EFF               	movlw	-1
  3768  00147C  CFE3 F03D          	movff	plusw1,btemp+2
  3769  001480  0E01               	movlw	1
  3770  001482  243C               	addwf	btemp+1,w,c
  3771  001484  6ED9               	movwf	fsr2l,c
  3772  001486  0E00               	movlw	0
  3773  001488  203D               	addwfc	btemp+2,w,c
  3774  00148A  6EDA               	movwf	fsr2h,c
  3775  00148C  0E00               	movlw	0
  3776  00148E  6EDE               	movwf	postinc2,c
  3777  001490  0E00               	movlw	0
  3778  001492  6EDD               	movwf	postdec2,c
  3779                           
  3780                           ;pipe.c: 14: pipe->pos_write_pipe = 0;
  3781                           ;stkvar	_pipe @ sp[(0)+-2]
  3782  001494  0EFE               	movlw	-2
  3783  001496  CFE3 F03C          	movff	plusw1,btemp+1
  3784  00149A  0EFF               	movlw	-1
  3785  00149C  CFE3 F03D          	movff	plusw1,btemp+2
  3786  0014A0  0E03               	movlw	3
  3787  0014A2  243C               	addwf	btemp+1,w,c
  3788  0014A4  6ED9               	movwf	fsr2l,c
  3789  0014A6  0E00               	movlw	0
  3790  0014A8  203D               	addwfc	btemp+2,w,c
  3791  0014AA  6EDA               	movwf	fsr2h,c
  3792  0014AC  0E00               	movlw	0
  3793  0014AE  6EDE               	movwf	postinc2,c
  3794  0014B0  0E00               	movlw	0
  3795  0014B2  6EDD               	movwf	postdec2,c
  3796                           
  3797                           ;pipe.c: 15: pipe->pipe_itens = 0;
  3798                           ;stkvar	_pipe @ sp[(0)+-2]
  3799  0014B4  0EFE               	movlw	-2
  3800  0014B6  CFE3 F03C          	movff	plusw1,btemp+1
  3801  0014BA  0EFF               	movlw	-1
  3802  0014BC  CFE3 F03D          	movff	plusw1,btemp+2
  3803  0014C0  0E05               	movlw	5
  3804  0014C2  243C               	addwf	btemp+1,w,c
  3805  0014C4  6ED9               	movwf	fsr2l,c
  3806  0014C6  0E00               	movlw	0
  3807  0014C8  203D               	addwfc	btemp+2,w,c
  3808  0014CA  6EDA               	movwf	fsr2h,c
  3809  0014CC  0E00               	movlw	0
  3810  0014CE  6EDE               	movwf	postinc2,c
  3811  0014D0  0E00               	movlw	0
  3812  0014D2  6EDD               	movwf	postdec2,c
  3813                           
  3814                           ;pipe.c: 18: pipe->pos_bloqued_read = 0;
  3815                           ;stkvar	_pipe @ sp[(0)+-2]
  3816  0014D4  0EFE               	movlw	-2
  3817  0014D6  CFE3 F03C          	movff	plusw1,btemp+1
  3818  0014DA  0EFF               	movlw	-1
  3819  0014DC  CFE3 F03D          	movff	plusw1,btemp+2
  3820  0014E0  0E07               	movlw	7
  3821  0014E2  243C               	addwf	btemp+1,w,c
  3822  0014E4  6ED9               	movwf	fsr2l,c
  3823  0014E6  0E00               	movlw	0
  3824  0014E8  203D               	addwfc	btemp+2,w,c
  3825  0014EA  6EDA               	movwf	fsr2h,c
  3826  0014EC  0E00               	movlw	0
  3827  0014EE  6EDE               	movwf	postinc2,c
  3828  0014F0  0E00               	movlw	0
  3829  0014F2  6EDD               	movwf	postdec2,c
  3830                           
  3831                           ;pipe.c: 19: pipe->pos_bloqued_write = 0;
  3832                           ;stkvar	_pipe @ sp[(0)+-2]
  3833  0014F4  0EFE               	movlw	-2
  3834  0014F6  CFE3 F03C          	movff	plusw1,btemp+1
  3835  0014FA  0EFF               	movlw	-1
  3836  0014FC  CFE3 F03D          	movff	plusw1,btemp+2
  3837  001500  0E09               	movlw	9
  3838  001502  243C               	addwf	btemp+1,w,c
  3839  001504  6ED9               	movwf	fsr2l,c
  3840  001506  0E00               	movlw	0
  3841  001508  203D               	addwfc	btemp+2,w,c
  3842  00150A  6EDA               	movwf	fsr2h,c
  3843  00150C  0E00               	movlw	0
  3844  00150E  6EDE               	movwf	postinc2,c
  3845  001510  0E00               	movlw	0
  3846  001512  6EDD               	movwf	postdec2,c
  3847                           
  3848                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  3849  001514  52E5               	movf	postdec1,f,c
  3850  001516  52E5               	movf	postdec1,f,c
  3851  001518  0012               	return		;funcret
  3852  00151A                     __end_of_create_pipe:
  3853                           	opt stack 0
  3854                           tosu	equ	0xFFF
  3855                           tosh	equ	0xFFE
  3856                           tosl	equ	0xFFD
  3857                           stkptr	equ	0xFFC
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           intcon	equ	0xFF2
  3865                           postinc0	equ	0xFEE
  3866                           postdec0	equ	0xFED
  3867                           plusw0	equ	0xFEB
  3868                           fsr0h	equ	0xFEA
  3869                           fsr0l	equ	0xFE9
  3870                           wreg	equ	0xFE8
  3871                           postinc1	equ	0xFE6
  3872                           postdec1	equ	0xFE5
  3873                           plusw1	equ	0xFE3
  3874                           fsr1h	equ	0xFE2
  3875                           fsr1l	equ	0xFE1
  3876                           bsr	equ	0xFE0
  3877                           indf2	equ	0xFDF
  3878                           postinc2	equ	0xFDE
  3879                           postdec2	equ	0xFDD
  3880                           plusw2	equ	0xFDB
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _tluzes *****************
  3886 ;; Defined at:
  3887 ;;		line 183 in file "tasks.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  dado            1  [STACK] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1  [STACK] void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3901 ;;      Params:         0       0       0       0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    8
  3908 ;; This function calls:
  3909 ;;		_delay
  3910 ;;		_read_pipe
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text20
  3917  0017C6                     __ptext20:
  3918                           	opt stack 0
  3919  0017C6                     _tluzes:
  3920                           	opt stack 0
  3921                           
  3922                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3923  0017C6  52E6               	movf	postinc1,f,c
  3924                           
  3925                           ;tasks.c: 185: TRISCbits.RC5 = 0;
  3926                           
  3927                           ;incstack = 0
  3928  0017C8  9A94               	bcf	3988,5,c	;volatile
  3929                           
  3930                           ;tasks.c: 186: PORTCbits.RC5 = 0;
  3931  0017CA  9A82               	bcf	3970,5,c	;volatile
  3932  0017CC                     l1710:
  3933                           
  3934                           ;tasks.c: 192: {
  3935                           ;tasks.c: 193: dado = read_pipe(&pipeluzes);
  3936  0017CC  0E1F               	movlw	low _pipeluzes
  3937  0017CE  6EE6               	movwf	postinc1,c
  3938  0017D0  0E00               	movlw	high _pipeluzes
  3939  0017D2  6EE6               	movwf	postinc1,c
  3940  0017D4  EC58  F006         	call	_read_pipe	;wreg free
  3941                           
  3942                           ;stkvar	_dado @ sp[(-1)+0]
  3943  0017D8  0EFF               	movlw	-1
  3944  0017DA  C03B  FFE3         	movff	btemp,plusw1
  3945                           
  3946                           ;tasks.c: 194: if (dado == 'l')
  3947                           ;stkvar	_dado @ sp[(-1)+0]
  3948  0017DE  0EFF               	movlw	-1
  3949  0017E0  CFE3 F03B          	movff	plusw1,btemp
  3950  0017E4  0E6C               	movlw	108
  3951  0017E6  183B               	xorwf	btemp,w,c
  3952  0017E8  A4D8               	btfss	status,2,c
  3953  0017EA  D014               	goto	l1718
  3954                           
  3955                           ;tasks.c: 195: {
  3956                           ;tasks.c: 197: PORTCbits.RC5 = ~PORTCbits.RC5 ;
  3957  0017EC  AA82               	btfss	3970,5,c	;volatile
  3958  0017EE  D002               	goto	u48_20
  3959  0017F0  0E01               	movlw	1
  3960  0017F2  D001               	goto	u48_26
  3961  0017F4                     u48_20:
  3962  0017F4  0E00               	movlw	0
  3963  0017F6                     u48_26:
  3964  0017F6  0AFF               	xorlw	255
  3965  0017F8  6E46               	movwf	btemp+11,c
  3966  0017FA  3A46               	swapf	btemp+11,f,c
  3967  0017FC  4646               	rlncf	btemp+11,f,c
  3968  0017FE  5082               	movf	3970,w,c	;volatile
  3969  001800  1846               	xorwf	btemp+11,w,c
  3970  001802  0BDF               	andlw	-33
  3971  001804  1846               	xorwf	btemp+11,w,c
  3972  001806  6E82               	movwf	3970,c	;volatile
  3973                           
  3974                           ;tasks.c: 198: delay(5000);
  3975  001808  0E88               	movlw	136
  3976  00180A  6EE6               	movwf	postinc1,c
  3977  00180C  0E13               	movlw	19
  3978  00180E  6EE6               	movwf	postinc1,c
  3979  001810  EC80  F00C         	call	_delay	;wreg free
  3980  001814                     l1718:
  3981                           
  3982                           ;tasks.c: 204: {
  3983                           ;tasks.c: 205: PORTCbits.RC5 = ~PORTCbits.RC5 ;
  3984                           
  3985                           ;tasks.c: 203: if(dado =='n')
  3986  001814  AA82               	btfss	3970,5,c	;volatile
  3987  001816  D002               	goto	u49_20
  3988  001818  0E01               	movlw	1
  3989  00181A  D001               	goto	u49_26
  3990  00181C                     u49_20:
  3991  00181C  0E00               	movlw	0
  3992  00181E                     u49_26:
  3993  00181E  0AFF               	xorlw	255
  3994  001820  6E46               	movwf	btemp+11,c
  3995  001822  3A46               	swapf	btemp+11,f,c
  3996  001824  4646               	rlncf	btemp+11,f,c
  3997  001826  5082               	movf	3970,w,c	;volatile
  3998  001828  1846               	xorwf	btemp+11,w,c
  3999  00182A  0BDF               	andlw	-33
  4000  00182C  1846               	xorwf	btemp+11,w,c
  4001  00182E  6E82               	movwf	3970,c	;volatile
  4002                           
  4003                           ;tasks.c: 206: delay(5000);
  4004  001830  0E88               	movlw	136
  4005  001832  6EE6               	movwf	postinc1,c
  4006  001834  0E13               	movlw	19
  4007  001836  6EE6               	movwf	postinc1,c
  4008  001838  EC80  F00C         	call	_delay	;wreg free
  4009  00183C  D7C7               	goto	l1710
  4010  00183E                     __end_of_tluzes:
  4011                           	opt stack 0
  4012                           tosu	equ	0xFFF
  4013                           tosh	equ	0xFFE
  4014                           tosl	equ	0xFFD
  4015                           stkptr	equ	0xFFC
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           prodh	equ	0xFF4
  4021                           prodl	equ	0xFF3
  4022                           intcon	equ	0xFF2
  4023                           postinc0	equ	0xFEE
  4024                           postdec0	equ	0xFED
  4025                           plusw0	equ	0xFEB
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           wreg	equ	0xFE8
  4029                           postinc1	equ	0xFE6
  4030                           postdec1	equ	0xFE5
  4031                           plusw1	equ	0xFE3
  4032                           fsr1h	equ	0xFE2
  4033                           fsr1l	equ	0xFE1
  4034                           bsr	equ	0xFE0
  4035                           indf2	equ	0xFDF
  4036                           postinc2	equ	0xFDE
  4037                           postdec2	equ	0xFDD
  4038                           plusw2	equ	0xFDB
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043 ;; *************** function _read_pipe *****************
  4044 ;; Defined at:
  4045 ;;		line 51 in file "pipe.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  pipe            2  [STACK] PTR struct pipe
  4048 ;;		 -> pipeluzes(11), 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  dado            1  [STACK] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1  [STACK] unsigned char 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4060 ;;      Params:         0       0       0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    7
  4067 ;; This function calls:
  4068 ;;		___wmul
  4069 ;;		_dispatcher
  4070 ;; This function is called by:
  4071 ;;		_tluzes
  4072 ;; This function uses a reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text21
  4076  000CB0                     __ptext21:
  4077                           	opt stack 0
  4078  000CB0                     _read_pipe:
  4079                           	opt stack 0
  4080                           
  4081                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  4082  000CB0  52E6               	movf	postinc1,f,c
  4083                           
  4084                           ;pipe.c: 53: (INTCONbits.GIE = 0);
  4085                           
  4086                           ;incstack = 0
  4087  000CB2  9EF2               	bcf	intcon,7,c	;volatile
  4088                           
  4089                           ;pipe.c: 54: byte dado;
  4090                           ;pipe.c: 57: if (pipe->pipe_itens == 0) {
  4091                           ;stkvar	_pipe @ sp[(-1)+-2]
  4092  000CB4  0EFD               	movlw	-3
  4093  000CB6  CFE3 F03C          	movff	plusw1,btemp+1
  4094  000CBA  0EFE               	movlw	-2
  4095  000CBC  CFE3 F03D          	movff	plusw1,btemp+2
  4096  000CC0  0E05               	movlw	5
  4097  000CC2  243C               	addwf	btemp+1,w,c
  4098  000CC4  6ED9               	movwf	fsr2l,c
  4099  000CC6  0E00               	movlw	0
  4100  000CC8  203D               	addwfc	btemp+2,w,c
  4101  000CCA  6EDA               	movwf	fsr2h,c
  4102  000CCC  50DE               	movf	postinc2,w,c
  4103  000CCE  10DE               	iorwf	postinc2,w,c
  4104  000CD0  A4D8               	btfss	status,2,c
  4105  000CD2  D014               	goto	l1536
  4106                           
  4107                           ;pipe.c: 60: pipe->pos_bloqued_read = task_running;
  4108                           ;stkvar	_pipe @ sp[(-1)+-2]
  4109  000CD4  0EFD               	movlw	-3
  4110  000CD6  CFE3 F03C          	movff	plusw1,btemp+1
  4111  000CDA  0EFE               	movlw	-2
  4112  000CDC  CFE3 F03D          	movff	plusw1,btemp+2
  4113  000CE0  0E07               	movlw	7
  4114  000CE2  243C               	addwf	btemp+1,w,c
  4115  000CE4  6ED9               	movwf	fsr2l,c
  4116  000CE6  0E00               	movlw	0
  4117  000CE8  203D               	addwfc	btemp+2,w,c
  4118  000CEA  6EDA               	movwf	fsr2h,c
  4119  000CEC  C001  FFDE         	movff	_task_running,postinc2
  4120  000CF0  C002  FFDD         	movff	_task_running+1,postdec2
  4121                           
  4122                           ;pipe.c: 61: dispatcher(WAITING_PIPE);
  4123  000CF4  0E05               	movlw	5
  4124  000CF6  6EE6               	movwf	postinc1,c
  4125  000CF8  EC02  F003         	call	_dispatcher	;wreg free
  4126  000CFC                     l1536:
  4127                           
  4128                           ;pipe.c: 62: }
  4129                           ;pipe.c: 64: dado = pipe->pipe_queue[pipe->pos_read_pipe];
  4130                           ;stkvar	_pipe @ sp[(-1)+-2]
  4131  000CFC  0EFD               	movlw	-3
  4132  000CFE  CFE3 F03C          	movff	plusw1,btemp+1
  4133  000D02  0EFE               	movlw	-2
  4134  000D04  CFE3 F03D          	movff	plusw1,btemp+2
  4135  000D08  0E01               	movlw	1
  4136  000D0A  243C               	addwf	btemp+1,w,c
  4137  000D0C  6ED9               	movwf	fsr2l,c
  4138  000D0E  0E00               	movlw	0
  4139  000D10  203D               	addwfc	btemp+2,w,c
  4140  000D12  6EDA               	movwf	fsr2h,c
  4141  000D14  CFDE F03C          	movff	postinc2,btemp+1
  4142  000D18  CFDD F03D          	movff	postdec2,btemp+2
  4143                           
  4144                           ;stkvar	_pipe @ sp[(-1)+-2]
  4145  000D1C  0EFD               	movlw	-3
  4146  000D1E  CFE3 F045          	movff	plusw1,btemp+10
  4147  000D22  0EFE               	movlw	-2
  4148  000D24  CFE3 F046          	movff	plusw1,btemp+11
  4149  000D28  503C               	movf	btemp+1,w,c
  4150  000D2A  2445               	addwf	btemp+10,w,c
  4151  000D2C  6ED9               	movwf	fsr2l,c
  4152  000D2E  503D               	movf	btemp+2,w,c
  4153  000D30  2046               	addwfc	btemp+11,w,c
  4154  000D32  6EDA               	movwf	fsr2h,c
  4155  000D34  50DF               	movf	indf2,w,c
  4156  000D36  6E46               	movwf	btemp+11,c
  4157                           
  4158                           ;stkvar	_dado @ sp[(-1)+0]
  4159  000D38  0EFF               	movlw	-1
  4160  000D3A  C046  FFE3         	movff	btemp+11,plusw1
  4161                           
  4162                           ;pipe.c: 65: pipe->pos_read_pipe = (pipe->pos_read_pipe + 1) % 1;
  4163                           ;stkvar	_pipe @ sp[(-1)+-2]
  4164  000D3E  0EFD               	movlw	-3
  4165  000D40  CFE3 F03C          	movff	plusw1,btemp+1
  4166  000D44  0EFE               	movlw	-2
  4167  000D46  CFE3 F03D          	movff	plusw1,btemp+2
  4168  000D4A  0E01               	movlw	1
  4169  000D4C  243C               	addwf	btemp+1,w,c
  4170  000D4E  6ED9               	movwf	fsr2l,c
  4171  000D50  0E00               	movlw	0
  4172  000D52  203D               	addwfc	btemp+2,w,c
  4173  000D54  6EDA               	movwf	fsr2h,c
  4174  000D56  0E00               	movlw	0
  4175  000D58  6EDE               	movwf	postinc2,c
  4176  000D5A  0E00               	movlw	0
  4177  000D5C  6EDD               	movwf	postdec2,c
  4178                           
  4179                           ;pipe.c: 66: pipe->pipe_itens--;
  4180                           ;stkvar	_pipe @ sp[(-1)+-2]
  4181  000D5E  0EFD               	movlw	-3
  4182  000D60  CFE3 F03C          	movff	plusw1,btemp+1
  4183  000D64  0EFE               	movlw	-2
  4184  000D66  CFE3 F03D          	movff	plusw1,btemp+2
  4185  000D6A  0E05               	movlw	5
  4186  000D6C  243C               	addwf	btemp+1,w,c
  4187  000D6E  6ED9               	movwf	fsr2l,c
  4188  000D70  0E00               	movlw	0
  4189  000D72  203D               	addwfc	btemp+2,w,c
  4190  000D74  6EDA               	movwf	fsr2h,c
  4191  000D76  06DE               	decf	postinc2,f,c
  4192  000D78  0E00               	movlw	0
  4193  000D7A  5ADD               	subwfb	postdec2,f,c
  4194                           
  4195                           ;pipe.c: 69: if (pipe->pos_bloqued_write > 0) {
  4196                           ;stkvar	_pipe @ sp[(-1)+-2]
  4197  000D7C  0EFD               	movlw	-3
  4198  000D7E  CFE3 F03C          	movff	plusw1,btemp+1
  4199  000D82  0EFE               	movlw	-2
  4200  000D84  CFE3 F03D          	movff	plusw1,btemp+2
  4201  000D88  0E09               	movlw	9
  4202  000D8A  243C               	addwf	btemp+1,w,c
  4203  000D8C  6ED9               	movwf	fsr2l,c
  4204  000D8E  0E00               	movlw	0
  4205  000D90  203D               	addwfc	btemp+2,w,c
  4206  000D92  6EDA               	movwf	fsr2h,c
  4207  000D94  50DE               	movf	postinc2,w,c
  4208  000D96  10DE               	iorwf	postinc2,w,c
  4209  000D98  B4D8               	btfsc	status,2,c
  4210  000D9A  D032               	goto	l1548
  4211                           
  4212                           ;pipe.c: 70: F_APTOS[pipe->pos_bloqued_write].task_state = READY;
  4213  000D9C  0E11               	movlw	17
  4214  000D9E  6EE6               	movwf	postinc1,c
  4215  000DA0  0E00               	movlw	0
  4216  000DA2  6EE6               	movwf	postinc1,c
  4217                           
  4218                           ;stkvar	_pipe @ sp[(-3)+-2]
  4219  000DA4  0EFB               	movlw	-5
  4220  000DA6  CFE3 F03C          	movff	plusw1,btemp+1
  4221  000DAA  0EFC               	movlw	-4
  4222  000DAC  CFE3 F03D          	movff	plusw1,btemp+2
  4223  000DB0  0E09               	movlw	9
  4224  000DB2  243C               	addwf	btemp+1,w,c
  4225  000DB4  6ED9               	movwf	fsr2l,c
  4226  000DB6  0E00               	movlw	0
  4227  000DB8  203D               	addwfc	btemp+2,w,c
  4228  000DBA  6EDA               	movwf	fsr2h,c
  4229  000DBC  CFDE F03C          	movff	postinc2,btemp+1
  4230  000DC0  CFDD F03D          	movff	postdec2,btemp+2
  4231  000DC4  C03C  FFE6         	movff	btemp+1,postinc1
  4232  000DC8  C03D  FFE6         	movff	btemp+2,postinc1
  4233  000DCC  EC8D  F00A         	call	___wmul	;wreg free
  4234  000DD0  0E08               	movlw	low (_F_APTOS+8)
  4235  000DD2  243B               	addwf	btemp,w,c
  4236  000DD4  6ED9               	movwf	fsr2l,c
  4237  000DD6  0E01               	movlw	high (_F_APTOS+8)
  4238  000DD8  203C               	addwfc	btemp+1,w,c
  4239  000DDA  6EDA               	movwf	fsr2h,c
  4240  000DDC  0E01               	movlw	1
  4241  000DDE  6EDF               	movwf	indf2,c
  4242                           
  4243                           ;pipe.c: 71: pipe->pos_bloqued_write = 0;
  4244                           ;stkvar	_pipe @ sp[(-1)+-2]
  4245  000DE0  0EFD               	movlw	-3
  4246  000DE2  CFE3 F03C          	movff	plusw1,btemp+1
  4247  000DE6  0EFE               	movlw	-2
  4248  000DE8  CFE3 F03D          	movff	plusw1,btemp+2
  4249  000DEC  0E09               	movlw	9
  4250  000DEE  243C               	addwf	btemp+1,w,c
  4251  000DF0  6ED9               	movwf	fsr2l,c
  4252  000DF2  0E00               	movlw	0
  4253  000DF4  203D               	addwfc	btemp+2,w,c
  4254  000DF6  6EDA               	movwf	fsr2h,c
  4255  000DF8  0E00               	movlw	0
  4256  000DFA  6EDE               	movwf	postinc2,c
  4257  000DFC  0E00               	movlw	0
  4258  000DFE  6EDD               	movwf	postdec2,c
  4259  000E00                     l1548:
  4260                           
  4261                           ;pipe.c: 75: }
  4262                           ;pipe.c: 77: (INTCONbits.GIE = 1);
  4263  000E00  8EF2               	bsf	intcon,7,c	;volatile
  4264                           
  4265                           ;pipe.c: 79: return dado;
  4266                           ;stkvar	_dado @ sp[(-1)+0]
  4267  000E02  0EFF               	movlw	-1
  4268  000E04  CFE3 F03B          	movff	plusw1,btemp
  4269                           
  4270                           ; _read_pipe: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, arg
      +                          size = 2, vargsize = 0
  4271  000E08  52E5               	movf	postdec1,f,c
  4272  000E0A  52E5               	movf	postdec1,f,c
  4273  000E0C  52E5               	movf	postdec1,f,c
  4274  000E0E  0012               	return		;funcret
  4275  000E10                     __end_of_read_pipe:
  4276                           	opt stack 0
  4277                           tosu	equ	0xFFF
  4278                           tosh	equ	0xFFE
  4279                           tosl	equ	0xFFD
  4280                           stkptr	equ	0xFFC
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           postinc0	equ	0xFEE
  4289                           postdec0	equ	0xFED
  4290                           plusw0	equ	0xFEB
  4291                           fsr0h	equ	0xFEA
  4292                           fsr0l	equ	0xFE9
  4293                           wreg	equ	0xFE8
  4294                           postinc1	equ	0xFE6
  4295                           postdec1	equ	0xFE5
  4296                           plusw1	equ	0xFE3
  4297                           fsr1h	equ	0xFE2
  4298                           fsr1l	equ	0xFE1
  4299                           bsr	equ	0xFE0
  4300                           indf2	equ	0xFDF
  4301                           postinc2	equ	0xFDE
  4302                           postdec2	equ	0xFDD
  4303                           plusw2	equ	0xFDB
  4304                           fsr2h	equ	0xFDA
  4305                           fsr2l	equ	0xFD9
  4306                           status	equ	0xFD8
  4307                           
  4308 ;; *************** function _task_idle *****************
  4309 ;; Defined at:
  4310 ;;		line 72 in file "kernel.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1  [STACK] void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, btemp+11
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4324 ;;      Params:         0       0       0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    4
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_setupOS
  4335 ;; This function uses a reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text22
  4339  00197E                     __ptext22:
  4340                           	opt stack 0
  4341  00197E                     _task_idle:
  4342                           	opt stack 23
  4343                           
  4344                           ;kernel.c: 74: TRISDbits.RD4 = 0;
  4345                           
  4346                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4347                           ;incstack = 0
  4348  00197E  9895               	bcf	3989,4,c	;volatile
  4349                           
  4350                           ;kernel.c: 75: PORTDbits.RD4 =0;
  4351  001980  9883               	bcf	3971,4,c	;volatile
  4352  001982                     l1210:
  4353                           
  4354                           ;kernel.c: 79: PORTDbits.RD4 =~ PORTDbits.RD4;
  4355  001982  A883               	btfss	3971,4,c	;volatile
  4356  001984  D002               	goto	u17_20
  4357  001986  0E01               	movlw	1
  4358  001988  D001               	goto	u17_26
  4359  00198A                     u17_20:
  4360  00198A  0E00               	movlw	0
  4361  00198C                     u17_26:
  4362  00198C  0AFF               	xorlw	255
  4363  00198E  6E46               	movwf	btemp+11,c
  4364  001990  3A46               	swapf	btemp+11,f,c
  4365  001992  5083               	movf	3971,w,c	;volatile
  4366  001994  1846               	xorwf	btemp+11,w,c
  4367  001996  0BEF               	andlw	-17
  4368  001998  1846               	xorwf	btemp+11,w,c
  4369  00199A  6E83               	movwf	3971,c	;volatile
  4370                           
  4371                           ;kernel.c: 80: __nop();
  4372  00199C  F000               	nop	
  4373  00199E  D7F1               	goto	l1210
  4374  0019A0                     __end_of_task_idle:
  4375                           	opt stack 0
  4376                           tosu	equ	0xFFF
  4377                           tosh	equ	0xFFE
  4378                           tosl	equ	0xFFD
  4379                           stkptr	equ	0xFFC
  4380                           tblptru	equ	0xFF8
  4381                           tblptrh	equ	0xFF7
  4382                           tblptrl	equ	0xFF6
  4383                           tablat	equ	0xFF5
  4384                           prodh	equ	0xFF4
  4385                           prodl	equ	0xFF3
  4386                           intcon	equ	0xFF2
  4387                           postinc0	equ	0xFEE
  4388                           postdec0	equ	0xFED
  4389                           plusw0	equ	0xFEB
  4390                           fsr0h	equ	0xFEA
  4391                           fsr0l	equ	0xFE9
  4392                           wreg	equ	0xFE8
  4393                           postinc1	equ	0xFE6
  4394                           postdec1	equ	0xFE5
  4395                           plusw1	equ	0xFE3
  4396                           fsr1h	equ	0xFE2
  4397                           fsr1l	equ	0xFE1
  4398                           bsr	equ	0xFE0
  4399                           indf2	equ	0xFDF
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           plusw2	equ	0xFDB
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _int_high *****************
  4408 ;; Defined at:
  4409 ;;		line 121 in file "kernel.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  i               2   15[COMRAM] unsigned int 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4423 ;;      Params:         0       0       0       0       0       0       0
  4424 ;;      Locals:         2       0       0       0       0       0       0
  4425 ;;      Temps:         15       0       0       0       0       0       0
  4426 ;;      Totals:        17       0       0       0       0       0       0
  4427 ;;Total ram usage:       17 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    3
  4430 ;; This function calls:
  4431 ;;		___wmul
  4432 ;;		_dispatcher
  4433 ;; This function is called by:
  4434 ;;		Interrupt level 2
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	intcode
  4439  000008                     __pintcode:
  4440                           	opt stack 0
  4441  000008                     _int_high:
  4442                           	opt stack 19
  4443                           
  4444                           ;incstack = 0
  4445  000008  EDA2  F005         	call	int_func,f	;refresh shadow registers
  4446                           tosu	equ	0xFFF
  4447                           tosh	equ	0xFFE
  4448                           tosl	equ	0xFFD
  4449                           stkptr	equ	0xFFC
  4450                           tblptru	equ	0xFF8
  4451                           tblptrh	equ	0xFF7
  4452                           tblptrl	equ	0xFF6
  4453                           tablat	equ	0xFF5
  4454                           prodh	equ	0xFF4
  4455                           prodl	equ	0xFF3
  4456                           intcon	equ	0xFF2
  4457                           postinc0	equ	0xFEE
  4458                           postdec0	equ	0xFED
  4459                           plusw0	equ	0xFEB
  4460                           fsr0h	equ	0xFEA
  4461                           fsr0l	equ	0xFE9
  4462                           wreg	equ	0xFE8
  4463                           postinc1	equ	0xFE6
  4464                           postdec1	equ	0xFE5
  4465                           plusw1	equ	0xFE3
  4466                           fsr1h	equ	0xFE2
  4467                           fsr1l	equ	0xFE1
  4468                           bsr	equ	0xFE0
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           plusw2	equ	0xFDB
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477                           	psect	intcode_body
  4478  000B44                     __pintcode_body:
  4479                           	opt stack 19
  4480  000B44                     int_func:
  4481                           	opt stack 19
  4482  000B44  0006               	pop		; remove dummy address from shadow register refresh
  4483  000B46  CFE1 F02C          	movff	fsr1l,??_int_high+2
  4484  000B4A  CFE2 F02D          	movff	fsr1h,??_int_high+3
  4485  000B4E  CFD9 F02E          	movff	fsr2l,??_int_high+4
  4486  000B52  CFDA F02F          	movff	fsr2h,??_int_high+5
  4487  000B56  CFF3 F030          	movff	prodl,??_int_high+6
  4488  000B5A  CFF4 F031          	movff	prodh,??_int_high+7
  4489  000B5E  C03B  F032         	movff	btemp,??_int_high+8
  4490  000B62  C03C  F033         	movff	btemp+1,??_int_high+9
  4491  000B66  C03D  F034         	movff	btemp+2,??_int_high+10
  4492  000B6A  C043  F035         	movff	btemp+8,??_int_high+11
  4493  000B6E  C044  F036         	movff	btemp+9,??_int_high+12
  4494  000B72  C045  F037         	movff	btemp+10,??_int_high+13
  4495  000B76  C046  F038         	movff	btemp+11,??_int_high+14
  4496  000B7A  EE14  F072         	lfsr	1,___inthi_sp
  4497                           
  4498                           ;kernel.c: 123: u_int i;
  4499                           ;kernel.c: 125: if (INTCONbits.TMR0IF) {
  4500  000B7E  A4F2               	btfss	intcon,2,c	;volatile
  4501  000B80  D07C               	goto	i2l114
  4502                           
  4503                           ;kernel.c: 126: INTCONbits.TMR0IF = 0;
  4504  000B82  94F2               	bcf	intcon,2,c	;volatile
  4505                           
  4506                           ;kernel.c: 127: TMR0L = 252;
  4507  000B84  0EFC               	movlw	252
  4508  000B86  6ED6               	movwf	4054,c	;volatile
  4509                           
  4510                           ;kernel.c: 130: for (i = 1; i < tasks_installed; i++) {
  4511  000B88  0E00               	movlw	0
  4512  000B8A  6E3A               	movwf	int_high@i+1,c
  4513  000B8C  0E01               	movlw	1
  4514  000B8E  6E39               	movwf	int_high@i,c
  4515  000B90  D05F               	goto	i2l109
  4516  000B92                     
  4517                           ;kernel.c: 131: if (F_APTOS[i].task_state == SLEEPING) {
  4518  000B92  0E11               	movlw	17
  4519  000B94  6EE6               	movwf	postinc1,c
  4520  000B96  0E00               	movlw	0
  4521  000B98  6EE6               	movwf	postinc1,c
  4522  000B9A  C039  FFE6         	movff	int_high@i,postinc1
  4523  000B9E  C03A  FFE6         	movff	int_high@i+1,postinc1
  4524  000BA2  EC8D  F00A         	call	___wmul	;wreg free
  4525  000BA6  0E08               	movlw	8
  4526  000BA8  263B               	addwf	btemp,f,c
  4527  000BAA  0E00               	movlw	0
  4528  000BAC  223C               	addwfc	btemp+1,f,c
  4529  000BAE  0E00               	movlw	low _F_APTOS
  4530  000BB0  243B               	addwf	btemp,w,c
  4531  000BB2  6ED9               	movwf	fsr2l,c
  4532  000BB4  0E01               	movlw	high _F_APTOS
  4533  000BB6  203C               	addwfc	btemp+1,w,c
  4534  000BB8  6EDA               	movwf	fsr2h,c
  4535  000BBA  0E03               	movlw	3
  4536  000BBC  18DE               	xorwf	postinc2,w,c
  4537  000BBE  A4D8               	btfss	status,2,c
  4538  000BC0  D045               	goto	i2l112
  4539                           
  4540                           ;kernel.c: 132: F_APTOS[i].delay_time--;
  4541  000BC2  0E11               	movlw	17
  4542  000BC4  6EE6               	movwf	postinc1,c
  4543  000BC6  0E00               	movlw	0
  4544  000BC8  6EE6               	movwf	postinc1,c
  4545  000BCA  C039  FFE6         	movff	int_high@i,postinc1
  4546  000BCE  C03A  FFE6         	movff	int_high@i+1,postinc1
  4547  000BD2  EC8D  F00A         	call	___wmul	;wreg free
  4548  000BD6  0E06               	movlw	6
  4549  000BD8  263B               	addwf	btemp,f,c
  4550  000BDA  0E00               	movlw	0
  4551  000BDC  223C               	addwfc	btemp+1,f,c
  4552  000BDE  0E00               	movlw	low _F_APTOS
  4553  000BE0  243B               	addwf	btemp,w,c
  4554  000BE2  6ED9               	movwf	fsr2l,c
  4555  000BE4  0E01               	movlw	high _F_APTOS
  4556  000BE6  203C               	addwfc	btemp+1,w,c
  4557  000BE8  6EDA               	movwf	fsr2h,c
  4558  000BEA  06DE               	decf	postinc2,f,c
  4559  000BEC  0E00               	movlw	0
  4560  000BEE  5ADD               	subwfb	postdec2,f,c
  4561                           
  4562                           ;kernel.c: 133: if (F_APTOS[i].delay_time == 0) {
  4563  000BF0  0E11               	movlw	17
  4564  000BF2  6EE6               	movwf	postinc1,c
  4565  000BF4  0E00               	movlw	0
  4566  000BF6  6EE6               	movwf	postinc1,c
  4567  000BF8  C039  FFE6         	movff	int_high@i,postinc1
  4568  000BFC  C03A  FFE6         	movff	int_high@i+1,postinc1
  4569  000C00  EC8D  F00A         	call	___wmul	;wreg free
  4570  000C04  0E06               	movlw	6
  4571  000C06  263B               	addwf	btemp,f,c
  4572  000C08  0E00               	movlw	0
  4573  000C0A  223C               	addwfc	btemp+1,f,c
  4574  000C0C  0E00               	movlw	low _F_APTOS
  4575  000C0E  243B               	addwf	btemp,w,c
  4576  000C10  6ED9               	movwf	fsr2l,c
  4577  000C12  0E01               	movlw	high _F_APTOS
  4578  000C14  203C               	addwfc	btemp+1,w,c
  4579  000C16  6EDA               	movwf	fsr2h,c
  4580  000C18  50DE               	movf	postinc2,w,c
  4581  000C1A  10DE               	iorwf	postinc2,w,c
  4582  000C1C  A4D8               	btfss	status,2,c
  4583  000C1E  D016               	goto	i2l112
  4584                           
  4585                           ;kernel.c: 134: F_APTOS[i].task_state = READY;
  4586  000C20  0E11               	movlw	17
  4587  000C22  6EE6               	movwf	postinc1,c
  4588  000C24  0E00               	movlw	0
  4589  000C26  6EE6               	movwf	postinc1,c
  4590  000C28  C039  FFE6         	movff	int_high@i,postinc1
  4591  000C2C  C03A  FFE6         	movff	int_high@i+1,postinc1
  4592  000C30  EC8D  F00A         	call	___wmul	;wreg free
  4593  000C34  0E08               	movlw	8
  4594  000C36  263B               	addwf	btemp,f,c
  4595  000C38  0E00               	movlw	0
  4596  000C3A  223C               	addwfc	btemp+1,f,c
  4597  000C3C  0E00               	movlw	low _F_APTOS
  4598  000C3E  243B               	addwf	btemp,w,c
  4599  000C40  6ED9               	movwf	fsr2l,c
  4600  000C42  0E01               	movlw	high _F_APTOS
  4601  000C44  203C               	addwfc	btemp+1,w,c
  4602  000C46  6EDA               	movwf	fsr2h,c
  4603  000C48  0E01               	movlw	1
  4604  000C4A  6EDF               	movwf	indf2,c
  4605  000C4C                     i2l112:
  4606  000C4C  4A39               	infsnz	int_high@i,f,c
  4607  000C4E  2A3A               	incf	int_high@i+1,f,c
  4608  000C50                     i2l109:
  4609  000C50  5003               	movf	_tasks_installed,w,c
  4610  000C52  5C39               	subwf	int_high@i,w,c
  4611  000C54  5004               	movf	_tasks_installed+1,w,c
  4612  000C56  583A               	subwfb	int_high@i+1,w,c
  4613  000C58  A0D8               	btfss	status,0,c
  4614  000C5A  D79B               	goto	i2l110
  4615                           
  4616                           ;kernel.c: 135: }
  4617                           ;kernel.c: 136: }
  4618                           ;kernel.c: 137: }
  4619                           ;kernel.c: 139: quantum--;
  4620  000C5C  0647               	decf	_quantum,f,c
  4621  000C5E  A0D8               	btfss	status,0,c
  4622  000C60  0648               	decf	_quantum+1,f,c
  4623                           
  4624                           ;kernel.c: 140: if (quantum == 0) {
  4625  000C62  5047               	movf	_quantum,w,c
  4626  000C64  1048               	iorwf	_quantum+1,w,c
  4627  000C66  A4D8               	btfss	status,2,c
  4628  000C68  D008               	goto	i2l114
  4629                           
  4630                           ;kernel.c: 141: quantum = 4;
  4631  000C6A  0E00               	movlw	0
  4632  000C6C  6E48               	movwf	_quantum+1,c
  4633  000C6E  0E04               	movlw	4
  4634  000C70  6E47               	movwf	_quantum,c
  4635                           
  4636                           ;kernel.c: 142: dispatcher(READY);
  4637  000C72  0E01               	movlw	1
  4638  000C74  6EE6               	movwf	postinc1,c
  4639  000C76  EC02  F003         	call	_dispatcher	;wreg free
  4640  000C7A                     i2l114:
  4641  000C7A  C038  F046         	movff	??_int_high+14,btemp+11
  4642  000C7E  C037  F045         	movff	??_int_high+13,btemp+10
  4643  000C82  C036  F044         	movff	??_int_high+12,btemp+9
  4644  000C86  C035  F043         	movff	??_int_high+11,btemp+8
  4645  000C8A  C034  F03D         	movff	??_int_high+10,btemp+2
  4646  000C8E  C033  F03C         	movff	??_int_high+9,btemp+1
  4647  000C92  C032  F03B         	movff	??_int_high+8,btemp
  4648  000C96  C031  FFF4         	movff	??_int_high+7,prodh
  4649  000C9A  C030  FFF3         	movff	??_int_high+6,prodl
  4650  000C9E  C02F  FFDA         	movff	??_int_high+5,fsr2h
  4651  000CA2  C02E  FFD9         	movff	??_int_high+4,fsr2l
  4652  000CA6  C02D  FFE2         	movff	??_int_high+3,fsr1h
  4653  000CAA  C02C  FFE1         	movff	??_int_high+2,fsr1l
  4654  000CAE  0011               	retfie		f
  4655  000CB0                     __end_of_int_high:
  4656                           	opt stack 0
  4657                           tosu	equ	0xFFF
  4658                           tosh	equ	0xFFE
  4659                           tosl	equ	0xFFD
  4660                           stkptr	equ	0xFFC
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           prodh	equ	0xFF4
  4666                           prodl	equ	0xFF3
  4667                           intcon	equ	0xFF2
  4668                           postinc0	equ	0xFEE
  4669                           postdec0	equ	0xFED
  4670                           plusw0	equ	0xFEB
  4671                           fsr0h	equ	0xFEA
  4672                           fsr0l	equ	0xFE9
  4673                           wreg	equ	0xFE8
  4674                           postinc1	equ	0xFE6
  4675                           postdec1	equ	0xFE5
  4676                           plusw1	equ	0xFE3
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           bsr	equ	0xFE0
  4680                           indf2	equ	0xFDF
  4681                           postinc2	equ	0xFDE
  4682                           postdec2	equ	0xFDD
  4683                           plusw2	equ	0xFDB
  4684                           fsr2h	equ	0xFDA
  4685                           fsr2l	equ	0xFD9
  4686                           status	equ	0xFD8
  4687                           tosu	equ	0xFFF
  4688                           tosh	equ	0xFFE
  4689                           tosl	equ	0xFFD
  4690                           stkptr	equ	0xFFC
  4691                           tblptru	equ	0xFF8
  4692                           tblptrh	equ	0xFF7
  4693                           tblptrl	equ	0xFF6
  4694                           tablat	equ	0xFF5
  4695                           prodh	equ	0xFF4
  4696                           prodl	equ	0xFF3
  4697                           intcon	equ	0xFF2
  4698                           postinc0	equ	0xFEE
  4699                           postdec0	equ	0xFED
  4700                           plusw0	equ	0xFEB
  4701                           fsr0h	equ	0xFEA
  4702                           fsr0l	equ	0xFE9
  4703                           wreg	equ	0xFE8
  4704                           postinc1	equ	0xFE6
  4705                           postdec1	equ	0xFE5
  4706                           plusw1	equ	0xFE3
  4707                           fsr1h	equ	0xFE2
  4708                           fsr1l	equ	0xFE1
  4709                           bsr	equ	0xFE0
  4710                           indf2	equ	0xFDF
  4711                           postinc2	equ	0xFDE
  4712                           postdec2	equ	0xFDD
  4713                           plusw2	equ	0xFDB
  4714                           fsr2h	equ	0xFDA
  4715                           fsr2l	equ	0xFD9
  4716                           status	equ	0xFD8
  4717                           
  4718                           	psect	rparam
  4719  0000                     tosu	equ	0xFFF
  4720                           tosh	equ	0xFFE
  4721                           tosl	equ	0xFFD
  4722                           stkptr	equ	0xFFC
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           intcon	equ	0xFF2
  4730                           postinc0	equ	0xFEE
  4731                           postdec0	equ	0xFED
  4732                           plusw0	equ	0xFEB
  4733                           fsr0h	equ	0xFEA
  4734                           fsr0l	equ	0xFE9
  4735                           wreg	equ	0xFE8
  4736                           postinc1	equ	0xFE6
  4737                           postdec1	equ	0xFE5
  4738                           plusw1	equ	0xFE3
  4739                           fsr1h	equ	0xFE2
  4740                           fsr1l	equ	0xFE1
  4741                           bsr	equ	0xFE0
  4742                           indf2	equ	0xFDF
  4743                           postinc2	equ	0xFDE
  4744                           postdec2	equ	0xFDD
  4745                           plusw2	equ	0xFDB
  4746                           fsr2h	equ	0xFDA
  4747                           fsr2l	equ	0xFD9
  4748                           status	equ	0xFD8
  4749                           
  4750                           	psect	temp
  4751  00003B                     btemp:
  4752                           	opt stack 0
  4753  00003B                     	ds	12
  4754  0000                     wtemp0	set	btemp
  4755  0000                     wtemp1	set	btemp+2
  4756  0000                     wtemp2	set	btemp+4
  4757  0000                     wtemp3	set	btemp+6
  4758  0000                     wtemp4	set	btemp+8
  4759  0000                     wtemp5	set	btemp+10
  4760  0000                     wtemp6	set	btemp+1
  4761  0000                     ttemp0	set	btemp
  4762  0000                     ttemp1	set	btemp+3
  4763  0000                     ttemp2	set	btemp+6
  4764  0000                     ttemp3	set	btemp+9
  4765  0000                     ltemp0	set	btemp
  4766  0000                     ltemp1	set	btemp+4
  4767  0000                     ltemp2	set	btemp+8
  4768                           tosu	equ	0xFFF
  4769                           tosh	equ	0xFFE
  4770                           tosl	equ	0xFFD
  4771                           stkptr	equ	0xFFC
  4772                           tblptru	equ	0xFF8
  4773                           tblptrh	equ	0xFF7
  4774                           tblptrl	equ	0xFF6
  4775                           tablat	equ	0xFF5
  4776                           prodh	equ	0xFF4
  4777                           prodl	equ	0xFF3
  4778                           intcon	equ	0xFF2
  4779                           postinc0	equ	0xFEE
  4780                           postdec0	equ	0xFED
  4781                           plusw0	equ	0xFEB
  4782                           fsr0h	equ	0xFEA
  4783                           fsr0l	equ	0xFE9
  4784                           wreg	equ	0xFE8
  4785                           postinc1	equ	0xFE6
  4786                           postdec1	equ	0xFE5
  4787                           plusw1	equ	0xFE3
  4788                           fsr1h	equ	0xFE2
  4789                           fsr1l	equ	0xFE1
  4790                           bsr	equ	0xFE0
  4791                           indf2	equ	0xFDF
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           plusw2	equ	0xFDB
  4795                           fsr2h	equ	0xFDA
  4796                           fsr2l	equ	0xFD9
  4797                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    2
    Data        2
    BSS         723
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     17      60
    BANK0           128      0       0
    BANK1           256      0     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    pHeap	near PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    pipe	PTR struct pipe size(2) Largest target is 11
		 -> pipeluzes(COMRAM[11]), 

    s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    s	PTR struct sem size(2) Largest target is 26
		 -> spista(COMRAM[26]), 

    F_APTOS.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao3(), 
		 -> aviao2(), aviao1(), 

    task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao3(), 
		 -> aviao2(), aviao1(), 

    S105tcb$task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao3(), 
		 -> aviao2(), aviao1(), 

    task.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), tluzes(), tluzesescreve(), aviao3(), 
		 -> aviao2(), aviao1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _aviao1 in COMRAM

    None.

Critical Paths under _aviao2 in COMRAM

    None.

Critical Paths under _aviao3 in COMRAM

    None.

Critical Paths under _tluzesescreve in COMRAM

    None.

Critical Paths under _tluzes in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _aviao1 in COMRAM

    None.

Critical Paths under _aviao2 in COMRAM

    None.

Critical Paths under _aviao3 in COMRAM

    None.

Critical Paths under _tluzes in COMRAM

    None.

Critical Paths under _tluzesescreve in COMRAM

    None.

Critical Paths under _int_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _aviao1 in BANK0

    None.

Critical Paths under _aviao2 in BANK0

    None.

Critical Paths under _aviao3 in BANK0

    None.

Critical Paths under _tluzesescreve in BANK0

    None.

Critical Paths under _tluzes in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _aviao1 in BANK0

    None.

Critical Paths under _aviao2 in BANK0

    None.

Critical Paths under _aviao3 in BANK0

    None.

Critical Paths under _tluzes in BANK0

    None.

Critical Paths under _tluzesescreve in BANK0

    None.

Critical Paths under _int_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _aviao1 in BANK1

    None.

Critical Paths under _aviao2 in BANK1

    None.

Critical Paths under _aviao3 in BANK1

    None.

Critical Paths under _tluzesescreve in BANK1

    None.

Critical Paths under _tluzes in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _aviao1 in BANK1

    None.

Critical Paths under _aviao2 in BANK1

    None.

Critical Paths under _aviao3 in BANK1

    None.

Critical Paths under _tluzes in BANK1

    None.

Critical Paths under _tluzesescreve in BANK1

    None.

Critical Paths under _int_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _aviao1 in BANK2

    None.

Critical Paths under _aviao2 in BANK2

    None.

Critical Paths under _aviao3 in BANK2

    None.

Critical Paths under _tluzesescreve in BANK2

    None.

Critical Paths under _tluzes in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _aviao1 in BANK2

    None.

Critical Paths under _aviao2 in BANK2

    None.

Critical Paths under _aviao3 in BANK2

    None.

Critical Paths under _tluzes in BANK2

    None.

Critical Paths under _tluzesescreve in BANK2

    None.

Critical Paths under _int_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _aviao1 in BANK3

    None.

Critical Paths under _aviao2 in BANK3

    None.

Critical Paths under _aviao3 in BANK3

    None.

Critical Paths under _tluzesescreve in BANK3

    None.

Critical Paths under _tluzes in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _aviao1 in BANK3

    None.

Critical Paths under _aviao2 in BANK3

    None.

Critical Paths under _aviao3 in BANK3

    None.

Critical Paths under _tluzes in BANK3

    None.

Critical Paths under _tluzesescreve in BANK3

    None.

Critical Paths under _int_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _aviao1 in BANK4

    None.

Critical Paths under _aviao2 in BANK4

    None.

Critical Paths under _aviao3 in BANK4

    None.

Critical Paths under _tluzesescreve in BANK4

    None.

Critical Paths under _tluzes in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _aviao1 in BANK4

    None.

Critical Paths under _aviao2 in BANK4

    None.

Critical Paths under _aviao3 in BANK4

    None.

Critical Paths under _tluzes in BANK4

    None.

Critical Paths under _tluzesescreve in BANK4

    None.

Critical Paths under _int_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _aviao1 in BANK5

    None.

Critical Paths under _aviao2 in BANK5

    None.

Critical Paths under _aviao3 in BANK5

    None.

Critical Paths under _tluzesescreve in BANK5

    None.

Critical Paths under _tluzes in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _aviao1 in BANK5

    None.

Critical Paths under _aviao2 in BANK5

    None.

Critical Paths under _aviao3 in BANK5

    None.

Critical Paths under _tluzes in BANK5

    None.

Critical Paths under _tluzesescreve in BANK5

    None.

Critical Paths under _int_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1048
                       _SRAMInitHeap
                         _confi_port
                        _create_task
                           _sem_init
                            _setupOS
                           _start_os
 ---------------------------------------------------------------------------------
 (1) _start_os                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupOS                                              0     0      0     480
                       _SRAMInitHeap
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                         23    17      6     344
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     136
 ---------------------------------------------------------------------------------
 (1) _sem_init                                             4     0      4      88
 ---------------------------------------------------------------------------------
 (1) _confi_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao1                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao2                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao3                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzesescreve                                        0     0      0    1021
                        _create_pipe
                         _write_pipe
 ---------------------------------------------------------------------------------
 (5) _write_pipe                                           3     0      3     946
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (5) _create_pipe                                          2     0      2      75
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzes                                               1     1      0    1741
                              _delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (5) _read_pipe                                            3     1      2     947
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao1                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao2                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviao3                                               0     0      0    2645
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             2     0      2     858
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             2     0      2    1039
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzes                                               1     1      0    1741
                              _delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (5) _read_pipe                                            3     1      2     947
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2     748
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tluzesescreve                                        0     0      0    1021
                        _create_pipe
                         _write_pipe
 ---------------------------------------------------------------------------------
 (5) _write_pipe                                           3     0      3     946
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 (5) _create_pipe                                          2     0      2      75
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _int_high                                            17    17      0     838
                                              0 COMRAM    17    17      0
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (10) _dispatcher                                          1     0      1     567
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (11) _rr_scheduler                                        2     2      0     386
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     159
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     159
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _confi_port
   _create_task
     ___wmul
   _sem_init
   _setupOS
     _SRAMInitHeap
     _create_task
       ___wmul
   _start_os

 _aviao1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzesescreve (ROOT)
   _create_pipe
   _write_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzes (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _read_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _task_idle (ROOT)

 _aviao1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _aviao3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzes (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
   _read_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _tluzesescreve (ROOT)
   _create_pipe
   _write_pipe
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul

 _int_high (ROOT)
   ___wmul
   _dispatcher
     ___wmul
     _rr_scheduler
       ___lwmod
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      17       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AA       7       66.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     11      3C       1       52.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6      15        0.0%
DATA                 0      0     2E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Nov 17 19:49:51 2018

                     l31 1472                       l86 0948                      l150 15B8  
                    l162 1754                      l156 164A                      _BSR 000FE0  
                    u300 11B0                      u311 12F0                      _TOS 000FFD  
                    wreg 000FE8                     l1210 1982                     l1414 16E0  
                   l1512 1164                     l1362 131E                     l1372 138E  
                   l1710 17CC                     l1526 1088                     l1536 0CFC  
                   l1456 06C0                     l1392 11F6                     l1384 119C  
                   l1562 0E5A                     l1548 0E00                     l1476 08DA  
                   l1718 1814                     l1574 0F5A                     l1728 19AC  
                   _TOSH 000FFE                     _TOSL 000FFD                     _WREG 000FE8  
                   _TOSU 000FFF                     _main 13C2                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 003B                     prodh 000FF4                     prodl 000FF3  
                   start 000C             ___param_bank 000000          _tasks_installed 0003  
                  i2l110 0B92                    i2l112 0C4C          __end_of___lwmod 13C2  
                  i2l114 0C7A                    i2l109 0C50                    u17_20 198A  
                  _TMR0L 000FD6                    u17_26 198C                    u27_20 1346  
                  u35_20 0B18                    u29_20 13AC                    u37_20 0F96  
                  u48_20 17F4                    u48_26 17F6                    u49_20 181C  
                  u49_26 181E                    _TRISD 000F95                    _delay 1900  
                  tablat 000FF5                    ltemp0 003B                    ltemp1 003F  
                  ltemp2 0043          __end_of_setupOS 197E                    plusw0 000FEB  
                  plusw1 000FE3                    plusw2 000FDB                    ttemp0 003B  
                  ttemp1 003E                    ttemp2 0041                    ttemp3 0044  
                  status 000FD8                    wtemp0 003B                    wtemp1 003D  
                  wtemp2 003F                    wtemp3 0041                    wtemp4 0043  
                  wtemp5 0045                    wtemp6 003C          __initialization 18AE  
           __end_of_main 1474            __activetblptr 000001   __size_of_tluzesescreve 001E  
                 _STATUS 000FD8                   _STKPTR 000FFC     __size_of_create_pipe 00A6  
   __size_of_create_task 00CC                   ___wmul 151A                   _aviao1 15B0  
                 _aviao2 1642                   _aviao3 174C                   clear_0 18CE  
                 clear_1 18E0                   clear_2 18EC         __end_of_int_high 0CB0  
                 _spista 0005                   _tluzes 17C6         __end_of_sem_init 18AE  
       __end_of_sem_wait 116C         __end_of_sem_post 1090             __pdataCOMRAM 0047  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8         __end_of_start_os 19C2               __accesstop 0080  
__end_of__initialization 18F2            ___rparam_used 000001           __pcstackCOMRAM 002A  
             ___inthi_sp 0472            __end_of_delay 1948            _tluzesescreve 19A0  
             __pbssBANK1 0100            __uDynamicHeap 01AA       __size_of_read_pipe 0160  
     __size_of_task_idle 0022                  _F_APTOS 0100               _confi_port 19C2  
             _dispatcher 0604                ?_int_high 002A                  __Hparam 0000  
                __Lparam 0000       __end_of_STACK_SIZE 0603          __size_of___wmul 0096  
                ___lwmod 1306             __psmallconst 0600          __size_of_aviao1 0092  
        __size_of_aviao2 0086          __size_of_aviao3 007A                  __pcinit 18AE  
                __ramtop 0600                  __ptext0 13C2                  __ptext1 19BE  
                __ptext2 1948                  __ptext3 123A                  __ptext4 151A  
                __ptext5 116C                  __ptext6 183E                  __ptext7 19C2  
                __ptext8 15B0                  __ptext9 1090                _T0CONbits 000FD5  
        __size_of_tluzes 0078        __end_of_read_pipe 0E10                  _setupOS 1948  
                _quantum 0047           __pintcode_body 0B44     end_of_initialization 18F2  
      __end_of_task_idle 19A0                  int_func 0B44               ??_int_high 002A  
                postdec0 000FED                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
              _PORTCbits 000F82                _PORTDbits 000F83                _TRISCbits 000F94  
              _TRISDbits 000F95           __end_of___wmul 15B0            __pidataCOMRAM 19C6  
         __end_of_aviao1 1642           __end_of_aviao2 16C8           __end_of_aviao3 17C6  
             _write_pipe 0E10           __end_of_tluzes 183E      start_initialization 18AE  
    __end_of_create_pipe 151A      __end_of_create_task 1306      __size_of_confi_port 0004  
    __size_of_dispatcher 0540              __pbssBIGRAM 01AA              __pbssCOMRAM 0001  
   __end_of_SRAMInitHeap 123A        __size_of_int_high 0CA8                __pintcode 0008  
      __size_of_sem_init 0070        __size_of_sem_wait 00DC        __size_of_sem_post 012C  
      __size_of_start_os 0004              __smallconst 0600           __size_of_delay 0048  
   __end_of_rr_scheduler 174C                _read_pipe 0CB0              _create_pipe 1474  
            _create_task 123A                _task_idle 197E                _pipeluzes 001F  
    __size_of_write_pipe 0154                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600       __end_of_confi_port 19C6                int_high@i 0039  
     __end_of_dispatcher 0B44    __end_of_tluzesescreve 19BE         __size_of___lwmod 00BC  
  __size_of_SRAMInitHeap 00CE                 __ptext10 0F64                 __ptext11 1900  
               __ptext20 17C6                 __ptext12 0604                 __ptext21 0CB0  
               __ptext13 16C8                 __ptext22 197E                 __ptext14 1306  
               __ptext15 1642                 __ptext16 174C                 __ptext17 19A0  
               __ptext18 0E10                 __ptext19 1474         __size_of_setupOS 0036  
          __size_of_main 00B2                 _int_high 0008                 _sem_init 183E  
               _sem_wait 1090                 _sem_post 0F64             _task_running 0001  
               _start_os 19BE             _SRAMInitHeap 116C    __size_of_rr_scheduler 0084  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
           _rr_scheduler 16C8               _STACK_SIZE 0601       __end_of_write_pipe 0F64  
