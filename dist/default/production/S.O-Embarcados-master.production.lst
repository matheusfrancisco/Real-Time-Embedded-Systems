

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 22 02:20:03 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4520 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81 ;;___wmul@product	offset	0
    82 ;;___wmul@multiplier	offset=-2 (param)
    83 ;;___wmul@multiplicand	offset=-4 (param)
    84 ;;SRAMalloc@pHeap	offset	0
    85 ;;SRAMalloc@temp	offset	2
    86 ;;SRAMalloc@segHeader	offset	4
    87 ;;SRAMalloc@segLen	offset	5
    88 ;;SRAMalloc@nBytes	offset=-1 (param)
    89 ;;__SRAMmerge@pSegB	offset	0
    90 ;;__SRAMmerge@uSegB	offset	2
    91 ;;__SRAMmerge@uSegA	offset	3
    92 ;;__SRAMmerge@uSum	offset	4
    93 ;;__SRAMmerge@pSegA	offset=-2 (param)
    94 ;;sem_wait@pos	offset	0
    95 ;;sem_wait@s	offset=-2 (param)
    96 ;;sem_post@value	offset	0
    97 ;;sem_post@s	offset=-2 (param)
    98 ;;delay@time_ms	offset=-2 (param)
    99 ;;dispatcher@state	offset=-1 (param)
   100 ;;rr_scheduler@next_task_to_run	offset	0
   101 ;;rr_scheduler@j	offset	2
   102 ;;rr_scheduler@cont	offset	4
   103 ;;contagemR@i	offset	0
   104 ;;contagemR@x	offset	2
   105 ;;___wmul@product	offset	0
   106 ;;___wmul@multiplier	offset=-2 (param)
   107 ;;___wmul@multiplicand	offset=-4 (param)
   108 ;;___lwmod@counter	offset	0
   109 ;;___lwmod@dividend	offset=-2 (param)
   110 ;;___lwmod@divisor	offset=-4 (param)
   111 ;;pipe_write@pipe_handler	offset=-2 (param)
   112 ;;pipe_write@msg	offset=-3 (param)
   113 ;;libera_processos@i	offset	0
   114 ;;pipe_create@pipe_handler	offset=-2 (param)
   115 ;;pipe_create@id	offset=-4 (param)
   116 ;;pipe_create@size	offset=-6 (param)
   117 ;;SRAMalloc@pHeap	offset	0
   118 ;;SRAMalloc@temp	offset	2
   119 ;;SRAMalloc@segHeader	offset	4
   120 ;;SRAMalloc@segLen	offset	5
   121 ;;SRAMalloc@nBytes	offset=-1 (param)
   122 ;;__SRAMmerge@pSegB	offset	0
   123 ;;__SRAMmerge@uSegB	offset	2
   124 ;;__SRAMmerge@uSegA	offset	3
   125 ;;__SRAMmerge@uSum	offset	4
   126 ;;__SRAMmerge@pSegA	offset=-2 (param)
   127 ;;acender@dado	offset	0
   128 ;;pipe_read@pipe_handler	offset=-2 (param)
   129 ;;pipe_read@msg	offset=-4 (param)
   130 ;;dispatcher@state	offset=-1 (param)
   131 ;;rr_scheduler@next_task_to_run	offset	0
   132 ;;rr_scheduler@j	offset	2
   133 ;;rr_scheduler@cont	offset	4
   134 ;;contagemR@i	offset	0
   135 ;;contagemR@x	offset	2
   136 ;;___wmul@product	offset	0
   137 ;;___wmul@multiplier	offset=-2 (param)
   138 ;;___wmul@multiplicand	offset=-4 (param)
   139 ;;___lwmod@counter	offset	0
   140 ;;___lwmod@dividend	offset=-2 (param)
   141 ;;___lwmod@divisor	offset=-4 (param)
   142                           
   143                           	psect	idataCOMRAM
   144  001DB2                     __pidataCOMRAM:
   145                           	opt stack 0
   146                           
   147                           ;initializer for _quantum
   148  001DB2  0004               	dw	4
   149                           
   150                           	psect	smallconst
   151  000600                     __psmallconst:
   152                           	opt stack 0
   153  000600  00                 	db	0
   154  000601  001F               	dw	31
   155  000603                     __end_of_STACK_SIZE:
   156                           	opt stack 0
   157  0000                     _TOS	set	4093
   158  0000                     _PORTEbits	set	3972
   159  0000                     _LATBbits	set	3978
   160  0000                     _LATCbits	set	3979
   161  0000                     _PORTDbits	set	3971
   162  0000                     _PORTCbits	set	3970
   163  0000                     _TRISCbits	set	3988
   164  0000                     _TRISD	set	3989
   165  0000                     _PORTBbits	set	3969
   166  0000                     _PORTB	set	3969
   167  0000                     _TRISB	set	3987
   168  0000                     _TMR0L	set	4054
   169  0000                     _T0CONbits	set	4053
   170  0000                     _STKPTR	set	4092
   171  0000                     _TOSH	set	4094
   172  0000                     _TOSL	set	4093
   173  0000                     _TOSU	set	4095
   174  0000                     _WREG	set	4072
   175  0000                     _STATUS	set	4056
   176  0000                     _BSR	set	4064
   177  0000                     _INTCONbits	set	4082
   178  0000                     _TRISBbits	set	3987
   179  000603  61                 	db	97	;'a'
   180  000604  00                 	db	0
   181  000605  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186  001CD4                     __pcinit:
   187                           	opt stack 0
   188  001CD4                     start_initialization:
   189                           	opt stack 0
   190  001CD4                     __initialization:
   191                           	opt stack 0
   192                           
   193                           ; Initialize objects allocated to COMRAM (2 bytes)
   194                           ; load TBLPTR registers with __pidataCOMRAM
   195  001CD4  0EB2               	movlw	low __pidataCOMRAM
   196  001CD6  6EF6               	movwf	tblptrl,c
   197  001CD8  0E1D               	movlw	high __pidataCOMRAM
   198  001CDA  6EF7               	movwf	tblptrh,c
   199  001CDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   200  001CDE  6EF8               	movwf	tblptru,c
   201  001CE0  0009               	tblrd		*+	;fetch initializer
   202  001CE2  CFF5 F066          	movff	tablat,__pdataCOMRAM
   203  001CE6  0009               	tblrd		*+	;fetch initializer
   204  001CE8  CFF5 F067          	movff	tablat,__pdataCOMRAM+1
   205                           
   206                           ; Clear objects allocated to BIGRAM (512 bytes)
   207  001CEC  EE01  F0AA         	lfsr	0,__pbssBIGRAM
   208  001CF0  EE22 F000          	lfsr	2,512
   209  001CF4                     clear_0:
   210  001CF4  6AEE               	clrf	postinc0,c
   211  001CF6  50DD               	movf	postdec2,w,c
   212  001CF8  50D9               	movf	fsr2l,w,c
   213  001CFA  E1FC               	bnz	clear_0
   214  001CFC  50DA               	movf	fsr2h,w,c
   215  001CFE  E1FA               	bnz	clear_0
   216                           
   217                           ; Clear objects allocated to BANK1 (170 bytes)
   218  001D00  EE01  F000         	lfsr	0,__pbssBANK1
   219  001D04  0EAA               	movlw	170
   220  001D06                     clear_1:
   221  001D06  6AEE               	clrf	postinc0,c
   222  001D08  06E8               	decf	wreg,f,c
   223  001D0A  E1FD               	bnz	clear_1
   224                           
   225                           ; Clear objects allocated to COMRAM (66 bytes)
   226  001D0C  EE00  F001         	lfsr	0,__pbssCOMRAM
   227  001D10  0E42               	movlw	66
   228  001D12                     clear_2:
   229  001D12  6AEE               	clrf	postinc0,c
   230  001D14  06E8               	decf	wreg,f,c
   231  001D16  E1FD               	bnz	clear_2
   232  001D18                     end_of_initialization:
   233                           	opt stack 0
   234  001D18                     __end_of__initialization:
   235                           	opt stack 0
   236  001D18  0E00               	movlw	low (__Lsmallconst shr (0+16))
   237  001D1A  6EF8               	movwf	tblptru,c
   238  001D1C  0E06               	movlw	high __Lsmallconst
   239  001D1E  6EF7               	movwf	tblptrh,c
   240  001D20  0100               	movlb	0
   241  001D22  EFDC  F00B         	goto	_main	;jump to C main() function
   242                           tblptru	equ	0xFF8
   243                           tblptrh	equ	0xFF7
   244                           tblptrl	equ	0xFF6
   245                           tablat	equ	0xFF5
   246                           postinc0	equ	0xFEE
   247                           wreg	equ	0xFE8
   248                           postdec2	equ	0xFDD
   249                           fsr2h	equ	0xFDA
   250                           fsr2l	equ	0xFD9
   251                           
   252                           	psect	bssCOMRAM
   253  000001                     __pbssCOMRAM:
   254                           	opt stack 0
   255  000001                     _mensagens:
   256                           	opt stack 0
   257  000001                     	ds	12
   258  00000D                     _t2:
   259                           	opt stack 0
   260  00000D                     	ds	8
   261  000015                     _cont:
   262                           	opt stack 0
   263  000015                     	ds	2
   264  000017                     _task_running:
   265                           	opt stack 0
   266  000017                     	ds	2
   267  000019                     _tasks_installed:
   268                           	opt stack 0
   269  000019                     	ds	2
   270  00001B                     _testL:
   271                           	opt stack 0
   272  00001B                     	ds	12
   273  000027                     _pipeluzes:
   274                           	opt stack 0
   275  000027                     	ds	12
   276  000033                     _t1:
   277                           	opt stack 0
   278  000033                     	ds	8
   279  00003B                     _spista:
   280                           	opt stack 0
   281  00003B                     	ds	8
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           postdec2	equ	0xFDD
   289                           fsr2h	equ	0xFDA
   290                           fsr2l	equ	0xFD9
   291                           
   292                           	psect	dataCOMRAM
   293  000066                     __pdataCOMRAM:
   294                           	opt stack 0
   295  000066                     _quantum:
   296                           	opt stack 0
   297  000066                     	ds	2
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec2	equ	0xFDD
   305                           fsr2h	equ	0xFDA
   306                           fsr2l	equ	0xFD9
   307                           
   308                           	psect	bssBANK1
   309  000100                     __pbssBANK1:
   310                           	opt stack 0
   311  000100                     _F_APTOS:
   312                           	opt stack 0
   313  000100                     	ds	170
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           postdec2	equ	0xFDD
   321                           fsr2h	equ	0xFDA
   322                           fsr2l	equ	0xFD9
   323                           
   324                           	psect	bssBIGRAM
   325  0001AA                     __pbssBIGRAM:
   326                           	opt stack 0
   327  0001AA                     __uDynamicHeap:
   328                           	opt stack 0
   329  0001AA                     	ds	512
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           postdec2	equ	0xFDD
   337                           fsr2h	equ	0xFDA
   338                           fsr2l	equ	0xFD9
   339                           
   340                           	psect	cstackBANK0
   341  000080                     __pcstackBANK0:
   342                           	opt stack 0
   343  000080                     create_task@task:
   344                           	opt stack 0
   345                           
   346                           ; 17 bytes @ 0x0
   347  000080                     	ds	17
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec2	equ	0xFDD
   355                           fsr2h	equ	0xFDA
   356                           fsr2l	equ	0xFD9
   357                           
   358                           	psect	cstackCOMRAM
   359  000043                     __pcstackCOMRAM:
   360                           	opt stack 0
   361  000043                     ??_int_high:
   362                           
   363                           ; 1 bytes @ 0x0
   364  000043                     	ds	15
   365  000052                     int_high@i:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0xF
   369  000052                     	ds	2
   370  000054                     create_task@id:
   371                           	opt stack 0
   372  000054                     sem_init@s:
   373                           	opt stack 0
   374  000054                     SRAMInitHeap@count:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x11
   378  000054                     	ds	2
   379  000056                     create_task@prior:
   380                           	opt stack 0
   381  000056                     sem_init@value:
   382                           	opt stack 0
   383  000056                     SRAMInitHeap@pHeap:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x13
   387  000056                     	ds	2
   388  000058                     create_task@task_f:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x15
   392  000058                     	ds	2
   393  00005A                     tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec2	equ	0xFDD
   400                           fsr2h	equ	0xFDA
   401                           fsr2l	equ	0xFD9
   402                           
   403                           ; 1 bytes @ 0x17
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 18 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, pro
      +dl, prodh, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   423 ;;      Params:         0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels required when called:   14
   429 ;; This function calls:
   430 ;;		_SRAMInitHeap
   431 ;;		_confi_port
   432 ;;		_create_task
   433 ;;		_sem_init
   434 ;;		_setupOS
   435 ;;		_start_os
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           	psect	text0
   442  0017B8                     __ptext0:
   443                           	opt stack 0
   444  0017B8                     _main:
   445                           	opt stack 17
   446                           
   447                           ;main.c: 20: setupOS();
   448                           
   449                           ;incstack = 0
   450  0017B8  ECB7  F00E         	call	_setupOS	;wreg free
   451                           
   452                           ;main.c: 21: SRAMInitHeap();
   453  0017BC  EC10  F00E         	call	_SRAMInitHeap	;wreg free
   454                           
   455                           ;main.c: 22: extern sem_t spista;
   456                           ;main.c: 23: extern sem_t t1;
   457                           ;main.c: 24: extern sem_t t2;
   458                           ;main.c: 26: TRISBbits.RB0 = 0;
   459  0017C0  9093               	bcf	3987,0,c	;volatile
   460                           
   461                           ;main.c: 29: confi_port();
   462  0017C2  ECD4  F00E         	call	_confi_port	;wreg free
   463                           
   464                           ;main.c: 30: sem_init(&spista, 1);
   465  0017C6  0E3B               	movlw	low _spista
   466  0017C8  6E54               	movwf	sem_init@s,c
   467  0017CA  0E00               	movlw	high _spista
   468  0017CC  6E55               	movwf	sem_init@s+1,c
   469  0017CE  0E00               	movlw	0
   470  0017D0  6E57               	movwf	sem_init@value+1,c
   471  0017D2  0E01               	movlw	1
   472  0017D4  6E56               	movwf	sem_init@value,c
   473  0017D6  EC3D  F00E         	call	_sem_init	;wreg free
   474                           
   475                           ;main.c: 31: sem_init(&t1, 1);
   476  0017DA  0E33               	movlw	low _t1
   477  0017DC  6E54               	movwf	sem_init@s,c
   478  0017DE  0E00               	movlw	high _t1
   479  0017E0  6E55               	movwf	sem_init@s+1,c
   480  0017E2  0E00               	movlw	0
   481  0017E4  6E57               	movwf	sem_init@value+1,c
   482  0017E6  0E01               	movlw	1
   483  0017E8  6E56               	movwf	sem_init@value,c
   484  0017EA  EC3D  F00E         	call	_sem_init	;wreg free
   485                           
   486                           ;main.c: 37: create_task(2, 3, &led_1);
   487  0017EE  0E00               	movlw	0
   488  0017F0  6E55               	movwf	create_task@id+1,c
   489  0017F2  0E02               	movlw	2
   490  0017F4  6E54               	movwf	create_task@id,c
   491  0017F6  0E00               	movlw	0
   492  0017F8  6E57               	movwf	create_task@prior+1,c
   493  0017FA  0E03               	movlw	3
   494  0017FC  6E56               	movwf	create_task@prior,c
   495  0017FE  0E3A               	movlw	low _led_1
   496  001800  6E58               	movwf	create_task@task_f,c
   497  001802  0E1A               	movlw	high _led_1
   498  001804  6E59               	movwf	create_task@task_f+1,c
   499  001806  ECE3  F00D         	call	_create_task	;wreg free
   500                           
   501                           ;main.c: 38: create_task(3, 3, &led_2);
   502  00180A  0E00               	movlw	0
   503  00180C  6E55               	movwf	create_task@id+1,c
   504  00180E  0E03               	movlw	3
   505  001810  6E54               	movwf	create_task@id,c
   506  001812  0E00               	movlw	0
   507  001814  6E57               	movwf	create_task@prior+1,c
   508  001816  0E03               	movlw	3
   509  001818  6E56               	movwf	create_task@prior,c
   510  00181A  0ECC               	movlw	low _led_2
   511  00181C  6E58               	movwf	create_task@task_f,c
   512  00181E  0E1A               	movlw	high _led_2
   513  001820  6E59               	movwf	create_task@task_f+1,c
   514  001822  ECE3  F00D         	call	_create_task	;wreg free
   515                           
   516                           ;main.c: 39: create_task(4, 3, &led_3);
   517  001826  0E00               	movlw	0
   518  001828  6E55               	movwf	create_task@id+1,c
   519  00182A  0E04               	movlw	4
   520  00182C  6E54               	movwf	create_task@id,c
   521  00182E  0E00               	movlw	0
   522  001830  6E57               	movwf	create_task@prior+1,c
   523  001832  0E03               	movlw	3
   524  001834  6E56               	movwf	create_task@prior,c
   525  001836  0E64               	movlw	low _led_3
   526  001838  6E58               	movwf	create_task@task_f,c
   527  00183A  0E18               	movlw	high _led_3
   528  00183C  6E59               	movwf	create_task@task_f+1,c
   529  00183E  ECE3  F00D         	call	_create_task	;wreg free
   530                           
   531                           ;main.c: 40: create_task(5, 3, &acender);
   532  001842  0E00               	movlw	0
   533  001844  6E55               	movwf	create_task@id+1,c
   534  001846  0E05               	movlw	5
   535  001848  6E54               	movwf	create_task@id,c
   536  00184A  0E00               	movlw	0
   537  00184C  6E57               	movwf	create_task@prior+1,c
   538  00184E  0E03               	movlw	3
   539  001850  6E56               	movwf	create_task@prior,c
   540  001852  0E52               	movlw	low _acender
   541  001854  6E58               	movwf	create_task@task_f,c
   542  001856  0E1B               	movlw	high _acender
   543  001858  6E59               	movwf	create_task@task_f+1,c
   544  00185A  ECE3  F00D         	call	_create_task	;wreg free
   545                           
   546                           ;main.c: 62: start_os();
   547  00185E  ECD7  F00E         	call	_start_os	;wreg free
   548  001862                     l37:
   549                           
   550                           ;main.c: 64: {
   551  001862  D7FF               	goto	l37
   552  001864                     __end_of_main:
   553                           	opt stack 0
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec2	equ	0xFDD
   561                           fsr2h	equ	0xFDA
   562                           fsr2l	equ	0xFD9
   563                           
   564 ;; *************** function _start_os *****************
   565 ;; Defined at:
   566 ;;		line 155 in file "kernel.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		None
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   580 ;;      Params:         0       0       0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:   11
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text1
   595  001DAE                     __ptext1:
   596                           	opt stack 0
   597  001DAE                     _start_os:
   598                           	opt stack 19
   599                           
   600                           ;kernel.c: 159: T0CONbits.TMR0ON = 1;
   601                           
   602                           ;incstack = 0
   603  001DAE  8ED5               	bsf	4053,7,c	;volatile
   604  001DB0  0012               	return		;funcret
   605  001DB2                     __end_of_start_os:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           postdec2	equ	0xFDD
   614                           fsr2h	equ	0xFDA
   615                           fsr2l	equ	0xFD9
   616                           
   617 ;; *************** function _setupOS *****************
   618 ;; Defined at:
   619 ;;		line 86 in file "kernel.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   633 ;;      Params:         0       0       0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:   13
   640 ;; This function calls:
   641 ;;		_SRAMInitHeap
   642 ;;		_create_task
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649  001D6E                     __ptext2:
   650                           	opt stack 0
   651  001D6E                     _setupOS:
   652                           	opt stack 17
   653                           
   654                           ;kernel.c: 98: T0CONbits.T0CS = 0;
   655                           
   656                           ;incstack = 0
   657  001D6E  9AD5               	bcf	4053,5,c	;volatile
   658                           
   659                           ;kernel.c: 99: T0CONbits.PSA = 0;
   660  001D70  96D5               	bcf	4053,3,c	;volatile
   661                           
   662                           ;kernel.c: 100: T0CONbits.T0PS = 0b111;
   663  001D72  80D5               	bsf	4053,0,c	;volatile
   664  001D74  82D5               	bsf	4053,1,c	;volatile
   665  001D76  84D5               	bsf	4053,2,c	;volatile
   666                           
   667                           ;kernel.c: 101: INTCONbits.PEIE = 1;
   668  001D78  8CF2               	bsf	intcon,6,c	;volatile
   669                           
   670                           ;kernel.c: 102: INTCONbits.TMR0IE = 1;
   671  001D7A  8AF2               	bsf	intcon,5,c	;volatile
   672                           
   673                           ;kernel.c: 103: TMR0L = 252;
   674  001D7C  0EFC               	movlw	252
   675  001D7E  6ED6               	movwf	4054,c	;volatile
   676                           
   677                           ;kernel.c: 105: T0CONbits.TMR0ON = 1;
   678  001D80  8ED5               	bsf	4053,7,c	;volatile
   679                           
   680                           ;kernel.c: 110: create_task(1,5, &task_idle);
   681  001D82  0E00               	movlw	0
   682  001D84  6E55               	movwf	create_task@id+1,c
   683  001D86  0E01               	movlw	1
   684  001D88  6E54               	movwf	create_task@id,c
   685  001D8A  0E00               	movlw	0
   686  001D8C  6E57               	movwf	create_task@prior+1,c
   687  001D8E  0E05               	movlw	5
   688  001D90  6E56               	movwf	create_task@prior,c
   689  001D92  0EB4               	movlw	low _task_idle
   690  001D94  6E58               	movwf	create_task@task_f,c
   691  001D96  0E1D               	movlw	high _task_idle
   692  001D98  6E59               	movwf	create_task@task_f+1,c
   693  001D9A  ECE3  F00D         	call	_create_task	;wreg free
   694                           
   695                           ;kernel.c: 122: TRISBbits.RB0 = 0;
   696  001D9E  9093               	bcf	3987,0,c	;volatile
   697                           
   698                           ;kernel.c: 124: SRAMInitHeap();
   699  001DA0  EC10  F00E         	call	_SRAMInitHeap	;wreg free
   700                           
   701                           ;kernel.c: 126: INTCONbits.GIE = 1;
   702  001DA4  8EF2               	bsf	intcon,7,c	;volatile
   703  001DA6  0012               	return		;funcret
   704  001DA8                     __end_of_setupOS:
   705                           	opt stack 0
   706                           tblptru	equ	0xFF8
   707                           tblptrh	equ	0xFF7
   708                           tblptrl	equ	0xFF6
   709                           tablat	equ	0xFF5
   710                           intcon	equ	0xFF2
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postdec2	equ	0xFDD
   714                           fsr2h	equ	0xFDA
   715                           fsr2l	equ	0xFD9
   716                           
   717 ;; *************** function _create_task *****************
   718 ;; Defined at:
   719 ;;		line 21 in file "kernel.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;  id              2   17[COMRAM] unsigned int 
   722 ;;  prior           2   19[COMRAM] unsigned int 
   723 ;;  task_f          2   21[COMRAM] PTR FTN()void 
   724 ;;		 -> task_idle(1), acender(1), led_3(1), led_2(1), 
   725 ;;		 -> led_1(1), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  task           17    0[BANK0 ] struct tcb
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   737 ;;      Params:         6       0       0       0       0       0       0
   738 ;;      Locals:         0      17       0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0
   740 ;;      Totals:         6      17       0       0       0       0       0
   741 ;;Total ram usage:       23 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:   12
   744 ;; This function calls:
   745 ;;		___wmul
   746 ;; This function is called by:
   747 ;;		_main
   748 ;;		_setupOS
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753  001BC6                     __ptext3:
   754                           	opt stack 0
   755  001BC6                     _create_task:
   756                           	opt stack 17
   757                           
   758                           ;kernel.c: 24: tcb_t task;
   759                           ;kernel.c: 26: task.task_id = id;
   760                           
   761                           ;incstack = 0
   762  001BC6  C054  F080         	movff	create_task@id,create_task@task
   763  001BCA  C055  F081         	movff	create_task@id+1,create_task@task+1
   764                           
   765                           ;kernel.c: 27: task.task_prior = prior;
   766  001BCE  C056  F082         	movff	create_task@prior,create_task@task+2
   767  001BD2  C057  F083         	movff	create_task@prior+1,create_task@task+3
   768                           
   769                           ;kernel.c: 28: task.task_f = task_f;
   770  001BD6  C058  F084         	movff	create_task@task_f,create_task@task+4
   771  001BDA  C059  F085         	movff	create_task@task_f+1,create_task@task+5
   772                           
   773                           ;kernel.c: 29: task.task_stack.stack_size = 0;
   774  001BDE  0E00               	movlw	0
   775  001BE0  0100               	movlb	0	; () banked
   776  001BE2  6F8D               	movwf	(create_task@task+13)& (0+255),b
   777  001BE4  0E00               	movlw	0
   778  001BE6  6F8C               	movwf	(create_task@task+12)& (0+255),b
   779                           
   780                           ; BSR set to: 0
   781                           ;kernel.c: 30: task.task_state = READY;
   782  001BE8  0E01               	movlw	1
   783  001BEA  6F88               	movwf	(create_task@task+8)& (0+255),b
   784                           
   785                           ; BSR set to: 0
   786                           ;kernel.c: 32: F_APTOS[tasks_installed] = task;
   787  001BEC  0E11               	movlw	17
   788  001BEE  6EE6               	movwf	postinc1,c
   789  001BF0  0E00               	movlw	0
   790  001BF2  6EE6               	movwf	postinc1,c
   791  001BF4  C019  FFE6         	movff	_tasks_installed,postinc1
   792  001BF8  C01A  FFE6         	movff	_tasks_installed+1,postinc1
   793  001BFC  ECD2  F00C         	call	___wmul	;wreg free
   794  001C00  0E00               	movlw	low _F_APTOS
   795  001C02  245A               	addwf	btemp,w,c
   796  001C04  6EE9               	movwf	fsr0l,c
   797  001C06  0E01               	movlw	high _F_APTOS
   798  001C08  205B               	addwfc	btemp+1,w,c
   799  001C0A  6EEA               	movwf	fsr0h,c
   800  001C0C  EE20  F080         	lfsr	2,create_task@task
   801  001C10  0E10               	movlw	16
   802  001C12                     u1111:
   803  001C12  CFDB FFEB          	movff	plusw2,plusw0
   804  001C16  06E8               	decf	wreg,f,c
   805  001C18  E2FC               	bc	u1111
   806                           
   807                           ;kernel.c: 33: tasks_installed++;
   808  001C1A  4A19               	infsnz	_tasks_installed,f,c
   809  001C1C  2A1A               	incf	_tasks_installed+1,f,c
   810  001C1E  0012               	return		;funcret
   811  001C20                     __end_of_create_task:
   812                           	opt stack 0
   813                           tblptru	equ	0xFF8
   814                           tblptrh	equ	0xFF7
   815                           tblptrl	equ	0xFF6
   816                           tablat	equ	0xFF5
   817                           intcon	equ	0xFF2
   818                           postinc0	equ	0xFEE
   819                           plusw0	equ	0xFEB
   820                           fsr0h	equ	0xFEA
   821                           fsr0l	equ	0xFE9
   822                           wreg	equ	0xFE8
   823                           postinc1	equ	0xFE6
   824                           postdec2	equ	0xFDD
   825                           plusw2	equ	0xFDB
   826                           fsr2h	equ	0xFDA
   827                           fsr2l	equ	0xFD9
   828                           
   829 ;; *************** function ___wmul *****************
   830 ;; Defined at:
   831 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  multiplier      2  [STACK] unsigned int 
   834 ;;  multiplicand    2  [STACK] unsigned int 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  product         2  [STACK] unsigned int 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  2  [STACK] unsigned int 
   839 ;; Registers used:
   840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   846 ;;      Params:         0       0       0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:   11
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_create_task
   857 ;;		_dispatcher
   858 ;;		_delay
   859 ;;		_int_high
   860 ;;		_contagemR
   861 ;;		_rr_scheduler
   862 ;;		_sem_post
   863 ;;		_libera_processos
   864 ;;		_get_id
   865 ;;		_prior_scheduler
   866 ;; This function uses a reentrant model
   867 ;;
   868                           
   869                           	psect	text4
   870  0019A4                     __ptext4:
   871                           	opt stack 0
   872  0019A4                     ___wmul:
   873                           	opt stack 0
   874                           
   875                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
   876  0019A4  52E6               	movf	postinc1,f,c
   877  0019A6  52E6               	movf	postinc1,f,c
   878                           
   879                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   880                           
   881                           ;incstack = 0
   882  0019A8  0EFA               	movlw	-6
   883  0019AA  CFE3 F065          	movff	plusw1,btemp+11
   884                           
   885                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   886  0019AE  0EFC               	movlw	-4
   887  0019B0  50E3               	movf	plusw1,w,c
   888  0019B2  0265               	mulwf	btemp+11,c
   889                           
   890                           ;stkvar	___wmul@product @ sp[(-2)+0]
   891  0019B4  0EFE               	movlw	-2
   892  0019B6  CFF3 FFE3          	movff	prodl,plusw1
   893  0019BA  0EFF               	movlw	-1
   894  0019BC  CFF4 FFE3          	movff	prodh,plusw1
   895                           
   896                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   897  0019C0  0EFB               	movlw	251
   898  0019C2  24E1               	addwf	fsr1l,w,c
   899  0019C4  6ED9               	movwf	fsr2l,c
   900  0019C6  0EFF               	movlw	255
   901  0019C8  20E2               	addwfc	fsr1h,w,c
   902  0019CA  6EDA               	movwf	fsr2h,c
   903  0019CC  50DF               	movf	indf2,w,c
   904  0019CE  6E65               	movwf	btemp+11,c
   905                           
   906                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   907  0019D0  0EFC               	movlw	-4
   908  0019D2  50E3               	movf	plusw1,w,c
   909  0019D4  0265               	mulwf	btemp+11,c
   910  0019D6  CFF3 FFF4          	movff	prodl,prodh
   911  0019DA  6AF3               	clrf	prodl,c
   912                           
   913                           ;stkvar	___wmul@product @ sp[(-2)+0]
   914  0019DC  50E1               	movf	fsr1l,w,c
   915  0019DE  0FFE               	addlw	-2
   916  0019E0  6ED9               	movwf	fsr2l,c
   917  0019E2  50E2               	movf	fsr1h,w,c
   918  0019E4  6EDA               	movwf	fsr2h,c
   919  0019E6  0EFF               	movlw	255
   920  0019E8  22DA               	addwfc	fsr2h,f,c
   921  0019EA  50F3               	movf	prodl,w,c
   922  0019EC  26DE               	addwf	postinc2,f,c
   923  0019EE  50F4               	movf	prodh,w,c
   924  0019F0  22DD               	addwfc	postdec2,f,c
   925                           
   926                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
   927  0019F2  0EFA               	movlw	-6
   928  0019F4  CFE3 F065          	movff	plusw1,btemp+11
   929                           
   930                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
   931  0019F8  0EFD               	movlw	253
   932  0019FA  24E1               	addwf	fsr1l,w,c
   933  0019FC  6ED9               	movwf	fsr2l,c
   934  0019FE  0EFF               	movlw	255
   935  001A00  20E2               	addwfc	fsr1h,w,c
   936  001A02  6EDA               	movwf	fsr2h,c
   937  001A04  50DF               	movf	indf2,w,c
   938  001A06  0265               	mulwf	btemp+11,c
   939  001A08  CFF3 FFF4          	movff	prodl,prodh
   940  001A0C  6AF3               	clrf	prodl,c
   941                           
   942                           ;stkvar	___wmul@product @ sp[(-2)+0]
   943  001A0E  50E1               	movf	fsr1l,w,c
   944  001A10  0FFE               	addlw	-2
   945  001A12  6ED9               	movwf	fsr2l,c
   946  001A14  50E2               	movf	fsr1h,w,c
   947  001A16  6EDA               	movwf	fsr2h,c
   948  001A18  0EFF               	movlw	255
   949  001A1A  22DA               	addwfc	fsr2h,f,c
   950  001A1C  50F3               	movf	prodl,w,c
   951  001A1E  26DE               	addwf	postinc2,f,c
   952  001A20  50F4               	movf	prodh,w,c
   953  001A22  22DD               	addwfc	postdec2,f,c
   954                           
   955                           ;stkvar	___wmul@product @ sp[(-2)+0]
   956  001A24  0EFE               	movlw	-2
   957  001A26  CFE3 F05A          	movff	plusw1,btemp
   958  001A2A  0EFF               	movlw	-1
   959  001A2C  CFE3 F05B          	movff	plusw1,btemp+1
   960                           
   961                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
   962  001A30  0EFA               	movlw	250
   963  001A32  26E1               	addwf	fsr1l,f,c
   964  001A34  0EFF               	movlw	255
   965  001A36  22E2               	addwfc	fsr1h,f,c
   966  001A38  0012               	return		;funcret
   967  001A3A                     __end_of___wmul:
   968                           	opt stack 0
   969                           tblptru	equ	0xFF8
   970                           tblptrh	equ	0xFF7
   971                           tblptrl	equ	0xFF6
   972                           tablat	equ	0xFF5
   973                           prodh	equ	0xFF4
   974                           prodl	equ	0xFF3
   975                           intcon	equ	0xFF2
   976                           postinc0	equ	0xFEE
   977                           plusw0	equ	0xFEB
   978                           fsr0h	equ	0xFEA
   979                           fsr0l	equ	0xFE9
   980                           wreg	equ	0xFE8
   981                           postinc1	equ	0xFE6
   982                           plusw1	equ	0xFE3
   983                           fsr1h	equ	0xFE2
   984                           fsr1l	equ	0xFE1
   985                           indf2	equ	0xFDF
   986                           postinc2	equ	0xFDE
   987                           postdec2	equ	0xFDD
   988                           plusw2	equ	0xFDB
   989                           fsr2h	equ	0xFDA
   990                           fsr2l	equ	0xFD9
   991                           
   992 ;; *************** function _SRAMInitHeap *****************
   993 ;; Defined at:
   994 ;;		line 303 in file "memory.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  count           2   17[COMRAM] unsigned int 
   999 ;;  pHeap           2   19[COMRAM] near PTR unsigned char 
  1000 ;;		 -> _uDynamicHeap(512), 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1010 ;;      Params:         0       0       0       0       0       0       0
  1011 ;;      Locals:         4       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0
  1013 ;;      Totals:         4       0       0       0       0       0       0
  1014 ;;Total ram usage:        4 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:   11
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;;		_setupOS
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026  001C20                     __ptext5:
  1027                           	opt stack 0
  1028  001C20                     _SRAMInitHeap:
  1029                           	opt stack 18
  1030                           
  1031                           ;memory.c: 305: unsigned char * near pHeap;
  1032                           ;memory.c: 306: near unsigned int count;
  1033                           ;memory.c: 308: pHeap = _uDynamicHeap;
  1034                           
  1035                           ;incstack = 0
  1036  001C20  0EAA               	movlw	low __uDynamicHeap
  1037  001C22  6E56               	movwf	SRAMInitHeap@pHeap,c
  1038  001C24  0E01               	movlw	high __uDynamicHeap
  1039  001C26  6E57               	movwf	SRAMInitHeap@pHeap+1,c
  1040                           
  1041                           ;memory.c: 309: count = 0x200-1;
  1042  001C28  0E01               	movlw	1
  1043  001C2A  6E55               	movwf	SRAMInitHeap@count+1,c
  1044  001C2C  6854               	setf	SRAMInitHeap@count,c
  1045  001C2E                     
  1046                           ;memory.c: 312: {
  1047                           ;memory.c: 313: if (count > 0x7F)
  1048  001C2E  5055               	movf	SRAMInitHeap@count+1,w,c
  1049  001C30  E104               	bnz	u690
  1050  001C32  0E80               	movlw	128
  1051  001C34  5C54               	subwf	SRAMInitHeap@count,w,c
  1052  001C36  A0D8               	btfss	status,0,c
  1053  001C38  D011               	goto	l355
  1054  001C3A                     u690:
  1055                           
  1056                           ;memory.c: 314: {
  1057                           ;memory.c: 315: *pHeap = 0x7F;
  1058  001C3A  C056  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1059  001C3E  C057  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1060  001C42  0E7F               	movlw	127
  1061  001C44  6EDF               	movwf	indf2,c
  1062                           
  1063                           ;memory.c: 316: pHeap += 0x7F;
  1064  001C46  0E7F               	movlw	127
  1065  001C48  2656               	addwf	SRAMInitHeap@pHeap,f,c
  1066  001C4A  0E00               	movlw	0
  1067  001C4C  2257               	addwfc	SRAMInitHeap@pHeap+1,f,c
  1068                           
  1069                           ;memory.c: 317: count = count - 0x7F;
  1070  001C4E  0E81               	movlw	129
  1071  001C50  2454               	addwf	SRAMInitHeap@count,w,c
  1072  001C52  6E54               	movwf	SRAMInitHeap@count,c
  1073  001C54  0EFF               	movlw	255
  1074  001C56  2055               	addwfc	SRAMInitHeap@count+1,w,c
  1075  001C58  6E55               	movwf	SRAMInitHeap@count+1,c
  1076                           
  1077                           ;memory.c: 318: }
  1078  001C5A  D7E9               	goto	l354
  1079  001C5C                     l355:
  1080                           
  1081                           ;memory.c: 319: else
  1082                           ;memory.c: 320: {
  1083                           ;memory.c: 321: *pHeap = count;
  1084  001C5C  C056  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  1085  001C60  C057  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  1086  001C64  C054  FFDF         	movff	SRAMInitHeap@count,indf2
  1087                           
  1088                           ;memory.c: 322: *(pHeap + count) = 0;
  1089  001C68  5054               	movf	SRAMInitHeap@count,w,c
  1090  001C6A  2456               	addwf	SRAMInitHeap@pHeap,w,c
  1091  001C6C  6ED9               	movwf	fsr2l,c
  1092  001C6E  5055               	movf	SRAMInitHeap@count+1,w,c
  1093  001C70  2057               	addwfc	SRAMInitHeap@pHeap+1,w,c
  1094  001C72  6EDA               	movwf	fsr2h,c
  1095  001C74  0E00               	movlw	0
  1096  001C76  6EDF               	movwf	indf2,c
  1097                           
  1098                           ;memory.c: 323: return;
  1099  001C78  0012               	return	
  1100  001C7A                     __end_of_SRAMInitHeap:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           prodh	equ	0xFF4
  1107                           prodl	equ	0xFF3
  1108                           intcon	equ	0xFF2
  1109                           postinc0	equ	0xFEE
  1110                           plusw0	equ	0xFEB
  1111                           fsr0h	equ	0xFEA
  1112                           fsr0l	equ	0xFE9
  1113                           wreg	equ	0xFE8
  1114                           postinc1	equ	0xFE6
  1115                           plusw1	equ	0xFE3
  1116                           fsr1h	equ	0xFE2
  1117                           fsr1l	equ	0xFE1
  1118                           indf2	equ	0xFDF
  1119                           postinc2	equ	0xFDE
  1120                           postdec2	equ	0xFDD
  1121                           plusw2	equ	0xFDB
  1122                           fsr2h	equ	0xFDA
  1123                           fsr2l	equ	0xFD9
  1124                           status	equ	0xFD8
  1125                           
  1126 ;; *************** function _sem_init *****************
  1127 ;; Defined at:
  1128 ;;		line 8 in file "semaphore.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  s               2   17[COMRAM] PTR struct sem
  1131 ;;		 -> t1(8), spista(8), 
  1132 ;;  value           2   19[COMRAM] int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1144 ;;      Params:         4       0       0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0
  1147 ;;      Totals:         4       0       0       0       0       0       0
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:   13
  1151 ;; This function calls:
  1152 ;;		_SRAMalloc
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text6
  1159  001C7A                     __ptext6:
  1160                           	opt stack 0
  1161  001C7A                     _sem_init:
  1162                           	opt stack 17
  1163                           
  1164                           ;semaphore.c: 10: INTCONbits.GIE = 0;
  1165                           
  1166                           ;incstack = 0
  1167  001C7A  9EF2               	bcf	intcon,7,c	;volatile
  1168                           
  1169                           ;semaphore.c: 12: s->contador = value;
  1170  001C7C  C054  FFD9         	movff	sem_init@s,fsr2l
  1171  001C80  C055  FFDA         	movff	sem_init@s+1,fsr2h
  1172  001C84  C056  FFDE         	movff	sem_init@value,postinc2
  1173  001C88  C057  FFDD         	movff	sem_init@value+1,postdec2
  1174                           
  1175                           ;semaphore.c: 13: s->queue.task = (u_int*)SRAMalloc(sizeof(u_int)*10);
  1176  001C8C  0E14               	movlw	20
  1177  001C8E  6EE6               	movwf	postinc1,c
  1178  001C90  ECA3  F005         	call	_SRAMalloc	;wreg free
  1179  001C94  EE20 F002          	lfsr	2,2
  1180  001C98  5054               	movf	sem_init@s,w,c
  1181  001C9A  26D9               	addwf	fsr2l,f,c
  1182  001C9C  5055               	movf	sem_init@s+1,w,c
  1183  001C9E  22DA               	addwfc	fsr2h,f,c
  1184  001CA0  C05A  FFDE         	movff	btemp,postinc2
  1185  001CA4  C05B  FFDD         	movff	btemp+1,postdec2
  1186                           
  1187                           ;semaphore.c: 14: s->queue.first = 0;
  1188  001CA8  EE20 F006          	lfsr	2,6
  1189  001CAC  5054               	movf	sem_init@s,w,c
  1190  001CAE  26D9               	addwf	fsr2l,f,c
  1191  001CB0  5055               	movf	sem_init@s+1,w,c
  1192  001CB2  22DA               	addwfc	fsr2h,f,c
  1193  001CB4  0E00               	movlw	0
  1194  001CB6  6EDE               	movwf	postinc2,c
  1195  001CB8  0E00               	movlw	0
  1196  001CBA  6EDD               	movwf	postdec2,c
  1197                           
  1198                           ;semaphore.c: 15: s->queue.size = 0;
  1199  001CBC  EE20 F004          	lfsr	2,4
  1200  001CC0  5054               	movf	sem_init@s,w,c
  1201  001CC2  26D9               	addwf	fsr2l,f,c
  1202  001CC4  5055               	movf	sem_init@s+1,w,c
  1203  001CC6  22DA               	addwfc	fsr2h,f,c
  1204  001CC8  0E00               	movlw	0
  1205  001CCA  6EDE               	movwf	postinc2,c
  1206  001CCC  0E00               	movlw	0
  1207  001CCE  6EDD               	movwf	postdec2,c
  1208                           
  1209                           ;semaphore.c: 17: INTCONbits.GIE = 1;
  1210  001CD0  8EF2               	bsf	intcon,7,c	;volatile
  1211  001CD2  0012               	return		;funcret
  1212  001CD4                     __end_of_sem_init:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           tblptrh	equ	0xFF7
  1216                           tblptrl	equ	0xFF6
  1217                           tablat	equ	0xFF5
  1218                           prodh	equ	0xFF4
  1219                           prodl	equ	0xFF3
  1220                           intcon	equ	0xFF2
  1221                           postinc0	equ	0xFEE
  1222                           plusw0	equ	0xFEB
  1223                           fsr0h	equ	0xFEA
  1224                           fsr0l	equ	0xFE9
  1225                           wreg	equ	0xFE8
  1226                           postinc1	equ	0xFE6
  1227                           plusw1	equ	0xFE3
  1228                           fsr1h	equ	0xFE2
  1229                           fsr1l	equ	0xFE1
  1230                           indf2	equ	0xFDF
  1231                           postinc2	equ	0xFDE
  1232                           postdec2	equ	0xFDD
  1233                           plusw2	equ	0xFDB
  1234                           fsr2h	equ	0xFDA
  1235                           fsr2l	equ	0xFD9
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _SRAMalloc *****************
  1239 ;; Defined at:
  1240 ;;		line 181 in file "memory.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  nBytes          1  [STACK] near unsigned char 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  pHeap           2  [STACK] near PTR struct _SALLOC
  1245 ;;		 -> _uDynamicHeap(512), 
  1246 ;;  temp            2  [STACK] near PTR struct _SALLOC
  1247 ;;		 -> _uDynamicHeap(512), 
  1248 ;;  segHeader       1  [STACK] struct _SALLOC
  1249 ;;  segLen          1  [STACK] unsigned char 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2  [STACK] PTR unsigned char 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1259 ;;      Params:         0       0       0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0
  1262 ;;      Totals:         0       0       0       0       0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:   12
  1266 ;; This function calls:
  1267 ;;		__SRAMmerge
  1268 ;; This function is called by:
  1269 ;;		_sem_init
  1270 ;;		_pipe_create
  1271 ;; This function uses a reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text7
  1275  000B46                     __ptext7:
  1276                           	opt stack 0
  1277  000B46                     _SRAMalloc:
  1278                           	opt stack 0
  1279                           
  1280                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  1281  000B46  0E06               	movlw	6
  1282  000B48  26E1               	addwf	fsr1l,f,c
  1283  000B4A  0E00               	movlw	0
  1284  000B4C  22E2               	addwfc	fsr1h,f,c
  1285                           
  1286                           ;memory.c: 183: SALLOC * near pHeap;
  1287                           ;memory.c: 184: SALLOC * near temp;
  1288                           ;memory.c: 185: near SALLOC segHeader;
  1289                           ;memory.c: 186: near unsigned char segLen;
  1290                           ;memory.c: 189: if (nBytes > (0x7F - 1)) return (0);
  1291                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1292                           
  1293                           ;incstack = 0
  1294  000B4E  0EF9               	movlw	-7
  1295  000B50  CFE3 F05A          	movff	plusw1,btemp
  1296  000B54  0E7E               	movlw	126
  1297  000B56  645A               	cpfsgt	btemp,c
  1298  000B58  D004               	goto	l1898
  1299  000B5A                     u750:
  1300  000B5A  0E00               	movlw	0
  1301  000B5C  6E5A               	movwf	btemp,c
  1302  000B5E  0E00               	movlw	0
  1303  000B60  D07B               	goto	L1
  1304  000B62                     l1898:
  1305                           
  1306                           ;memory.c: 192: pHeap = (SALLOC *)_uDynamicHeap;
  1307                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1308  000B62  0E01               	movlw	high __uDynamicHeap
  1309  000B64  6E5A               	movwf	btemp,c
  1310  000B66  0EFB               	movlw	-5
  1311  000B68  C05A  FFE3         	movff	btemp,plusw1
  1312  000B6C  0EAA               	movlw	low __uDynamicHeap
  1313  000B6E  6E5A               	movwf	btemp,c
  1314  000B70  0EFA               	movlw	-6
  1315  000B72  C05A  FFE3         	movff	btemp,plusw1
  1316  000B76                     l1900:
  1317                           
  1318                           ;memory.c: 195: {
  1319                           ;memory.c: 197: segHeader = *pHeap;
  1320                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1321  000B76  0EFA               	movlw	-6
  1322  000B78  CFE3 FFD9          	movff	plusw1,fsr2l
  1323  000B7C  0EFB               	movlw	-5
  1324  000B7E  CFE3 FFDA          	movff	plusw1,fsr2h
  1325  000B82  50DF               	movf	indf2,w,c
  1326  000B84  6E65               	movwf	btemp+11,c
  1327                           
  1328                           ;stkvar	SRAMalloc@segHeader @ sp[(-6)+4]
  1329  000B86  0EFE               	movlw	-2
  1330  000B88  C065  FFE3         	movff	btemp+11,plusw1
  1331                           
  1332                           ;memory.c: 200: segLen = segHeader.bits.count - 1;
  1333                           ;stkvar	SRAMalloc@segHeader @ sp[(-6)+4]
  1334  000B8C  50E1               	movf	fsr1l,w,c
  1335  000B8E  0FFE               	addlw	-2
  1336  000B90  6ED9               	movwf	fsr2l,c
  1337  000B92  50E2               	movf	fsr1h,w,c
  1338  000B94  6EDA               	movwf	fsr2h,c
  1339  000B96  0EFF               	movlw	255
  1340  000B98  22DA               	addwfc	fsr2h,f,c
  1341  000B9A  50DF               	movf	223,w,c
  1342  000B9C  0B7F               	andlw	127
  1343  000B9E  6E65               	movwf	btemp+11,c
  1344  000BA0  0EFF               	movlw	255
  1345  000BA2  2665               	addwf	btemp+11,f,c
  1346                           
  1347                           ;stkvar	SRAMalloc@segLen @ sp[(-6)+5]
  1348  000BA4  0EFF               	movlw	-1
  1349  000BA6  C065  FFE3         	movff	btemp+11,plusw1
  1350                           
  1351                           ;memory.c: 203: if (segHeader.byte == 0) return (0);
  1352                           ;stkvar	SRAMalloc@segHeader @ sp[(-6)+4]
  1353  000BAA  0EFE               	movlw	-2
  1354  000BAC  50E3               	movf	plusw1,w,c
  1355  000BAE  B4D8               	btfsc	status,2,c
  1356  000BB0  D7D4               	goto	u750
  1357                           
  1358                           ;memory.c: 206: if (!(segHeader.bits.alloc))
  1359                           ;stkvar	SRAMalloc@segHeader @ sp[(-6)+4]
  1360  000BB2  50E1               	movf	fsr1l,w,c
  1361  000BB4  0FFE               	addlw	-2
  1362  000BB6  6ED9               	movwf	fsr2l,c
  1363  000BB8  50E2               	movf	fsr1h,w,c
  1364  000BBA  6EDA               	movwf	fsr2h,c
  1365  000BBC  0EFF               	movlw	255
  1366  000BBE  22DA               	addwfc	fsr2h,f,c
  1367  000BC0  BEDF               	btfsc	indf2,7,c
  1368  000BC2  D016               	goto	u790
  1369                           
  1370                           ;memory.c: 207: {
  1371                           ;memory.c: 209: if (nBytes > segLen)
  1372                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1373                           ;stkvar	SRAMalloc@segLen @ sp[(-6)+5]
  1374  000BC4  50E1               	movf	fsr1l,w,c
  1375  000BC6  0FFF               	addlw	-1
  1376  000BC8  6ED9               	movwf	fsr2l,c
  1377  000BCA  50E2               	movf	fsr1h,w,c
  1378  000BCC  6EDA               	movwf	fsr2h,c
  1379  000BCE  0EFF               	movlw	255
  1380  000BD0  22DA               	addwfc	fsr2h,f,c
  1381  000BD2  0EF9               	movlw	-7
  1382  000BD4  50E3               	movf	plusw1,w,c
  1383  000BD6  5CDE               	subwf	postinc2,w,c
  1384  000BD8  B0D8               	btfsc	status,0,c
  1385  000BDA  D020               	goto	l1918
  1386                           
  1387                           ;memory.c: 210: {
  1388                           ;memory.c: 212: if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  1389                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1390  000BDC  0EFA               	movlw	-6
  1391  000BDE  CFE3 FFE6          	movff	plusw1,postinc1
  1392  000BE2  CFE3 FFE6          	movff	plusw1,postinc1
  1393  000BE6  ECD4  F007         	call	__SRAMmerge	;wreg free
  1394  000BEA  505A               	movf	btemp,w,c
  1395  000BEC  A4D8               	btfss	status,2,c
  1396  000BEE  D7C3               	goto	l1900
  1397  000BF0                     u790:
  1398                           
  1399                           ;stkvar	SRAMalloc@segHeader @ sp[(-6)+4]
  1400  000BF0  50E1               	movf	fsr1l,w,c
  1401  000BF2  0FFE               	addlw	-2
  1402  000BF4  6ED9               	movwf	fsr2l,c
  1403  000BF6  50E2               	movf	fsr1h,w,c
  1404  000BF8  6EDA               	movwf	fsr2h,c
  1405  000BFA  0EFF               	movlw	255
  1406  000BFC  22DA               	addwfc	fsr2h,f,c
  1407  000BFE  50DF               	movf	223,w,c
  1408  000C00  0B7F               	andlw	127
  1409  000C02  0D01               	mullw	1
  1410                           
  1411                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1412  000C04  50E1               	movf	fsr1l,w,c
  1413  000C06  0FFA               	addlw	-6
  1414  000C08  6ED9               	movwf	fsr2l,c
  1415  000C0A  50E2               	movf	fsr1h,w,c
  1416  000C0C  6EDA               	movwf	fsr2h,c
  1417  000C0E  0EFF               	movlw	255
  1418  000C10  22DA               	addwfc	fsr2h,f,c
  1419  000C12  50F3               	movf	prodl,w,c
  1420  000C14  26DE               	addwf	postinc2,f,c
  1421  000C16  50F4               	movf	prodh,w,c
  1422  000C18  22DD               	addwfc	postdec2,f,c
  1423  000C1A  D7AD               	goto	l1900
  1424  000C1C                     l1918:
  1425                           
  1426                           ;memory.c: 214: else
  1427                           ;memory.c: 218: if (nBytes == segLen)
  1428                           ;stkvar	SRAMalloc@segLen @ sp[(-6)+5]
  1429                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1430  000C1C  50E1               	movf	fsr1l,w,c
  1431  000C1E  0FF9               	addlw	-7
  1432  000C20  6ED9               	movwf	fsr2l,c
  1433  000C22  50E2               	movf	fsr1h,w,c
  1434  000C24  6EDA               	movwf	fsr2h,c
  1435  000C26  0EFF               	movlw	255
  1436  000C28  22DA               	addwfc	fsr2h,f,c
  1437  000C2A  0EFF               	movlw	-1
  1438  000C2C  50E3               	movf	plusw1,w,c
  1439  000C2E  18DE               	xorwf	postinc2,w,c
  1440  000C30  A4D8               	btfss	status,2,c
  1441  000C32  D014               	goto	l1928
  1442                           
  1443                           ;memory.c: 219: {
  1444                           ;memory.c: 221: (*pHeap).bits.alloc = 1;
  1445                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1446  000C34  0EFA               	movlw	-6
  1447  000C36  CFE3 FFD9          	movff	plusw1,fsr2l
  1448  000C3A  0EFB               	movlw	-5
  1449  000C3C  CFE3 FFDA          	movff	plusw1,fsr2h
  1450  000C40  8EDF               	bsf	indf2,7,c
  1451                           
  1452                           ;memory.c: 224: return ((unsigned char *)(pHeap + 1));
  1453                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1454  000C42  0EFA               	movlw	-6
  1455  000C44  CFE3 F064          	movff	plusw1,btemp+10
  1456  000C48  0EFB               	movlw	-5
  1457  000C4A  CFE3 F065          	movff	plusw1,btemp+11
  1458  000C4E  0E01               	movlw	1
  1459  000C50  2464               	addwf	btemp+10,w,c
  1460  000C52  6E5A               	movwf	btemp,c
  1461  000C54  0E00               	movlw	0
  1462  000C56  2065               	addwfc	btemp+11,w,c
  1463  000C58                     L1:
  1464  000C58  6E5B               	movwf	btemp+1,c
  1465  000C5A  D041               	goto	l337
  1466  000C5C                     l1928:
  1467                           
  1468                           ;memory.c: 228: else
  1469                           ;memory.c: 229: {
  1470                           ;memory.c: 231: (*pHeap).byte = nBytes + 0x81;
  1471                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1472  000C5C  0EFA               	movlw	-6
  1473  000C5E  CFE3 FFD9          	movff	plusw1,fsr2l
  1474  000C62  0EFB               	movlw	-5
  1475  000C64  CFE3 FFDA          	movff	plusw1,fsr2h
  1476                           
  1477                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1478  000C68  0EF9               	movlw	-7
  1479  000C6A  50E3               	movf	plusw1,w,c
  1480  000C6C  0F81               	addlw	129
  1481  000C6E  6EDF               	movwf	indf2,c
  1482                           
  1483                           ;memory.c: 234: temp = pHeap + 1;
  1484                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1485  000C70  0EFA               	movlw	-6
  1486  000C72  50E3               	movf	plusw1,w,c
  1487  000C74  0F01               	addlw	1
  1488  000C76  6E5B               	movwf	btemp+1,c
  1489  000C78  0EFB               	movlw	-5
  1490  000C7A  CFE3 F05C          	movff	plusw1,btemp+2
  1491  000C7E  0E00               	movlw	0
  1492  000C80  225C               	addwfc	btemp+2,f,c
  1493                           
  1494                           ;stkvar	SRAMalloc@temp @ sp[(-6)+2]
  1495  000C82  0EFD               	movlw	-3
  1496  000C84  C05C  FFE3         	movff	btemp+2,plusw1
  1497  000C88  0EFC               	movlw	-4
  1498  000C8A  C05B  FFE3         	movff	btemp+1,plusw1
  1499                           
  1500                           ;memory.c: 237: pHeap += (nBytes + 1);
  1501                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1502  000C8E  0EF9               	movlw	-7
  1503  000C90  50E3               	movf	plusw1,w,c
  1504  000C92  6E5B               	movwf	btemp+1,c
  1505  000C94  6A5C               	clrf	btemp+2,c
  1506  000C96  0E01               	movlw	1
  1507  000C98  265B               	addwf	btemp+1,f,c
  1508  000C9A  0E00               	movlw	0
  1509  000C9C  225C               	addwfc	btemp+2,f,c
  1510                           
  1511                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1512  000C9E  50E1               	movf	fsr1l,w,c
  1513  000CA0  0FFA               	addlw	-6
  1514  000CA2  6ED9               	movwf	fsr2l,c
  1515  000CA4  50E2               	movf	fsr1h,w,c
  1516  000CA6  6EDA               	movwf	fsr2h,c
  1517  000CA8  0EFF               	movlw	255
  1518  000CAA  22DA               	addwfc	fsr2h,f,c
  1519  000CAC  505B               	movf	btemp+1,w,c
  1520  000CAE  26DE               	addwf	postinc2,f,c
  1521  000CB0  505C               	movf	btemp+2,w,c
  1522  000CB2  22DD               	addwfc	postdec2,f,c
  1523                           
  1524                           ;memory.c: 240: (*pHeap).byte = segLen - nBytes;
  1525                           ;stkvar	SRAMalloc@pHeap @ sp[(-6)+0]
  1526  000CB4  0EFA               	movlw	-6
  1527  000CB6  CFE3 FFD9          	movff	plusw1,fsr2l
  1528  000CBA  0EFB               	movlw	-5
  1529  000CBC  CFE3 FFDA          	movff	plusw1,fsr2h
  1530                           
  1531                           ;stkvar	SRAMalloc@nBytes @ sp[(-6)+-1]
  1532  000CC0  0EF9               	movlw	-7
  1533  000CC2  CFE3 F065          	movff	plusw1,btemp+11
  1534                           
  1535                           ;stkvar	SRAMalloc@segLen @ sp[(-6)+5]
  1536  000CC6  0EFF               	movlw	-1
  1537  000CC8  CFE3 F064          	movff	plusw1,btemp+10
  1538  000CCC  5065               	movf	btemp+11,w,c
  1539  000CCE  5C64               	subwf	btemp+10,w,c
  1540  000CD0  6EDF               	movwf	indf2,c
  1541                           
  1542                           ;memory.c: 243: return ((unsigned char *) temp);
  1543                           ;stkvar	SRAMalloc@temp @ sp[(-6)+2]
  1544  000CD2  0EFC               	movlw	-4
  1545  000CD4  CFE3 F05A          	movff	plusw1,btemp
  1546  000CD8  0EFD               	movlw	-3
  1547  000CDA  CFE3 F05B          	movff	plusw1,btemp+1
  1548  000CDE                     l337:
  1549                           
  1550                           ; _SRAMalloc: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  1551  000CDE  0EF9               	movlw	249
  1552  000CE0  26E1               	addwf	fsr1l,f,c
  1553  000CE2  0EFF               	movlw	255
  1554  000CE4  22E2               	addwfc	fsr1h,f,c
  1555  000CE6  0012               	return		;funcret
  1556  000CE8                     __end_of_SRAMalloc:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           prodh	equ	0xFF4
  1563                           prodl	equ	0xFF3
  1564                           intcon	equ	0xFF2
  1565                           postinc0	equ	0xFEE
  1566                           plusw0	equ	0xFEB
  1567                           fsr0h	equ	0xFEA
  1568                           fsr0l	equ	0xFE9
  1569                           wreg	equ	0xFE8
  1570                           postinc1	equ	0xFE6
  1571                           plusw1	equ	0xFE3
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           indf2	equ	0xFDF
  1575                           postinc2	equ	0xFDE
  1576                           postdec2	equ	0xFDD
  1577                           plusw2	equ	0xFDB
  1578                           fsr2h	equ	0xFDA
  1579                           fsr2l	equ	0xFD9
  1580                           status	equ	0xFD8
  1581                           
  1582 ;; *************** function __SRAMmerge *****************
  1583 ;; Defined at:
  1584 ;;		line 349 in file "memory.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  pSegA           2  [STACK] near PTR struct _SALLOC
  1587 ;;		 -> _uDynamicHeap(512), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  pSegB           2  [STACK] near PTR struct _SALLOC
  1590 ;;		 -> _uDynamicHeap(512), 
  1591 ;;  uSegB           1  [STACK] struct _SALLOC
  1592 ;;  uSegA           1  [STACK] struct _SALLOC
  1593 ;;  uSum            1  [STACK] struct _SALLOC
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1  [STACK] unsigned char 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       0       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:   11
  1610 ;; This function calls:
  1611 ;;		Nothing
  1612 ;; This function is called by:
  1613 ;;		_SRAMalloc
  1614 ;; This function uses a reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text8
  1618  000FA8                     __ptext8:
  1619                           	opt stack 0
  1620  000FA8                     __SRAMmerge:
  1621                           	opt stack 0
  1622                           
  1623                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1624  000FA8  0E05               	movlw	5
  1625  000FAA  26E1               	addwf	fsr1l,f,c
  1626  000FAC  0E00               	movlw	0
  1627  000FAE  22E2               	addwfc	fsr1h,f,c
  1628                           
  1629                           ;memory.c: 351: SALLOC * near pSegB;
  1630                           ;memory.c: 352: near SALLOC uSegA, uSegB, uSum;
  1631                           ;memory.c: 356: pSegB = pSegA + (*pSegA).byte;
  1632                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1633                           
  1634                           ;incstack = 0
  1635  000FB0  0EF9               	movlw	-7
  1636  000FB2  CFE3 FFD9          	movff	plusw1,fsr2l
  1637  000FB6  0EFA               	movlw	-6
  1638  000FB8  CFE3 FFDA          	movff	plusw1,fsr2h
  1639  000FBC  50DF               	movf	indf2,w,c
  1640  000FBE  6E5B               	movwf	btemp+1,c
  1641  000FC0  6A5C               	clrf	btemp+2,c
  1642                           
  1643                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1644  000FC2  0EF9               	movlw	-7
  1645  000FC4  50E3               	movf	plusw1,w,c
  1646  000FC6  265B               	addwf	btemp+1,f,c
  1647  000FC8  0EFA               	movlw	-6
  1648  000FCA  50E3               	movf	plusw1,w,c
  1649  000FCC  225C               	addwfc	btemp+2,f,c
  1650                           
  1651                           ;stkvar	__SRAMmerge@pSegB @ sp[(-5)+0]
  1652  000FCE  0EFC               	movlw	-4
  1653  000FD0  C05C  FFE3         	movff	btemp+2,plusw1
  1654  000FD4  0EFB               	movlw	-5
  1655  000FD6  C05B  FFE3         	movff	btemp+1,plusw1
  1656                           
  1657                           ;memory.c: 359: uSegA = *pSegA;
  1658                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1659  000FDA  0EF9               	movlw	-7
  1660  000FDC  CFE3 FFD9          	movff	plusw1,fsr2l
  1661  000FE0  0EFA               	movlw	-6
  1662  000FE2  CFE3 FFDA          	movff	plusw1,fsr2h
  1663  000FE6  50DF               	movf	indf2,w,c
  1664  000FE8  6E65               	movwf	btemp+11,c
  1665                           
  1666                           ;stkvar	__SRAMmerge@uSegA @ sp[(-5)+3]
  1667  000FEA  0EFE               	movlw	-2
  1668  000FEC  C065  FFE3         	movff	btemp+11,plusw1
  1669                           
  1670                           ;memory.c: 360: uSegB = *pSegB;
  1671                           ;stkvar	__SRAMmerge@pSegB @ sp[(-5)+0]
  1672  000FF0  0EFB               	movlw	-5
  1673  000FF2  CFE3 FFD9          	movff	plusw1,fsr2l
  1674  000FF6  0EFC               	movlw	-4
  1675  000FF8  CFE3 FFDA          	movff	plusw1,fsr2h
  1676  000FFC  50DF               	movf	indf2,w,c
  1677  000FFE  6E65               	movwf	btemp+11,c
  1678                           
  1679                           ;stkvar	__SRAMmerge@uSegB @ sp[(-5)+2]
  1680  001000  0EFD               	movlw	-3
  1681  001002  C065  FFE3         	movff	btemp+11,plusw1
  1682                           
  1683                           ;memory.c: 363: if (uSegB.byte == 0) return (0);
  1684                           ;stkvar	__SRAMmerge@uSegB @ sp[(-5)+2]
  1685  001006  0EFD               	movlw	-3
  1686  001008  50E3               	movf	plusw1,w,c
  1687  00100A  A4D8               	btfss	status,2,c
  1688  00100C  D002               	goto	l1782
  1689  00100E                     u600:
  1690  00100E  0E00               	movlw	0
  1691  001010  D06E               	goto	L2
  1692  001012                     l1782:
  1693                           
  1694                           ;memory.c: 366: if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1695                           ;stkvar	__SRAMmerge@uSegA @ sp[(-5)+3]
  1696  001012  50E1               	movf	fsr1l,w,c
  1697  001014  0FFE               	addlw	-2
  1698  001016  6ED9               	movwf	fsr2l,c
  1699  001018  50E2               	movf	fsr1h,w,c
  1700  00101A  6EDA               	movwf	fsr2h,c
  1701  00101C  0EFF               	movlw	255
  1702  00101E  22DA               	addwfc	fsr2h,f,c
  1703  001020  BEDF               	btfsc	indf2,7,c
  1704  001022  D7F5               	goto	u600
  1705                           
  1706                           ;stkvar	__SRAMmerge@uSegB @ sp[(-5)+2]
  1707  001024  50E1               	movf	fsr1l,w,c
  1708  001026  0FFD               	addlw	-3
  1709  001028  6ED9               	movwf	fsr2l,c
  1710  00102A  50E2               	movf	fsr1h,w,c
  1711  00102C  6EDA               	movwf	fsr2h,c
  1712  00102E  0EFF               	movlw	255
  1713  001030  22DA               	addwfc	fsr2h,f,c
  1714  001032  BEDF               	btfsc	indf2,7,c
  1715  001034  D7EC               	goto	u600
  1716                           
  1717                           ;memory.c: 369: if (uSegA.bits.count == 0x7F) return (0);
  1718                           ;stkvar	__SRAMmerge@uSegA @ sp[(-5)+3]
  1719  001036  50E1               	movf	fsr1l,w,c
  1720  001038  0FFE               	addlw	-2
  1721  00103A  6ED9               	movwf	fsr2l,c
  1722  00103C  50E2               	movf	fsr1h,w,c
  1723  00103E  6EDA               	movwf	fsr2h,c
  1724  001040  0EFF               	movlw	255
  1725  001042  22DA               	addwfc	fsr2h,f,c
  1726  001044  50DF               	movf	223,w,c
  1727  001046  0B7F               	andlw	127
  1728  001048  0A7F               	xorlw	127
  1729  00104A  B4D8               	btfsc	status,2,c
  1730  00104C  D7E0               	goto	u600
  1731                           
  1732                           ;memory.c: 372: uSum.byte = uSegA.byte + uSegB.byte;
  1733                           ;stkvar	__SRAMmerge@uSegB @ sp[(-5)+2]
  1734  00104E  0EFD               	movlw	-3
  1735  001050  CFE3 F065          	movff	plusw1,btemp+11
  1736                           
  1737                           ;stkvar	__SRAMmerge@uSegA @ sp[(-5)+3]
  1738  001054  0EFE               	movlw	-2
  1739  001056  50E3               	movf	plusw1,w,c
  1740  001058  2465               	addwf	btemp+11,w,c
  1741  00105A  6E64               	movwf	btemp+10,c
  1742                           
  1743                           ;stkvar	__SRAMmerge@uSum @ sp[(-5)+4]
  1744  00105C  0EFF               	movlw	-1
  1745  00105E  C064  FFE3         	movff	btemp+10,plusw1
  1746                           
  1747                           ;memory.c: 378: if ((uSum.byte) > 0x7F)
  1748                           ;stkvar	__SRAMmerge@uSum @ sp[(-5)+4]
  1749  001062  0EFF               	movlw	-1
  1750  001064  CFE3 F05A          	movff	plusw1,btemp
  1751  001068  0E7F               	movlw	127
  1752  00106A  645A               	cpfsgt	btemp,c
  1753  00106C  D036               	goto	l1814
  1754                           
  1755                           ;memory.c: 379: {
  1756                           ;memory.c: 380: (*pSegA).byte = 0x7F;
  1757                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1758  00106E  0EF9               	movlw	-7
  1759  001070  CFE3 FFD9          	movff	plusw1,fsr2l
  1760  001074  0EFA               	movlw	-6
  1761  001076  CFE3 FFDA          	movff	plusw1,fsr2h
  1762  00107A  0E7F               	movlw	127
  1763  00107C  6EDF               	movwf	indf2,c
  1764                           
  1765                           ;memory.c: 381: pSegA += 0x7F;
  1766                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1767  00107E  0EF9               	movlw	-7
  1768  001080  50E3               	movf	plusw1,w,c
  1769  001082  0F7F               	addlw	127
  1770  001084  6E5A               	movwf	btemp,c
  1771  001086  0EF9               	movlw	-7
  1772  001088  C05A  FFE3         	movff	btemp,plusw1
  1773  00108C  6A5A               	clrf	btemp,c
  1774  00108E  0EFA               	movlw	-6
  1775  001090  50E3               	movf	plusw1,w,c
  1776  001092  205A               	addwfc	btemp,w,c
  1777  001094  6E5A               	movwf	btemp,c
  1778  001096  0EFA               	movlw	-6
  1779  001098  C05A  FFE3         	movff	btemp,plusw1
  1780                           
  1781                           ;memory.c: 382: pSegB += uSegB.byte;
  1782                           ;stkvar	__SRAMmerge@uSegB @ sp[(-5)+2]
  1783  00109C  0EFD               	movlw	-3
  1784  00109E  50E3               	movf	plusw1,w,c
  1785  0010A0  0D01               	mullw	1
  1786                           
  1787                           ;stkvar	__SRAMmerge@pSegB @ sp[(-5)+0]
  1788  0010A2  50E1               	movf	fsr1l,w,c
  1789  0010A4  0FFB               	addlw	-5
  1790  0010A6  6ED9               	movwf	fsr2l,c
  1791  0010A8  50E2               	movf	fsr1h,w,c
  1792  0010AA  6EDA               	movwf	fsr2h,c
  1793  0010AC  0EFF               	movlw	255
  1794  0010AE  22DA               	addwfc	fsr2h,f,c
  1795  0010B0  50F3               	movf	prodl,w,c
  1796  0010B2  26DE               	addwf	postinc2,f,c
  1797  0010B4  50F4               	movf	prodh,w,c
  1798  0010B6  22DD               	addwfc	postdec2,f,c
  1799                           
  1800                           ;memory.c: 383: (*pSegA).byte = pSegB - pSegA;
  1801                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1802  0010B8  0EF9               	movlw	-7
  1803  0010BA  CFE3 FFD9          	movff	plusw1,fsr2l
  1804  0010BE  0EFA               	movlw	-6
  1805  0010C0  CFE3 FFDA          	movff	plusw1,fsr2h
  1806                           
  1807                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1808  0010C4  0EF9               	movlw	-7
  1809  0010C6  CFE3 F065          	movff	plusw1,btemp+11
  1810                           
  1811                           ;stkvar	__SRAMmerge@pSegB @ sp[(-5)+0]
  1812  0010CA  0EFB               	movlw	-5
  1813  0010CC  CFE3 F064          	movff	plusw1,btemp+10
  1814  0010D0  5065               	movf	btemp+11,w,c
  1815  0010D2  5C64               	subwf	btemp+10,w,c
  1816  0010D4  6EDF               	movwf	indf2,c
  1817                           
  1818                           ;memory.c: 385: return (0x7F);
  1819  0010D6  0E7F               	movlw	127
  1820  0010D8  D00A               	goto	L2
  1821  0010DA                     l1814:
  1822                           
  1823                           ;memory.c: 389: else
  1824                           ;memory.c: 390: {
  1825                           ;memory.c: 391: return ((*pSegA).byte = uSum.byte);
  1826                           ;stkvar	__SRAMmerge@uSum @ sp[(-5)+4]
  1827                           ;stkvar	__SRAMmerge@pSegA @ sp[(-5)+-2]
  1828  0010DA  0EF9               	movlw	-7
  1829  0010DC  CFE3 FFD9          	movff	plusw1,fsr2l
  1830  0010E0  0EFA               	movlw	-6
  1831  0010E2  CFE3 FFDA          	movff	plusw1,fsr2h
  1832  0010E6  0EFF               	movlw	-1
  1833  0010E8  CFE3 FFDF          	movff	plusw1,indf2
  1834  0010EC  50DF               	movf	indf2,w,c
  1835  0010EE                     L2:
  1836  0010EE  6E5A               	movwf	btemp,c
  1837                           
  1838                           ; __SRAMmerge: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, ar
      +                          gsize = 2, vargsize = 0
  1839  0010F0  0EF9               	movlw	249
  1840  0010F2  26E1               	addwf	fsr1l,f,c
  1841  0010F4  0EFF               	movlw	255
  1842  0010F6  22E2               	addwfc	fsr1h,f,c
  1843  0010F8  0012               	return		;funcret
  1844  0010FA                     __end_of__SRAMmerge:
  1845                           	opt stack 0
  1846                           tblptru	equ	0xFF8
  1847                           tblptrh	equ	0xFF7
  1848                           tblptrl	equ	0xFF6
  1849                           tablat	equ	0xFF5
  1850                           prodh	equ	0xFF4
  1851                           prodl	equ	0xFF3
  1852                           intcon	equ	0xFF2
  1853                           postinc0	equ	0xFEE
  1854                           plusw0	equ	0xFEB
  1855                           fsr0h	equ	0xFEA
  1856                           fsr0l	equ	0xFE9
  1857                           wreg	equ	0xFE8
  1858                           postinc1	equ	0xFE6
  1859                           plusw1	equ	0xFE3
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           indf2	equ	0xFDF
  1863                           postinc2	equ	0xFDE
  1864                           postdec2	equ	0xFDD
  1865                           plusw2	equ	0xFDB
  1866                           fsr2h	equ	0xFDA
  1867                           fsr2l	equ	0xFD9
  1868                           status	equ	0xFD8
  1869                           
  1870 ;; *************** function _confi_port *****************
  1871 ;; Defined at:
  1872 ;;		line 66 in file "tasks.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1886 ;;      Params:         0       0       0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:   11
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text9
  1901  001DA8                     __ptext9:
  1902                           	opt stack 0
  1903  001DA8                     _confi_port:
  1904                           	opt stack 19
  1905                           
  1906                           ;tasks.c: 68: TRISD = 0x00;
  1907                           
  1908                           ;incstack = 0
  1909  001DA8  0E00               	movlw	0
  1910  001DAA  6E95               	movwf	3989,c	;volatile
  1911  001DAC  0012               	return		;funcret
  1912  001DAE                     __end_of_confi_port:
  1913                           	opt stack 0
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           prodh	equ	0xFF4
  1919                           prodl	equ	0xFF3
  1920                           intcon	equ	0xFF2
  1921                           postinc0	equ	0xFEE
  1922                           plusw0	equ	0xFEB
  1923                           fsr0h	equ	0xFEA
  1924                           fsr0l	equ	0xFE9
  1925                           wreg	equ	0xFE8
  1926                           postinc1	equ	0xFE6
  1927                           plusw1	equ	0xFE3
  1928                           fsr1h	equ	0xFE2
  1929                           fsr1l	equ	0xFE1
  1930                           indf2	equ	0xFDF
  1931                           postinc2	equ	0xFDE
  1932                           postdec2	equ	0xFDD
  1933                           plusw2	equ	0xFDB
  1934                           fsr2h	equ	0xFDA
  1935                           fsr2l	equ	0xFD9
  1936                           status	equ	0xFD8
  1937                           
  1938 ;; *************** function _led_1 *****************
  1939 ;; Defined at:
  1940 ;;		line 287 in file "tasks.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1  [STACK] void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1954 ;;      Params:         0       0       0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0
  1957 ;;      Totals:         0       0       0       0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:   10
  1961 ;; This function calls:
  1962 ;;		_delay
  1963 ;;		_sem_post
  1964 ;;		_sem_wait
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text10
  1971  001A3A                     __ptext10:
  1972                           	opt stack 0
  1973  001A3A                     _led_1:
  1974                           	opt stack 17
  1975                           
  1976                           ;tasks.c: 290: PORTDbits.RD3 = 0;
  1977                           
  1978                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1979                           ;incstack = 0
  1980  001A3A  9683               	bcf	3971,3,c	;volatile
  1981                           
  1982                           ;tasks.c: 291: PORTDbits.RD6 = 0;
  1983  001A3C  9C83               	bcf	3971,6,c	;volatile
  1984                           
  1985                           ;tasks.c: 292: PORTDbits.RD4 = 0;
  1986  001A3E  9883               	bcf	3971,4,c	;volatile
  1987                           
  1988                           ;tasks.c: 293: PORTDbits.RD0 = 0;
  1989  001A40  9083               	bcf	3971,0,c	;volatile
  1990  001A42                     l207:
  1991                           
  1992                           ;tasks.c: 297: PORTDbits.RD3 = 1;
  1993  001A42  8683               	bsf	3971,3,c	;volatile
  1994                           
  1995                           ;tasks.c: 299: delay(5000);
  1996  001A44  0E88               	movlw	136
  1997  001A46  6EE6               	movwf	postinc1,c
  1998  001A48  0E13               	movlw	19
  1999  001A4A  6EE6               	movwf	postinc1,c
  2000  001A4C  EC93  F00E         	call	_delay	;wreg free
  2001                           
  2002                           ;tasks.c: 301: sem_wait(&spista);
  2003  001A50  0E3B               	movlw	low _spista
  2004  001A52  6EE6               	movwf	postinc1,c
  2005  001A54  0E00               	movlw	high _spista
  2006  001A56  6EE6               	movwf	postinc1,c
  2007  001A58  ECB8  F009         	call	_sem_wait	;wreg free
  2008                           
  2009                           ;tasks.c: 303: PORTDbits.RD3 = 0;
  2010  001A5C  9683               	bcf	3971,3,c	;volatile
  2011                           
  2012                           ;tasks.c: 305: PORTDbits.RD6 = 1;
  2013  001A5E  8C83               	bsf	3971,6,c	;volatile
  2014                           
  2015                           ;tasks.c: 307: delay(5000);
  2016  001A60  0E88               	movlw	136
  2017  001A62  6EE6               	movwf	postinc1,c
  2018  001A64  0E13               	movlw	19
  2019  001A66  6EE6               	movwf	postinc1,c
  2020  001A68  EC93  F00E         	call	_delay	;wreg free
  2021                           
  2022                           ;tasks.c: 310: PORTDbits.RD6 = 0;
  2023  001A6C  9C83               	bcf	3971,6,c	;volatile
  2024                           
  2025                           ;tasks.c: 313: sem_post(&spista);
  2026  001A6E  0E3B               	movlw	low _spista
  2027  001A70  6EE6               	movwf	postinc1,c
  2028  001A72  0E00               	movlw	high _spista
  2029  001A74  6EE6               	movwf	postinc1,c
  2030  001A76  EC2A  F007         	call	_sem_post	;wreg free
  2031                           
  2032                           ;tasks.c: 314: delay(300);
  2033  001A7A  0E2C               	movlw	44
  2034  001A7C  6EE6               	movwf	postinc1,c
  2035  001A7E  0E01               	movlw	1
  2036  001A80  6EE6               	movwf	postinc1,c
  2037  001A82  EC93  F00E         	call	_delay	;wreg free
  2038                           
  2039                           ;tasks.c: 317: PORTDbits.RD0 = 1;
  2040  001A86  8083               	bsf	3971,0,c	;volatile
  2041                           
  2042                           ;tasks.c: 319: delay(5000);
  2043  001A88  0E88               	movlw	136
  2044  001A8A  6EE6               	movwf	postinc1,c
  2045  001A8C  0E13               	movlw	19
  2046  001A8E  6EE6               	movwf	postinc1,c
  2047  001A90  EC93  F00E         	call	_delay	;wreg free
  2048                           
  2049                           ;tasks.c: 323: sem_wait(&spista);
  2050  001A94  0E3B               	movlw	low _spista
  2051  001A96  6EE6               	movwf	postinc1,c
  2052  001A98  0E00               	movlw	high _spista
  2053  001A9A  6EE6               	movwf	postinc1,c
  2054  001A9C  ECB8  F009         	call	_sem_wait	;wreg free
  2055                           
  2056                           ;tasks.c: 325: PORTDbits.RD0 = 0;
  2057  001AA0  9083               	bcf	3971,0,c	;volatile
  2058                           
  2059                           ;tasks.c: 328: PORTDbits.RD4 = 1;
  2060  001AA2  8883               	bsf	3971,4,c	;volatile
  2061                           
  2062                           ;tasks.c: 330: delay(5000);
  2063  001AA4  0E88               	movlw	136
  2064  001AA6  6EE6               	movwf	postinc1,c
  2065  001AA8  0E13               	movlw	19
  2066  001AAA  6EE6               	movwf	postinc1,c
  2067  001AAC  EC93  F00E         	call	_delay	;wreg free
  2068                           
  2069                           ;tasks.c: 332: PORTDbits.RD4 = 0;
  2070  001AB0  9883               	bcf	3971,4,c	;volatile
  2071                           
  2072                           ;tasks.c: 334: sem_post(&spista);
  2073  001AB2  0E3B               	movlw	low _spista
  2074  001AB4  6EE6               	movwf	postinc1,c
  2075  001AB6  0E00               	movlw	high _spista
  2076  001AB8  6EE6               	movwf	postinc1,c
  2077  001ABA  EC2A  F007         	call	_sem_post	;wreg free
  2078                           
  2079                           ;tasks.c: 335: delay(400);
  2080  001ABE  0E90               	movlw	144
  2081  001AC0  6EE6               	movwf	postinc1,c
  2082  001AC2  0E01               	movlw	1
  2083  001AC4  6EE6               	movwf	postinc1,c
  2084  001AC6  EC93  F00E         	call	_delay	;wreg free
  2085  001ACA  D7BB               	goto	l207
  2086  001ACC                     __end_of_led_1:
  2087                           	opt stack 0
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           prodh	equ	0xFF4
  2093                           prodl	equ	0xFF3
  2094                           intcon	equ	0xFF2
  2095                           postinc0	equ	0xFEE
  2096                           plusw0	equ	0xFEB
  2097                           fsr0h	equ	0xFEA
  2098                           fsr0l	equ	0xFE9
  2099                           wreg	equ	0xFE8
  2100                           postinc1	equ	0xFE6
  2101                           plusw1	equ	0xFE3
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           indf2	equ	0xFDF
  2105                           postinc2	equ	0xFDE
  2106                           postdec2	equ	0xFDD
  2107                           plusw2	equ	0xFDB
  2108                           fsr2h	equ	0xFDA
  2109                           fsr2l	equ	0xFD9
  2110                           status	equ	0xFD8
  2111                           
  2112 ;; *************** function _sem_wait *****************
  2113 ;; Defined at:
  2114 ;;		line 20 in file "semaphore.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  s               2  [STACK] PTR struct sem
  2117 ;;		 -> spista(8), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  pos             2  [STACK] unsigned int 
  2120 ;;  task_pos        2    0        unsigned int 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1  [STACK] void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2130 ;;      Params:         0       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    9
  2137 ;; This function calls:
  2138 ;;		___lwmod
  2139 ;;		_dispatcher
  2140 ;; This function is called by:
  2141 ;;		_led_1
  2142 ;;		_led_2
  2143 ;;		_led_3
  2144 ;; This function uses a reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text11
  2148  001370                     __ptext11:
  2149                           	opt stack 0
  2150  001370                     _sem_wait:
  2151                           	opt stack 0
  2152                           
  2153                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  2154  001370  52E6               	movf	postinc1,f,c
  2155  001372  52E6               	movf	postinc1,f,c
  2156                           
  2157                           ;semaphore.c: 23: u_int task_pos = 0;
  2158                           
  2159                           ;incstack = 0
  2160  001374  9EF2               	bcf	intcon,7,c	;volatile
  2161                           
  2162                           ;semaphore.c: 25: s->contador--;
  2163                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2164  001376  0EFC               	movlw	-4
  2165  001378  CFE3 FFD9          	movff	plusw1,fsr2l
  2166  00137C  0EFD               	movlw	-3
  2167  00137E  CFE3 FFDA          	movff	plusw1,fsr2h
  2168  001382  06DE               	decf	postinc2,f,c
  2169  001384  0E00               	movlw	0
  2170  001386  5ADD               	subwfb	postdec2,f,c
  2171                           
  2172                           ;semaphore.c: 26: if (s->contador < 0) {
  2173                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2174  001388  0EFC               	movlw	-4
  2175  00138A  CFE3 FFD9          	movff	plusw1,fsr2l
  2176  00138E  0EFD               	movlw	-3
  2177  001390  CFE3 FFDA          	movff	plusw1,fsr2h
  2178  001394  0E01               	movlw	1
  2179  001396  AEDB               	btfss	plusw2,7,c
  2180  001398  D06C               	goto	l2522
  2181                           
  2182                           ;semaphore.c: 27: u_int pos = (s->queue.size + s->queue.first) % 10;
  2183  00139A  0E0A               	movlw	10
  2184  00139C  6EE6               	movwf	postinc1,c
  2185  00139E  0E00               	movlw	0
  2186  0013A0  6EE6               	movwf	postinc1,c
  2187                           
  2188                           ;stkvar	sem_wait@s @ sp[(-4)+-2]
  2189  0013A2  0EFA               	movlw	-6
  2190  0013A4  CFE3 F05B          	movff	plusw1,btemp+1
  2191  0013A8  0EFB               	movlw	-5
  2192  0013AA  CFE3 F05C          	movff	plusw1,btemp+2
  2193  0013AE  0E06               	movlw	6
  2194  0013B0  245B               	addwf	btemp+1,w,c
  2195  0013B2  6ED9               	movwf	fsr2l,c
  2196  0013B4  0E00               	movlw	0
  2197  0013B6  205C               	addwfc	btemp+2,w,c
  2198  0013B8  6EDA               	movwf	fsr2h,c
  2199  0013BA  CFDE F05B          	movff	postinc2,btemp+1
  2200  0013BE  CFDD F05C          	movff	postdec2,btemp+2
  2201                           
  2202                           ;stkvar	sem_wait@s @ sp[(-4)+-2]
  2203  0013C2  0EFA               	movlw	-6
  2204  0013C4  CFE3 F064          	movff	plusw1,btemp+10
  2205  0013C8  0EFB               	movlw	-5
  2206  0013CA  CFE3 F065          	movff	plusw1,btemp+11
  2207  0013CE  0E04               	movlw	4
  2208  0013D0  2464               	addwf	btemp+10,w,c
  2209  0013D2  6ED9               	movwf	fsr2l,c
  2210  0013D4  0E00               	movlw	0
  2211  0013D6  2065               	addwfc	btemp+11,w,c
  2212  0013D8  6EDA               	movwf	fsr2h,c
  2213  0013DA  CFDE F064          	movff	postinc2,btemp+10
  2214  0013DE  CFDD F065          	movff	postdec2,btemp+11
  2215  0013E2  505B               	movf	btemp+1,w,c
  2216  0013E4  2664               	addwf	btemp+10,f,c
  2217  0013E6  505C               	movf	btemp+2,w,c
  2218  0013E8  2265               	addwfc	btemp+11,f,c
  2219  0013EA  C064  FFE6         	movff	btemp+10,postinc1
  2220  0013EE  C065  FFE6         	movff	btemp+11,postinc1
  2221  0013F2  EC22  F00B         	call	___lwmod	;wreg free
  2222                           
  2223                           ;stkvar	sem_wait@pos @ sp[(-2)+0]
  2224  0013F6  0EFE               	movlw	-2
  2225  0013F8  C05A  FFE3         	movff	btemp,plusw1
  2226  0013FC  0EFF               	movlw	-1
  2227  0013FE  C05B  FFE3         	movff	btemp+1,plusw1
  2228                           
  2229                           ;semaphore.c: 28: s->queue.task[pos] = task_running;
  2230                           ;stkvar	sem_wait@pos @ sp[(-2)+0]
  2231  001402  0EFE               	movlw	-2
  2232  001404  CFE3 F064          	movff	plusw1,btemp+10
  2233  001408  0EFF               	movlw	-1
  2234  00140A  CFE3 F065          	movff	plusw1,btemp+11
  2235  00140E  90D8               	bcf	status,0,c
  2236  001410  3464               	rlcf	btemp+10,w,c
  2237  001412  6E5B               	movwf	btemp+1,c
  2238  001414  3465               	rlcf	btemp+11,w,c
  2239  001416  6E5C               	movwf	btemp+2,c
  2240                           
  2241                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2242  001418  0EFC               	movlw	-4
  2243  00141A  CFE3 F064          	movff	plusw1,btemp+10
  2244  00141E  0EFD               	movlw	-3
  2245  001420  CFE3 F065          	movff	plusw1,btemp+11
  2246  001424  0E02               	movlw	2
  2247  001426  2464               	addwf	btemp+10,w,c
  2248  001428  6ED9               	movwf	fsr2l,c
  2249  00142A  0E00               	movlw	0
  2250  00142C  2065               	addwfc	btemp+11,w,c
  2251  00142E  6EDA               	movwf	fsr2h,c
  2252  001430  CFDE F064          	movff	postinc2,btemp+10
  2253  001434  CFDD F065          	movff	postdec2,btemp+11
  2254  001438  505B               	movf	btemp+1,w,c
  2255  00143A  2464               	addwf	btemp+10,w,c
  2256  00143C  6ED9               	movwf	fsr2l,c
  2257  00143E  505C               	movf	btemp+2,w,c
  2258  001440  2065               	addwfc	btemp+11,w,c
  2259  001442  6EDA               	movwf	fsr2h,c
  2260  001444  C017  FFDE         	movff	_task_running,postinc2
  2261  001448  C018  FFDD         	movff	_task_running+1,postdec2
  2262                           
  2263                           ;semaphore.c: 29: s->queue.size++;
  2264                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  2265  00144C  0EFC               	movlw	-4
  2266  00144E  CFE3 F05B          	movff	plusw1,btemp+1
  2267  001452  0EFD               	movlw	-3
  2268  001454  CFE3 F05C          	movff	plusw1,btemp+2
  2269  001458  0E04               	movlw	4
  2270  00145A  245B               	addwf	btemp+1,w,c
  2271  00145C  6ED9               	movwf	fsr2l,c
  2272  00145E  0E00               	movlw	0
  2273  001460  205C               	addwfc	btemp+2,w,c
  2274  001462  6EDA               	movwf	fsr2h,c
  2275  001464  2ADE               	incf	postinc2,f,c
  2276  001466  0E00               	movlw	0
  2277  001468  22DD               	addwfc	postdec2,f,c
  2278                           
  2279                           ;semaphore.c: 32: dispatcher(WAITING);
  2280  00146A  0E04               	movlw	4
  2281  00146C  6EE6               	movwf	postinc1,c
  2282  00146E  EC03  F003         	call	_dispatcher	;wreg free
  2283  001472                     l2522:
  2284                           
  2285                           ;semaphore.c: 33: }
  2286                           ;semaphore.c: 35: INTCONbits.GIE = 1;
  2287  001472  8EF2               	bsf	intcon,7,c	;volatile
  2288                           
  2289                           ; _sem_wait: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2290  001474  52E5               	movf	postdec1,f,c
  2291  001476  52E5               	movf	postdec1,f,c
  2292  001478  52E5               	movf	postdec1,f,c
  2293  00147A  52E5               	movf	postdec1,f,c
  2294  00147C  0012               	return		;funcret
  2295  00147E                     __end_of_sem_wait:
  2296                           	opt stack 0
  2297                           tblptru	equ	0xFF8
  2298                           tblptrh	equ	0xFF7
  2299                           tblptrl	equ	0xFF6
  2300                           tablat	equ	0xFF5
  2301                           prodh	equ	0xFF4
  2302                           prodl	equ	0xFF3
  2303                           intcon	equ	0xFF2
  2304                           postinc0	equ	0xFEE
  2305                           plusw0	equ	0xFEB
  2306                           fsr0h	equ	0xFEA
  2307                           fsr0l	equ	0xFE9
  2308                           wreg	equ	0xFE8
  2309                           postinc1	equ	0xFE6
  2310                           postdec1	equ	0xFE5
  2311                           plusw1	equ	0xFE3
  2312                           fsr1h	equ	0xFE2
  2313                           fsr1l	equ	0xFE1
  2314                           indf2	equ	0xFDF
  2315                           postinc2	equ	0xFDE
  2316                           postdec2	equ	0xFDD
  2317                           plusw2	equ	0xFDB
  2318                           fsr2h	equ	0xFDA
  2319                           fsr2l	equ	0xFD9
  2320                           status	equ	0xFD8
  2321                           
  2322 ;; *************** function _sem_post *****************
  2323 ;; Defined at:
  2324 ;;		line 38 in file "semaphore.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  s               2  [STACK] PTR struct sem
  2327 ;;		 -> spista(8), 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  value           2  [STACK] unsigned int 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1  [STACK] void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         0       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    9
  2346 ;; This function calls:
  2347 ;;		___lwmod
  2348 ;;		___wmul
  2349 ;;		_dispatcher
  2350 ;; This function is called by:
  2351 ;;		_led_1
  2352 ;;		_led_2
  2353 ;;		_led_3
  2354 ;; This function uses a reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text12
  2358  000E54                     __ptext12:
  2359                           	opt stack 0
  2360  000E54                     _sem_post:
  2361                           	opt stack 0
  2362                           
  2363                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  2364  000E54  52E6               	movf	postinc1,f,c
  2365  000E56  52E6               	movf	postinc1,f,c
  2366                           
  2367                           ;semaphore.c: 40: INTCONbits.GIE = 0;
  2368                           
  2369                           ;incstack = 0
  2370  000E58  9EF2               	bcf	intcon,7,c	;volatile
  2371                           
  2372                           ;semaphore.c: 42: s->contador++;
  2373                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2374  000E5A  0EFC               	movlw	-4
  2375  000E5C  CFE3 FFD9          	movff	plusw1,fsr2l
  2376  000E60  0EFD               	movlw	-3
  2377  000E62  CFE3 FFDA          	movff	plusw1,fsr2h
  2378  000E66  2ADE               	incf	postinc2,f,c
  2379  000E68  0E00               	movlw	0
  2380  000E6A  22DD               	addwfc	postdec2,f,c
  2381                           
  2382                           ;semaphore.c: 43: if (s->contador <= 0) {
  2383                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2384  000E6C  0EFC               	movlw	-4
  2385  000E6E  CFE3 FFD9          	movff	plusw1,fsr2l
  2386  000E72  0EFD               	movlw	-3
  2387  000E74  CFE3 FFDA          	movff	plusw1,fsr2h
  2388  000E78  0E01               	movlw	1
  2389  000E7A  BEDB               	btfsc	plusw2,7,c
  2390  000E7C  D006               	goto	u122_20
  2391  000E7E  0E01               	movlw	1
  2392  000E80  50DB               	movf	plusw2,w,c
  2393  000E82  E102               	bnz	u122_21
  2394  000E84  04DE               	decf	postinc2,w,c
  2395  000E86  B0D8               	btfsc	status,0,c
  2396  000E88                     u122_21:
  2397  000E88  D089               	goto	l2540
  2398  000E8A                     u122_20:
  2399                           
  2400                           ;semaphore.c: 44: u_int value = s->queue.task[s->queue.first];
  2401                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2402  000E8A  0EFC               	movlw	-4
  2403  000E8C  CFE3 F05B          	movff	plusw1,btemp+1
  2404  000E90  0EFD               	movlw	-3
  2405  000E92  CFE3 F05C          	movff	plusw1,btemp+2
  2406  000E96  0E06               	movlw	6
  2407  000E98  245B               	addwf	btemp+1,w,c
  2408  000E9A  6ED9               	movwf	fsr2l,c
  2409  000E9C  0E00               	movlw	0
  2410  000E9E  205C               	addwfc	btemp+2,w,c
  2411  000EA0  6EDA               	movwf	fsr2h,c
  2412  000EA2  CFDE F064          	movff	postinc2,btemp+10
  2413  000EA6  CFDD F065          	movff	postdec2,btemp+11
  2414  000EAA  90D8               	bcf	status,0,c
  2415  000EAC  3464               	rlcf	btemp+10,w,c
  2416  000EAE  6E5B               	movwf	btemp+1,c
  2417  000EB0  3465               	rlcf	btemp+11,w,c
  2418  000EB2  6E5C               	movwf	btemp+2,c
  2419                           
  2420                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2421  000EB4  0EFC               	movlw	-4
  2422  000EB6  CFE3 F064          	movff	plusw1,btemp+10
  2423  000EBA  0EFD               	movlw	-3
  2424  000EBC  CFE3 F065          	movff	plusw1,btemp+11
  2425  000EC0  0E02               	movlw	2
  2426  000EC2  2464               	addwf	btemp+10,w,c
  2427  000EC4  6ED9               	movwf	fsr2l,c
  2428  000EC6  0E00               	movlw	0
  2429  000EC8  2065               	addwfc	btemp+11,w,c
  2430  000ECA  6EDA               	movwf	fsr2h,c
  2431  000ECC  CFDE F064          	movff	postinc2,btemp+10
  2432  000ED0  CFDD F065          	movff	postdec2,btemp+11
  2433  000ED4  505B               	movf	btemp+1,w,c
  2434  000ED6  2464               	addwf	btemp+10,w,c
  2435  000ED8  6ED9               	movwf	fsr2l,c
  2436  000EDA  505C               	movf	btemp+2,w,c
  2437  000EDC  2065               	addwfc	btemp+11,w,c
  2438  000EDE  6EDA               	movwf	fsr2h,c
  2439  000EE0  CFDE F05B          	movff	postinc2,btemp+1
  2440  000EE4  CFDD F05C          	movff	postdec2,btemp+2
  2441                           
  2442                           ;stkvar	sem_post@value @ sp[(-2)+0]
  2443  000EE8  0EFE               	movlw	-2
  2444  000EEA  C05B  FFE3         	movff	btemp+1,plusw1
  2445  000EEE  0EFF               	movlw	-1
  2446  000EF0  C05C  FFE3         	movff	btemp+2,plusw1
  2447                           
  2448                           ;semaphore.c: 45: s->queue.first = (s->queue.first + 1) % 10;
  2449  000EF4  0E0A               	movlw	10
  2450  000EF6  6EE6               	movwf	postinc1,c
  2451  000EF8  0E00               	movlw	0
  2452  000EFA  6EE6               	movwf	postinc1,c
  2453                           
  2454                           ;stkvar	sem_post@s @ sp[(-4)+-2]
  2455  000EFC  0EFA               	movlw	-6
  2456  000EFE  CFE3 F05B          	movff	plusw1,btemp+1
  2457  000F02  0EFB               	movlw	-5
  2458  000F04  CFE3 F05C          	movff	plusw1,btemp+2
  2459  000F08  0E06               	movlw	6
  2460  000F0A  245B               	addwf	btemp+1,w,c
  2461  000F0C  6ED9               	movwf	fsr2l,c
  2462  000F0E  0E00               	movlw	0
  2463  000F10  205C               	addwfc	btemp+2,w,c
  2464  000F12  6EDA               	movwf	fsr2h,c
  2465  000F14  CFDE F05B          	movff	postinc2,btemp+1
  2466  000F18  CFDD F05C          	movff	postdec2,btemp+2
  2467  000F1C  0E01               	movlw	1
  2468  000F1E  265B               	addwf	btemp+1,f,c
  2469  000F20  0E00               	movlw	0
  2470  000F22  225C               	addwfc	btemp+2,f,c
  2471  000F24  C05B  FFE6         	movff	btemp+1,postinc1
  2472  000F28  C05C  FFE6         	movff	btemp+2,postinc1
  2473  000F2C  EC22  F00B         	call	___lwmod	;wreg free
  2474                           
  2475                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2476  000F30  0EFC               	movlw	-4
  2477  000F32  CFE3 F064          	movff	plusw1,btemp+10
  2478  000F36  0EFD               	movlw	-3
  2479  000F38  CFE3 F065          	movff	plusw1,btemp+11
  2480  000F3C  0E06               	movlw	6
  2481  000F3E  2464               	addwf	btemp+10,w,c
  2482  000F40  6ED9               	movwf	fsr2l,c
  2483  000F42  0E00               	movlw	0
  2484  000F44  2065               	addwfc	btemp+11,w,c
  2485  000F46  6EDA               	movwf	fsr2h,c
  2486  000F48  C05A  FFDE         	movff	btemp,postinc2
  2487  000F4C  C05B  FFDD         	movff	btemp+1,postdec2
  2488                           
  2489                           ;semaphore.c: 46: s->queue.size--;
  2490                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  2491  000F50  0EFC               	movlw	-4
  2492  000F52  CFE3 F05B          	movff	plusw1,btemp+1
  2493  000F56  0EFD               	movlw	-3
  2494  000F58  CFE3 F05C          	movff	plusw1,btemp+2
  2495  000F5C  0E04               	movlw	4
  2496  000F5E  245B               	addwf	btemp+1,w,c
  2497  000F60  6ED9               	movwf	fsr2l,c
  2498  000F62  0E00               	movlw	0
  2499  000F64  205C               	addwfc	btemp+2,w,c
  2500  000F66  6EDA               	movwf	fsr2h,c
  2501  000F68  06DE               	decf	postinc2,f,c
  2502  000F6A  0E00               	movlw	0
  2503  000F6C  5ADD               	subwfb	postdec2,f,c
  2504                           
  2505                           ;semaphore.c: 47: F_APTOS[value].task_state = READY;
  2506  000F6E  0E11               	movlw	17
  2507  000F70  6EE6               	movwf	postinc1,c
  2508  000F72  0E00               	movlw	0
  2509  000F74  6EE6               	movwf	postinc1,c
  2510                           
  2511                           ;stkvar	sem_post@value @ sp[(-4)+0]
  2512  000F76  0EFC               	movlw	-4
  2513  000F78  CFE3 FFE6          	movff	plusw1,postinc1
  2514  000F7C  CFE3 FFE6          	movff	plusw1,postinc1
  2515  000F80  ECD2  F00C         	call	___wmul	;wreg free
  2516  000F84  0E08               	movlw	low (_F_APTOS+8)
  2517  000F86  245A               	addwf	btemp,w,c
  2518  000F88  6ED9               	movwf	fsr2l,c
  2519  000F8A  0E01               	movlw	high (_F_APTOS+8)
  2520  000F8C  205B               	addwfc	btemp+1,w,c
  2521  000F8E  6EDA               	movwf	fsr2h,c
  2522  000F90  0E01               	movlw	1
  2523  000F92  6EDF               	movwf	indf2,c
  2524                           
  2525                           ;semaphore.c: 50: dispatcher(READY);
  2526  000F94  0E01               	movlw	1
  2527  000F96  6EE6               	movwf	postinc1,c
  2528  000F98  EC03  F003         	call	_dispatcher	;wreg free
  2529  000F9C                     l2540:
  2530                           
  2531                           ;semaphore.c: 51: }
  2532                           ;semaphore.c: 53: INTCONbits.GIE = 1;
  2533  000F9C  8EF2               	bsf	intcon,7,c	;volatile
  2534                           
  2535                           ; _sem_post: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  2536  000F9E  52E5               	movf	postdec1,f,c
  2537  000FA0  52E5               	movf	postdec1,f,c
  2538  000FA2  52E5               	movf	postdec1,f,c
  2539  000FA4  52E5               	movf	postdec1,f,c
  2540  000FA6  0012               	return		;funcret
  2541  000FA8                     __end_of_sem_post:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           postinc0	equ	0xFEE
  2551                           plusw0	equ	0xFEB
  2552                           fsr0h	equ	0xFEA
  2553                           fsr0l	equ	0xFE9
  2554                           wreg	equ	0xFE8
  2555                           postinc1	equ	0xFE6
  2556                           postdec1	equ	0xFE5
  2557                           plusw1	equ	0xFE3
  2558                           fsr1h	equ	0xFE2
  2559                           fsr1l	equ	0xFE1
  2560                           indf2	equ	0xFDF
  2561                           postinc2	equ	0xFDE
  2562                           postdec2	equ	0xFDD
  2563                           plusw2	equ	0xFDB
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _delay *****************
  2569 ;; Defined at:
  2570 ;;		line 63 in file "kernel.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  time_ms         2  [STACK] unsigned int 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1  [STACK] void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2584 ;;      Params:         0       0       0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0
  2587 ;;      Totals:         0       0       0       0       0       0       0
  2588 ;;Total ram usage:        0 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    9
  2591 ;; This function calls:
  2592 ;;		___wmul
  2593 ;;		_dispatcher
  2594 ;; This function is called by:
  2595 ;;		_led_1
  2596 ;;		_led_2
  2597 ;;		_led_3
  2598 ;;		_acender
  2599 ;;		_numerodeaviosG
  2600 ;;		_tluzes
  2601 ;;		_Lcd_Write_Char
  2602 ;; This function uses a reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text13
  2606  001D26                     __ptext13:
  2607                           	opt stack 0
  2608  001D26                     _delay:
  2609                           	opt stack 17
  2610                           
  2611                           ;kernel.c: 65: INTCONbits.GIE = 0;
  2612                           
  2613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  2614                           ;incstack = 0
  2615  001D26  9EF2               	bcf	intcon,7,c	;volatile
  2616                           
  2617                           ;kernel.c: 67: F_APTOS[task_running].delay_time = time_ms;
  2618  001D28  0E11               	movlw	17
  2619  001D2A  6EE6               	movwf	postinc1,c
  2620  001D2C  0E00               	movlw	0
  2621  001D2E  6EE6               	movwf	postinc1,c
  2622  001D30  C017  FFE6         	movff	_task_running,postinc1
  2623  001D34  C018  FFE6         	movff	_task_running+1,postinc1
  2624  001D38  ECD2  F00C         	call	___wmul	;wreg free
  2625  001D3C  0E06               	movlw	low (_F_APTOS+6)
  2626  001D3E  245A               	addwf	btemp,w,c
  2627  001D40  6EE9               	movwf	fsr0l,c
  2628  001D42  0E01               	movlw	high (_F_APTOS+6)
  2629  001D44  205B               	addwfc	btemp+1,w,c
  2630  001D46  6EEA               	movwf	fsr0h,c
  2631                           
  2632                           ;stkvar	delay@time_ms @ sp[(0)+-2]
  2633  001D48  50E1               	movf	fsr1l,w,c
  2634  001D4A  0FFE               	addlw	-2
  2635  001D4C  6ED9               	movwf	fsr2l,c
  2636  001D4E  50E2               	movf	fsr1h,w,c
  2637  001D50  6EDA               	movwf	fsr2h,c
  2638  001D52  0EFF               	movlw	255
  2639  001D54  22DA               	addwfc	fsr2h,f,c
  2640  001D56  CFDE FFEE          	movff	postinc2,postinc0
  2641  001D5A  CFDD FFED          	movff	postdec2,postdec0
  2642                           
  2643                           ;kernel.c: 68: dispatcher(SLEEPING);
  2644  001D5E  0E03               	movlw	3
  2645  001D60  6EE6               	movwf	postinc1,c
  2646  001D62  EC03  F003         	call	_dispatcher	;wreg free
  2647                           
  2648                           ;kernel.c: 70: INTCONbits.GIE = 1;
  2649  001D66  8EF2               	bsf	intcon,7,c	;volatile
  2650                           
  2651                           ; _delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2652  001D68  52E5               	movf	postdec1,f,c
  2653  001D6A  52E5               	movf	postdec1,f,c
  2654  001D6C  0012               	return		;funcret
  2655  001D6E                     __end_of_delay:
  2656                           	opt stack 0
  2657                           tblptru	equ	0xFF8
  2658                           tblptrh	equ	0xFF7
  2659                           tblptrl	equ	0xFF6
  2660                           tablat	equ	0xFF5
  2661                           prodh	equ	0xFF4
  2662                           prodl	equ	0xFF3
  2663                           intcon	equ	0xFF2
  2664                           postinc0	equ	0xFEE
  2665                           postdec0	equ	0xFED
  2666                           plusw0	equ	0xFEB
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           postinc1	equ	0xFE6
  2671                           postdec1	equ	0xFE5
  2672                           plusw1	equ	0xFE3
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           plusw2	equ	0xFDB
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _dispatcher *****************
  2684 ;; Defined at:
  2685 ;;		line 37 in file "kernel.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  state           1  [STACK] enum E3008
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1  [STACK] void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2699 ;;      Params:         0       0       0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    8
  2706 ;; This function calls:
  2707 ;;		___wmul
  2708 ;;		_rr_scheduler
  2709 ;; This function is called by:
  2710 ;;		_delay
  2711 ;;		_int_high
  2712 ;;		_sem_wait
  2713 ;;		_sem_post
  2714 ;;		_pipe_read
  2715 ;;		_pipe_write
  2716 ;; This function uses a reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text14
  2720  000606                     __ptext14:
  2721                           	opt stack 0
  2722  000606                     _dispatcher:
  2723                           	opt stack 12
  2724                           
  2725                           ;kernel.c: 39: INTCONbits.GIE = 0;
  2726                           
  2727                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  2728                           ;incstack = 0
  2729  000606  9EF2               	bcf	intcon,7,c	;volatile
  2730                           
  2731                           ;kernel.c: 42: F_APTOS[task_running].task_state = state; F_APTOS[task_running].BSR_regis
      +                          ter = BSR; F_APTOS[task_running].STATUS_register = STATUS; F_APTOS[task_running].WORK_re
      +                          gister = WREG; F_APTOS[task_running].task_stack.stack_size = 0; do { \F_APTOS[task_runni
      +                          n
  2732                           ;stkvar	dispatcher@state @ sp[(0)+-1]
  2733  000608  0E11               	movlw	17
  2734  00060A  6EE6               	movwf	postinc1,c
  2735  00060C  0E00               	movlw	0
  2736  00060E  6EE6               	movwf	postinc1,c
  2737  000610  C017  FFE6         	movff	_task_running,postinc1
  2738  000614  C018  FFE6         	movff	_task_running+1,postinc1
  2739  000618  ECD2  F00C         	call	___wmul	;wreg free
  2740  00061C  0E08               	movlw	low (_F_APTOS+8)
  2741  00061E  245A               	addwf	btemp,w,c
  2742  000620  6ED9               	movwf	fsr2l,c
  2743  000622  0E01               	movlw	high (_F_APTOS+8)
  2744  000624  205B               	addwfc	btemp+1,w,c
  2745  000626  6EDA               	movwf	fsr2h,c
  2746  000628  0EFF               	movlw	-1
  2747  00062A  CFE3 FFDF          	movff	plusw1,indf2
  2748  00062E  0E11               	movlw	17
  2749  000630  6EE6               	movwf	postinc1,c
  2750  000632  0E00               	movlw	0
  2751  000634  6EE6               	movwf	postinc1,c
  2752  000636  C017  FFE6         	movff	_task_running,postinc1
  2753  00063A  C018  FFE6         	movff	_task_running+1,postinc1
  2754  00063E  ECD2  F00C         	call	___wmul	;wreg free
  2755  000642  0E0E               	movlw	low (_F_APTOS+14)
  2756  000644  245A               	addwf	btemp,w,c
  2757  000646  6ED9               	movwf	fsr2l,c
  2758  000648  0E01               	movlw	high (_F_APTOS+14)
  2759  00064A  205B               	addwfc	btemp+1,w,c
  2760  00064C  6EDA               	movwf	fsr2h,c
  2761  00064E  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2762  000652  0E11               	movlw	17
  2763  000654  6EE6               	movwf	postinc1,c
  2764  000656  0E00               	movlw	0
  2765  000658  6EE6               	movwf	postinc1,c
  2766  00065A  C017  FFE6         	movff	_task_running,postinc1
  2767  00065E  C018  FFE6         	movff	_task_running+1,postinc1
  2768  000662  ECD2  F00C         	call	___wmul	;wreg free
  2769  000666  0E0F               	movlw	low (_F_APTOS+15)
  2770  000668  245A               	addwf	btemp,w,c
  2771  00066A  6ED9               	movwf	fsr2l,c
  2772  00066C  0E01               	movlw	high (_F_APTOS+15)
  2773  00066E  205B               	addwfc	btemp+1,w,c
  2774  000670  6EDA               	movwf	fsr2h,c
  2775  000672  CFD8 FFDF          	movff	status,indf2	;volatile
  2776  000676  0E11               	movlw	17
  2777  000678  6EE6               	movwf	postinc1,c
  2778  00067A  0E00               	movlw	0
  2779  00067C  6EE6               	movwf	postinc1,c
  2780  00067E  C017  FFE6         	movff	_task_running,postinc1
  2781  000682  C018  FFE6         	movff	_task_running+1,postinc1
  2782  000686  ECD2  F00C         	call	___wmul	;wreg free
  2783  00068A  0E10               	movlw	low (_F_APTOS+16)
  2784  00068C  245A               	addwf	btemp,w,c
  2785  00068E  6ED9               	movwf	fsr2l,c
  2786  000690  0E01               	movlw	high (_F_APTOS+16)
  2787  000692  205B               	addwfc	btemp+1,w,c
  2788  000694  6EDA               	movwf	fsr2h,c
  2789  000696  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2790  00069A  0E11               	movlw	17
  2791  00069C  6EE6               	movwf	postinc1,c
  2792  00069E  0E00               	movlw	0
  2793  0006A0  6EE6               	movwf	postinc1,c
  2794  0006A2  C017  FFE6         	movff	_task_running,postinc1
  2795  0006A6  C018  FFE6         	movff	_task_running+1,postinc1
  2796  0006AA  ECD2  F00C         	call	___wmul	;wreg free
  2797  0006AE  0E0C               	movlw	low (_F_APTOS+12)
  2798  0006B0  245A               	addwf	btemp,w,c
  2799  0006B2  6ED9               	movwf	fsr2l,c
  2800  0006B4  0E01               	movlw	high (_F_APTOS+12)
  2801  0006B6  205B               	addwfc	btemp+1,w,c
  2802  0006B8  6EDA               	movwf	fsr2h,c
  2803  0006BA  0E00               	movlw	0
  2804  0006BC  6EDE               	movwf	postinc2,c
  2805  0006BE  0E00               	movlw	0
  2806  0006C0  6EDD               	movwf	postdec2,c
  2807  0006C2                     l2444:
  2808  0006C2  0E03               	movlw	3
  2809  0006C4  6EE6               	movwf	postinc1,c
  2810  0006C6  0E00               	movlw	0
  2811  0006C8  6EE6               	movwf	postinc1,c
  2812  0006CA  0E11               	movlw	17
  2813  0006CC  6EE6               	movwf	postinc1,c
  2814  0006CE  0E00               	movlw	0
  2815  0006D0  6EE6               	movwf	postinc1,c
  2816  0006D2  C017  FFE6         	movff	_task_running,postinc1
  2817  0006D6  C018  FFE6         	movff	_task_running+1,postinc1
  2818  0006DA  ECD2  F00C         	call	___wmul	;wreg free
  2819  0006DE  0E0C               	movlw	low (_F_APTOS+12)
  2820  0006E0  245A               	addwf	btemp,w,c
  2821  0006E2  6ED9               	movwf	fsr2l,c
  2822  0006E4  0E01               	movlw	high (_F_APTOS+12)
  2823  0006E6  205B               	addwfc	btemp+1,w,c
  2824  0006E8  6EDA               	movwf	fsr2h,c
  2825  0006EA  CFDE F05B          	movff	postinc2,btemp+1
  2826  0006EE  CFDD F05C          	movff	postdec2,btemp+2
  2827  0006F2  C05B  FFE6         	movff	btemp+1,postinc1
  2828  0006F6  C05C  FFE6         	movff	btemp+2,postinc1
  2829  0006FA  ECD2  F00C         	call	___wmul	;wreg free
  2830  0006FE  C05A  F062         	movff	btemp,btemp+8
  2831  000702  C05B  F063         	movff	btemp+1,btemp+9
  2832  000706  0E11               	movlw	17
  2833  000708  6EE6               	movwf	postinc1,c
  2834  00070A  0E00               	movlw	0
  2835  00070C  6EE6               	movwf	postinc1,c
  2836  00070E  C017  FFE6         	movff	_task_running,postinc1
  2837  000712  C018  FFE6         	movff	_task_running+1,postinc1
  2838  000716  ECD2  F00C         	call	___wmul	;wreg free
  2839  00071A  0E00               	movlw	low _F_APTOS
  2840  00071C  6E64               	movwf	btemp+10,c
  2841  00071E  0E01               	movlw	high _F_APTOS
  2842  000720  6E65               	movwf	btemp+11,c
  2843  000722  0E09               	movlw	9
  2844  000724  2664               	addwf	btemp+10,f,c
  2845  000726  0E00               	movlw	0
  2846  000728  2265               	addwfc	btemp+11,f,c
  2847  00072A  505A               	movf	btemp,w,c
  2848  00072C  2664               	addwf	btemp+10,f,c
  2849  00072E  505B               	movf	btemp+1,w,c
  2850  000730  2265               	addwfc	btemp+11,f,c
  2851  000732  5062               	movf	btemp+8,w,c
  2852  000734  2464               	addwf	btemp+10,w,c
  2853  000736  6ED9               	movwf	fsr2l,c
  2854  000738  5063               	movf	btemp+9,w,c
  2855  00073A  2065               	addwfc	btemp+11,w,c
  2856  00073C  6EDA               	movwf	fsr2h,c
  2857  00073E  CFFF FFDF          	movff	tosu,indf2	;volatile
  2858  000742  0E03               	movlw	3
  2859  000744  6EE6               	movwf	postinc1,c
  2860  000746  0E00               	movlw	0
  2861  000748  6EE6               	movwf	postinc1,c
  2862  00074A  0E11               	movlw	17
  2863  00074C  6EE6               	movwf	postinc1,c
  2864  00074E  0E00               	movlw	0
  2865  000750  6EE6               	movwf	postinc1,c
  2866  000752  C017  FFE6         	movff	_task_running,postinc1
  2867  000756  C018  FFE6         	movff	_task_running+1,postinc1
  2868  00075A  ECD2  F00C         	call	___wmul	;wreg free
  2869  00075E  0E0C               	movlw	low (_F_APTOS+12)
  2870  000760  245A               	addwf	btemp,w,c
  2871  000762  6ED9               	movwf	fsr2l,c
  2872  000764  0E01               	movlw	high (_F_APTOS+12)
  2873  000766  205B               	addwfc	btemp+1,w,c
  2874  000768  6EDA               	movwf	fsr2h,c
  2875  00076A  CFDE F05B          	movff	postinc2,btemp+1
  2876  00076E  CFDD F05C          	movff	postdec2,btemp+2
  2877  000772  C05B  FFE6         	movff	btemp+1,postinc1
  2878  000776  C05C  FFE6         	movff	btemp+2,postinc1
  2879  00077A  ECD2  F00C         	call	___wmul	;wreg free
  2880  00077E  C05A  F062         	movff	btemp,btemp+8
  2881  000782  C05B  F063         	movff	btemp+1,btemp+9
  2882  000786  0E11               	movlw	17
  2883  000788  6EE6               	movwf	postinc1,c
  2884  00078A  0E00               	movlw	0
  2885  00078C  6EE6               	movwf	postinc1,c
  2886  00078E  C017  FFE6         	movff	_task_running,postinc1
  2887  000792  C018  FFE6         	movff	_task_running+1,postinc1
  2888  000796  ECD2  F00C         	call	___wmul	;wreg free
  2889  00079A  0E00               	movlw	low _F_APTOS
  2890  00079C  6E64               	movwf	btemp+10,c
  2891  00079E  0E01               	movlw	high _F_APTOS
  2892  0007A0  6E65               	movwf	btemp+11,c
  2893  0007A2  0E0A               	movlw	10
  2894  0007A4  2664               	addwf	btemp+10,f,c
  2895  0007A6  0E00               	movlw	0
  2896  0007A8  2265               	addwfc	btemp+11,f,c
  2897  0007AA  505A               	movf	btemp,w,c
  2898  0007AC  2664               	addwf	btemp+10,f,c
  2899  0007AE  505B               	movf	btemp+1,w,c
  2900  0007B0  2265               	addwfc	btemp+11,f,c
  2901  0007B2  5062               	movf	btemp+8,w,c
  2902  0007B4  2464               	addwf	btemp+10,w,c
  2903  0007B6  6ED9               	movwf	fsr2l,c
  2904  0007B8  5063               	movf	btemp+9,w,c
  2905  0007BA  2065               	addwfc	btemp+11,w,c
  2906  0007BC  6EDA               	movwf	fsr2h,c
  2907  0007BE  CFFD FFDF          	movff	tosl,indf2	;volatile
  2908  0007C2  0E03               	movlw	3
  2909  0007C4  6EE6               	movwf	postinc1,c
  2910  0007C6  0E00               	movlw	0
  2911  0007C8  6EE6               	movwf	postinc1,c
  2912  0007CA  0E11               	movlw	17
  2913  0007CC  6EE6               	movwf	postinc1,c
  2914  0007CE  0E00               	movlw	0
  2915  0007D0  6EE6               	movwf	postinc1,c
  2916  0007D2  C017  FFE6         	movff	_task_running,postinc1
  2917  0007D6  C018  FFE6         	movff	_task_running+1,postinc1
  2918  0007DA  ECD2  F00C         	call	___wmul	;wreg free
  2919  0007DE  0E0C               	movlw	low (_F_APTOS+12)
  2920  0007E0  245A               	addwf	btemp,w,c
  2921  0007E2  6ED9               	movwf	fsr2l,c
  2922  0007E4  0E01               	movlw	high (_F_APTOS+12)
  2923  0007E6  205B               	addwfc	btemp+1,w,c
  2924  0007E8  6EDA               	movwf	fsr2h,c
  2925  0007EA  CFDE F05B          	movff	postinc2,btemp+1
  2926  0007EE  CFDD F05C          	movff	postdec2,btemp+2
  2927  0007F2  C05B  FFE6         	movff	btemp+1,postinc1
  2928  0007F6  C05C  FFE6         	movff	btemp+2,postinc1
  2929  0007FA  ECD2  F00C         	call	___wmul	;wreg free
  2930  0007FE  C05A  F062         	movff	btemp,btemp+8
  2931  000802  C05B  F063         	movff	btemp+1,btemp+9
  2932  000806  0E11               	movlw	17
  2933  000808  6EE6               	movwf	postinc1,c
  2934  00080A  0E00               	movlw	0
  2935  00080C  6EE6               	movwf	postinc1,c
  2936  00080E  C017  FFE6         	movff	_task_running,postinc1
  2937  000812  C018  FFE6         	movff	_task_running+1,postinc1
  2938  000816  ECD2  F00C         	call	___wmul	;wreg free
  2939  00081A  0E00               	movlw	low _F_APTOS
  2940  00081C  6E64               	movwf	btemp+10,c
  2941  00081E  0E01               	movlw	high _F_APTOS
  2942  000820  6E65               	movwf	btemp+11,c
  2943  000822  0E0B               	movlw	11
  2944  000824  2664               	addwf	btemp+10,f,c
  2945  000826  0E00               	movlw	0
  2946  000828  2265               	addwfc	btemp+11,f,c
  2947  00082A  505A               	movf	btemp,w,c
  2948  00082C  2664               	addwf	btemp+10,f,c
  2949  00082E  505B               	movf	btemp+1,w,c
  2950  000830  2265               	addwfc	btemp+11,f,c
  2951  000832  5062               	movf	btemp+8,w,c
  2952  000834  2464               	addwf	btemp+10,w,c
  2953  000836  6ED9               	movwf	fsr2l,c
  2954  000838  5063               	movf	btemp+9,w,c
  2955  00083A  2065               	addwfc	btemp+11,w,c
  2956  00083C  6EDA               	movwf	fsr2h,c
  2957  00083E  CFFE FFDF          	movff	tosh,indf2	;volatile
  2958  000842  0E11               	movlw	17
  2959  000844  6EE6               	movwf	postinc1,c
  2960  000846  0E00               	movlw	0
  2961  000848  6EE6               	movwf	postinc1,c
  2962  00084A  C017  FFE6         	movff	_task_running,postinc1
  2963  00084E  C018  FFE6         	movff	_task_running+1,postinc1
  2964  000852  ECD2  F00C         	call	___wmul	;wreg free
  2965  000856  0E0C               	movlw	low (_F_APTOS+12)
  2966  000858  245A               	addwf	btemp,w,c
  2967  00085A  6ED9               	movwf	fsr2l,c
  2968  00085C  0E01               	movlw	high (_F_APTOS+12)
  2969  00085E  205B               	addwfc	btemp+1,w,c
  2970  000860  6EDA               	movwf	fsr2h,c
  2971  000862  2ADE               	incf	postinc2,f,c
  2972  000864  0E00               	movlw	0
  2973  000866  22DD               	addwfc	postdec2,f,c
  2974  000868  0006               	pop		;# 
  2975  00086A  50FC               	movf	stkptr,w,c	;volatile
  2976  00086C  A4D8               	btfss	status,2,c
  2977  00086E  D729               	goto	l2444
  2978                           
  2979                           ;kernel.c: 46: task_running = rr_scheduler();
  2980  000870  ECB1  F00A         	call	_rr_scheduler	;wreg free
  2981  000874  C05A  F017         	movff	btemp,_task_running
  2982  000878  C05B  F018         	movff	btemp+1,_task_running+1
  2983                           
  2984                           ;kernel.c: 53: \STKPTR = 0;\if (F_APTOS[task_running].task_stack.stack_size == 0) {\asm(
      +                          "PUSH");\TOS = F_APTOS[task_running].task_f;\}\else {\BSR = F_APTOS[task_running].BSR_re
      +                          gister;\STATUS = F_APTOS[task_running].STATUS_register;\WREG = F_APTOS[task_running].WOR
      +                          K
  2985  00087C  6AFC               	clrf	stkptr,c	;volatile
  2986  00087E  0E11               	movlw	17
  2987  000880  6EE6               	movwf	postinc1,c
  2988  000882  0E00               	movlw	0
  2989  000884  6EE6               	movwf	postinc1,c
  2990  000886  C017  FFE6         	movff	_task_running,postinc1
  2991  00088A  C018  FFE6         	movff	_task_running+1,postinc1
  2992  00088E  ECD2  F00C         	call	___wmul	;wreg free
  2993  000892  0E0C               	movlw	low (_F_APTOS+12)
  2994  000894  245A               	addwf	btemp,w,c
  2995  000896  6ED9               	movwf	fsr2l,c
  2996  000898  0E01               	movlw	high (_F_APTOS+12)
  2997  00089A  205B               	addwfc	btemp+1,w,c
  2998  00089C  6EDA               	movwf	fsr2h,c
  2999  00089E  50DE               	movf	postinc2,w,c
  3000  0008A0  10DE               	iorwf	postinc2,w,c
  3001  0008A2  A4D8               	btfss	status,2,c
  3002  0008A4  D01B               	goto	l2464
  3003  0008A6  0005               	push		;# 
  3004  0008A8  0E11               	movlw	17
  3005  0008AA  6EE6               	movwf	postinc1,c
  3006  0008AC  0E00               	movlw	0
  3007  0008AE  6EE6               	movwf	postinc1,c
  3008  0008B0  C017  FFE6         	movff	_task_running,postinc1
  3009  0008B4  C018  FFE6         	movff	_task_running+1,postinc1
  3010  0008B8  ECD2  F00C         	call	___wmul	;wreg free
  3011  0008BC  0E04               	movlw	low (_F_APTOS+4)
  3012  0008BE  245A               	addwf	btemp,w,c
  3013  0008C0  6ED9               	movwf	fsr2l,c
  3014  0008C2  0E01               	movlw	high (_F_APTOS+4)
  3015  0008C4  205B               	addwfc	btemp+1,w,c
  3016  0008C6  6EDA               	movwf	fsr2h,c
  3017  0008C8  CFDE F05B          	movff	postinc2,btemp+1
  3018  0008CC  CFDD F05C          	movff	postdec2,btemp+2
  3019  0008D0  C05B  FFFD         	movff	btemp+1,tosl	;volatile
  3020  0008D4  C05C  FFFE         	movff	btemp+2,tosh	;volatile
  3021  0008D8  6AFF               	clrf	tosu,c	;volatile
  3022  0008DA  D11F               	goto	u120_20
  3023  0008DC                     l2464:
  3024  0008DC  0E11               	movlw	17
  3025  0008DE  6EE6               	movwf	postinc1,c
  3026  0008E0  0E00               	movlw	0
  3027  0008E2  6EE6               	movwf	postinc1,c
  3028  0008E4  C017  FFE6         	movff	_task_running,postinc1
  3029  0008E8  C018  FFE6         	movff	_task_running+1,postinc1
  3030  0008EC  ECD2  F00C         	call	___wmul	;wreg free
  3031  0008F0  0E0E               	movlw	low (_F_APTOS+14)
  3032  0008F2  245A               	addwf	btemp,w,c
  3033  0008F4  6ED9               	movwf	fsr2l,c
  3034  0008F6  0E01               	movlw	high (_F_APTOS+14)
  3035  0008F8  205B               	addwfc	btemp+1,w,c
  3036  0008FA  6EDA               	movwf	fsr2h,c
  3037  0008FC  50DF               	movf	indf2,w,c
  3038  0008FE  6EE0               	movwf	bsr,c	;volatile
  3039  000900  0E11               	movlw	17
  3040  000902  6EE6               	movwf	postinc1,c
  3041  000904  0E00               	movlw	0
  3042  000906  6EE6               	movwf	postinc1,c
  3043  000908  C017  FFE6         	movff	_task_running,postinc1
  3044  00090C  C018  FFE6         	movff	_task_running+1,postinc1
  3045  000910  ECD2  F00C         	call	___wmul	;wreg free
  3046  000914  0E0F               	movlw	low (_F_APTOS+15)
  3047  000916  245A               	addwf	btemp,w,c
  3048  000918  6ED9               	movwf	fsr2l,c
  3049  00091A  0E01               	movlw	high (_F_APTOS+15)
  3050  00091C  205B               	addwfc	btemp+1,w,c
  3051  00091E  6EDA               	movwf	fsr2h,c
  3052  000920  50DF               	movf	indf2,w,c
  3053  000922  6ED8               	movwf	status,c	;volatile
  3054  000924  0E11               	movlw	17
  3055  000926  6EE6               	movwf	postinc1,c
  3056  000928  0E00               	movlw	0
  3057  00092A  6EE6               	movwf	postinc1,c
  3058  00092C  C017  FFE6         	movff	_task_running,postinc1
  3059  000930  C018  FFE6         	movff	_task_running+1,postinc1
  3060  000934  ECD2  F00C         	call	___wmul	;wreg free
  3061  000938  0E10               	movlw	low (_F_APTOS+16)
  3062  00093A  245A               	addwf	btemp,w,c
  3063  00093C  6ED9               	movwf	fsr2l,c
  3064  00093E  0E01               	movlw	high (_F_APTOS+16)
  3065  000940  205B               	addwfc	btemp+1,w,c
  3066  000942  6EDA               	movwf	fsr2h,c
  3067  000944  50DF               	movf	indf2,w,c
  3068  000946  6E65               	movwf	btemp+11,c
  3069  000948  5065               	movf	btemp+11,w,c
  3070  00094A                     l88:
  3071  00094A  0005               	push		;# 
  3072  00094C  0E11               	movlw	17
  3073  00094E  6EE6               	movwf	postinc1,c
  3074  000950  0E00               	movlw	0
  3075  000952  6EE6               	movwf	postinc1,c
  3076  000954  C017  FFE6         	movff	_task_running,postinc1
  3077  000958  C018  FFE6         	movff	_task_running+1,postinc1
  3078  00095C  ECD2  F00C         	call	___wmul	;wreg free
  3079  000960  0E0C               	movlw	low (_F_APTOS+12)
  3080  000962  245A               	addwf	btemp,w,c
  3081  000964  6ED9               	movwf	fsr2l,c
  3082  000966  0E01               	movlw	high (_F_APTOS+12)
  3083  000968  205B               	addwfc	btemp+1,w,c
  3084  00096A  6EDA               	movwf	fsr2h,c
  3085  00096C  06DE               	decf	postinc2,f,c
  3086  00096E  0E00               	movlw	0
  3087  000970  5ADD               	subwfb	postdec2,f,c
  3088  000972  0E03               	movlw	3
  3089  000974  6EE6               	movwf	postinc1,c
  3090  000976  0E00               	movlw	0
  3091  000978  6EE6               	movwf	postinc1,c
  3092  00097A  0E11               	movlw	17
  3093  00097C  6EE6               	movwf	postinc1,c
  3094  00097E  0E00               	movlw	0
  3095  000980  6EE6               	movwf	postinc1,c
  3096  000982  C017  FFE6         	movff	_task_running,postinc1
  3097  000986  C018  FFE6         	movff	_task_running+1,postinc1
  3098  00098A  ECD2  F00C         	call	___wmul	;wreg free
  3099  00098E  0E0C               	movlw	low (_F_APTOS+12)
  3100  000990  245A               	addwf	btemp,w,c
  3101  000992  6ED9               	movwf	fsr2l,c
  3102  000994  0E01               	movlw	high (_F_APTOS+12)
  3103  000996  205B               	addwfc	btemp+1,w,c
  3104  000998  6EDA               	movwf	fsr2h,c
  3105  00099A  CFDE F05B          	movff	postinc2,btemp+1
  3106  00099E  CFDD F05C          	movff	postdec2,btemp+2
  3107  0009A2  C05B  FFE6         	movff	btemp+1,postinc1
  3108  0009A6  C05C  FFE6         	movff	btemp+2,postinc1
  3109  0009AA  ECD2  F00C         	call	___wmul	;wreg free
  3110  0009AE  C05A  F062         	movff	btemp,btemp+8
  3111  0009B2  C05B  F063         	movff	btemp+1,btemp+9
  3112  0009B6  0E11               	movlw	17
  3113  0009B8  6EE6               	movwf	postinc1,c
  3114  0009BA  0E00               	movlw	0
  3115  0009BC  6EE6               	movwf	postinc1,c
  3116  0009BE  C017  FFE6         	movff	_task_running,postinc1
  3117  0009C2  C018  FFE6         	movff	_task_running+1,postinc1
  3118  0009C6  ECD2  F00C         	call	___wmul	;wreg free
  3119  0009CA  0E00               	movlw	low _F_APTOS
  3120  0009CC  6E64               	movwf	btemp+10,c
  3121  0009CE  0E01               	movlw	high _F_APTOS
  3122  0009D0  6E65               	movwf	btemp+11,c
  3123  0009D2  0E09               	movlw	9
  3124  0009D4  2664               	addwf	btemp+10,f,c
  3125  0009D6  0E00               	movlw	0
  3126  0009D8  2265               	addwfc	btemp+11,f,c
  3127  0009DA  505A               	movf	btemp,w,c
  3128  0009DC  2664               	addwf	btemp+10,f,c
  3129  0009DE  505B               	movf	btemp+1,w,c
  3130  0009E0  2265               	addwfc	btemp+11,f,c
  3131  0009E2  5062               	movf	btemp+8,w,c
  3132  0009E4  2464               	addwf	btemp+10,w,c
  3133  0009E6  6ED9               	movwf	fsr2l,c
  3134  0009E8  5063               	movf	btemp+9,w,c
  3135  0009EA  2065               	addwfc	btemp+11,w,c
  3136  0009EC  6EDA               	movwf	fsr2h,c
  3137  0009EE  50DF               	movf	indf2,w,c
  3138  0009F0  6EFF               	movwf	tosu,c	;volatile
  3139  0009F2  0E03               	movlw	3
  3140  0009F4  6EE6               	movwf	postinc1,c
  3141  0009F6  0E00               	movlw	0
  3142  0009F8  6EE6               	movwf	postinc1,c
  3143  0009FA  0E11               	movlw	17
  3144  0009FC  6EE6               	movwf	postinc1,c
  3145  0009FE  0E00               	movlw	0
  3146  000A00  6EE6               	movwf	postinc1,c
  3147  000A02  C017  FFE6         	movff	_task_running,postinc1
  3148  000A06  C018  FFE6         	movff	_task_running+1,postinc1
  3149  000A0A  ECD2  F00C         	call	___wmul	;wreg free
  3150  000A0E  0E0C               	movlw	low (_F_APTOS+12)
  3151  000A10  245A               	addwf	btemp,w,c
  3152  000A12  6ED9               	movwf	fsr2l,c
  3153  000A14  0E01               	movlw	high (_F_APTOS+12)
  3154  000A16  205B               	addwfc	btemp+1,w,c
  3155  000A18  6EDA               	movwf	fsr2h,c
  3156  000A1A  CFDE F05B          	movff	postinc2,btemp+1
  3157  000A1E  CFDD F05C          	movff	postdec2,btemp+2
  3158  000A22  C05B  FFE6         	movff	btemp+1,postinc1
  3159  000A26  C05C  FFE6         	movff	btemp+2,postinc1
  3160  000A2A  ECD2  F00C         	call	___wmul	;wreg free
  3161  000A2E  C05A  F062         	movff	btemp,btemp+8
  3162  000A32  C05B  F063         	movff	btemp+1,btemp+9
  3163  000A36  0E11               	movlw	17
  3164  000A38  6EE6               	movwf	postinc1,c
  3165  000A3A  0E00               	movlw	0
  3166  000A3C  6EE6               	movwf	postinc1,c
  3167  000A3E  C017  FFE6         	movff	_task_running,postinc1
  3168  000A42  C018  FFE6         	movff	_task_running+1,postinc1
  3169  000A46  ECD2  F00C         	call	___wmul	;wreg free
  3170  000A4A  0E00               	movlw	low _F_APTOS
  3171  000A4C  6E64               	movwf	btemp+10,c
  3172  000A4E  0E01               	movlw	high _F_APTOS
  3173  000A50  6E65               	movwf	btemp+11,c
  3174  000A52  0E0A               	movlw	10
  3175  000A54  2664               	addwf	btemp+10,f,c
  3176  000A56  0E00               	movlw	0
  3177  000A58  2265               	addwfc	btemp+11,f,c
  3178  000A5A  505A               	movf	btemp,w,c
  3179  000A5C  2664               	addwf	btemp+10,f,c
  3180  000A5E  505B               	movf	btemp+1,w,c
  3181  000A60  2265               	addwfc	btemp+11,f,c
  3182  000A62  5062               	movf	btemp+8,w,c
  3183  000A64  2464               	addwf	btemp+10,w,c
  3184  000A66  6ED9               	movwf	fsr2l,c
  3185  000A68  5063               	movf	btemp+9,w,c
  3186  000A6A  2065               	addwfc	btemp+11,w,c
  3187  000A6C  6EDA               	movwf	fsr2h,c
  3188  000A6E  50DF               	movf	indf2,w,c
  3189  000A70  6EFD               	movwf	tosl,c	;volatile
  3190  000A72  0E03               	movlw	3
  3191  000A74  6EE6               	movwf	postinc1,c
  3192  000A76  0E00               	movlw	0
  3193  000A78  6EE6               	movwf	postinc1,c
  3194  000A7A  0E11               	movlw	17
  3195  000A7C  6EE6               	movwf	postinc1,c
  3196  000A7E  0E00               	movlw	0
  3197  000A80  6EE6               	movwf	postinc1,c
  3198  000A82  C017  FFE6         	movff	_task_running,postinc1
  3199  000A86  C018  FFE6         	movff	_task_running+1,postinc1
  3200  000A8A  ECD2  F00C         	call	___wmul	;wreg free
  3201  000A8E  0E0C               	movlw	low (_F_APTOS+12)
  3202  000A90  245A               	addwf	btemp,w,c
  3203  000A92  6ED9               	movwf	fsr2l,c
  3204  000A94  0E01               	movlw	high (_F_APTOS+12)
  3205  000A96  205B               	addwfc	btemp+1,w,c
  3206  000A98  6EDA               	movwf	fsr2h,c
  3207  000A9A  CFDE F05B          	movff	postinc2,btemp+1
  3208  000A9E  CFDD F05C          	movff	postdec2,btemp+2
  3209  000AA2  C05B  FFE6         	movff	btemp+1,postinc1
  3210  000AA6  C05C  FFE6         	movff	btemp+2,postinc1
  3211  000AAA  ECD2  F00C         	call	___wmul	;wreg free
  3212  000AAE  C05A  F062         	movff	btemp,btemp+8
  3213  000AB2  C05B  F063         	movff	btemp+1,btemp+9
  3214  000AB6  0E11               	movlw	17
  3215  000AB8  6EE6               	movwf	postinc1,c
  3216  000ABA  0E00               	movlw	0
  3217  000ABC  6EE6               	movwf	postinc1,c
  3218  000ABE  C017  FFE6         	movff	_task_running,postinc1
  3219  000AC2  C018  FFE6         	movff	_task_running+1,postinc1
  3220  000AC6  ECD2  F00C         	call	___wmul	;wreg free
  3221  000ACA  0E00               	movlw	low _F_APTOS
  3222  000ACC  6E64               	movwf	btemp+10,c
  3223  000ACE  0E01               	movlw	high _F_APTOS
  3224  000AD0  6E65               	movwf	btemp+11,c
  3225  000AD2  0E0B               	movlw	11
  3226  000AD4  2664               	addwf	btemp+10,f,c
  3227  000AD6  0E00               	movlw	0
  3228  000AD8  2265               	addwfc	btemp+11,f,c
  3229  000ADA  505A               	movf	btemp,w,c
  3230  000ADC  2664               	addwf	btemp+10,f,c
  3231  000ADE  505B               	movf	btemp+1,w,c
  3232  000AE0  2265               	addwfc	btemp+11,f,c
  3233  000AE2  5062               	movf	btemp+8,w,c
  3234  000AE4  2464               	addwf	btemp+10,w,c
  3235  000AE6  6ED9               	movwf	fsr2l,c
  3236  000AE8  5063               	movf	btemp+9,w,c
  3237  000AEA  2065               	addwfc	btemp+11,w,c
  3238  000AEC  6EDA               	movwf	fsr2h,c
  3239  000AEE  50DF               	movf	indf2,w,c
  3240  000AF0  6EFE               	movwf	tosh,c	;volatile
  3241  000AF2  0E11               	movlw	17
  3242  000AF4  6EE6               	movwf	postinc1,c
  3243  000AF6  0E00               	movlw	0
  3244  000AF8  6EE6               	movwf	postinc1,c
  3245  000AFA  C017  FFE6         	movff	_task_running,postinc1
  3246  000AFE  C018  FFE6         	movff	_task_running+1,postinc1
  3247  000B02  ECD2  F00C         	call	___wmul	;wreg free
  3248  000B06  0E0C               	movlw	low (_F_APTOS+12)
  3249  000B08  245A               	addwf	btemp,w,c
  3250  000B0A  6ED9               	movwf	fsr2l,c
  3251  000B0C  0E01               	movlw	high (_F_APTOS+12)
  3252  000B0E  205B               	addwfc	btemp+1,w,c
  3253  000B10  6EDA               	movwf	fsr2h,c
  3254  000B12  50DE               	movf	postinc2,w,c
  3255  000B14  10DE               	iorwf	postinc2,w,c
  3256  000B16  A4D8               	btfss	status,2,c
  3257  000B18  D718               	goto	l88
  3258  000B1A                     u120_20:
  3259  000B1A  0E11               	movlw	17
  3260  000B1C  6EE6               	movwf	postinc1,c
  3261  000B1E  0E00               	movlw	0
  3262  000B20  6EE6               	movwf	postinc1,c
  3263  000B22  C017  FFE6         	movff	_task_running,postinc1
  3264  000B26  C018  FFE6         	movff	_task_running+1,postinc1
  3265  000B2A  ECD2  F00C         	call	___wmul	;wreg free
  3266  000B2E  0E08               	movlw	low (_F_APTOS+8)
  3267  000B30  245A               	addwf	btemp,w,c
  3268  000B32  6ED9               	movwf	fsr2l,c
  3269  000B34  0E01               	movlw	high (_F_APTOS+8)
  3270  000B36  205B               	addwfc	btemp+1,w,c
  3271  000B38  6EDA               	movwf	fsr2h,c
  3272  000B3A  0E02               	movlw	2
  3273  000B3C  6EDF               	movwf	indf2,c
  3274  000B3E  8EF2               	bsf	intcon,7,c	;volatile
  3275                           
  3276                           ;kernel.c: 55: INTCONbits.GIE = 1;
  3277  000B40  8EF2               	bsf	intcon,7,c	;volatile
  3278                           
  3279                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3280  000B42  52E5               	movf	postdec1,f,c
  3281  000B44  0012               	return		;funcret
  3282  000B46                     __end_of_dispatcher:
  3283                           	opt stack 0
  3284                           tosu	equ	0xFFF
  3285                           tosh	equ	0xFFE
  3286                           tosl	equ	0xFFD
  3287                           stkptr	equ	0xFFC
  3288                           tblptru	equ	0xFF8
  3289                           tblptrh	equ	0xFF7
  3290                           tblptrl	equ	0xFF6
  3291                           tablat	equ	0xFF5
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           postinc0	equ	0xFEE
  3296                           postdec0	equ	0xFED
  3297                           plusw0	equ	0xFEB
  3298                           fsr0h	equ	0xFEA
  3299                           fsr0l	equ	0xFE9
  3300                           wreg	equ	0xFE8
  3301                           postinc1	equ	0xFE6
  3302                           postdec1	equ	0xFE5
  3303                           plusw1	equ	0xFE3
  3304                           fsr1h	equ	0xFE2
  3305                           fsr1l	equ	0xFE1
  3306                           bsr	equ	0xFE0
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           plusw2	equ	0xFDB
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function _rr_scheduler *****************
  3316 ;; Defined at:
  3317 ;;		line 23 in file "scheduler.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  next_task_to    2  [STACK] unsigned int 
  3322 ;;  j               2  [STACK] unsigned int 
  3323 ;;  cont            2  [STACK] unsigned int 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2  [STACK] unsigned int 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3333 ;;      Params:         0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    7
  3340 ;; This function calls:
  3341 ;;		___lwmod
  3342 ;;		___wmul
  3343 ;;		_contagemR
  3344 ;; This function is called by:
  3345 ;;		_dispatcher
  3346 ;; This function uses a reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text15
  3350  001562                     __ptext15:
  3351                           	opt stack 0
  3352  001562                     _rr_scheduler:
  3353                           	opt stack 0
  3354                           
  3355                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3356  001562  0E06               	movlw	6
  3357  001564  26E1               	addwf	fsr1l,f,c
  3358  001566  0E00               	movlw	0
  3359  001568  22E2               	addwfc	fsr1h,f,c
  3360                           
  3361                           ;scheduler.c: 26: u_int j = task_running;
  3362                           
  3363                           ;incstack = 0
  3364  00156A  C017  F05B         	movff	_task_running,btemp+1
  3365  00156E  C018  F05C         	movff	_task_running+1,btemp+2
  3366                           
  3367                           ;stkvar	rr_scheduler@j @ sp[(-6)+2]
  3368  001572  0EFC               	movlw	-4
  3369  001574  C05B  FFE3         	movff	btemp+1,plusw1
  3370  001578  0EFD               	movlw	-3
  3371  00157A  C05C  FFE3         	movff	btemp+2,plusw1
  3372                           
  3373                           ;scheduler.c: 27: u_int cont = contagemR();
  3374  00157E  EC80  F00B         	call	_contagemR	;wreg free
  3375                           
  3376                           ;stkvar	rr_scheduler@cont @ sp[(-6)+4]
  3377  001582  0EFE               	movlw	-2
  3378  001584  C05A  FFE3         	movff	btemp,plusw1
  3379  001588  0EFF               	movlw	-1
  3380  00158A  C05B  FFE3         	movff	btemp+1,plusw1
  3381                           
  3382                           ;scheduler.c: 29: PORTBbits.RB0 = ~LATBbits.LATB0;
  3383  00158E  A08A               	btfss	3978,0,c	;volatile
  3384  001590  D002               	goto	u112_20
  3385  001592  0E01               	movlw	1
  3386  001594  D001               	goto	u112_26
  3387  001596                     u112_20:
  3388  001596  0E00               	movlw	0
  3389  001598                     u112_26:
  3390  001598  0AFF               	xorlw	255
  3391  00159A  6E65               	movwf	btemp+11,c
  3392  00159C  5081               	movf	3969,w,c	;volatile
  3393  00159E  1865               	xorwf	btemp+11,w,c
  3394  0015A0  0BFE               	andlw	-2
  3395  0015A2  1865               	xorwf	btemp+11,w,c
  3396  0015A4  6E81               	movwf	3969,c	;volatile
  3397  0015A6                     l2402:
  3398                           
  3399                           ;scheduler.c: 32: j++;
  3400                           ;stkvar	rr_scheduler@j @ sp[(-6)+2]
  3401  0015A6  0EFC               	movlw	-4
  3402  0015A8  50E3               	movf	plusw1,w,c
  3403  0015AA  0F01               	addlw	1
  3404  0015AC  6E5A               	movwf	btemp,c
  3405  0015AE  0EFC               	movlw	-4
  3406  0015B0  C05A  FFE3         	movff	btemp,plusw1
  3407  0015B4  6A5A               	clrf	btemp,c
  3408  0015B6  0EFD               	movlw	-3
  3409  0015B8  50E3               	movf	plusw1,w,c
  3410  0015BA  205A               	addwfc	btemp,w,c
  3411  0015BC  6E5A               	movwf	btemp,c
  3412  0015BE  0EFD               	movlw	-3
  3413  0015C0  C05A  FFE3         	movff	btemp,plusw1
  3414                           
  3415                           ;scheduler.c: 33: next_task_to_run = (j) % tasks_installed;
  3416  0015C4  C019  FFE6         	movff	_tasks_installed,postinc1
  3417  0015C8  C01A  FFE6         	movff	_tasks_installed+1,postinc1
  3418                           
  3419                           ;stkvar	rr_scheduler@j @ sp[(-8)+2]
  3420  0015CC  0EFA               	movlw	-6
  3421  0015CE  CFE3 FFE6          	movff	plusw1,postinc1
  3422  0015D2  CFE3 FFE6          	movff	plusw1,postinc1
  3423  0015D6  EC22  F00B         	call	___lwmod	;wreg free
  3424                           
  3425                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  3426  0015DA  0EFA               	movlw	-6
  3427  0015DC  C05A  FFE3         	movff	btemp,plusw1
  3428  0015E0  0EFB               	movlw	-5
  3429  0015E2  C05B  FFE3         	movff	btemp+1,plusw1
  3430                           
  3431                           ;scheduler.c: 34: } while (F_APTOS[next_task_to_run].task_state != READY || (cont>0 && n
      +                          ext_task_to_run == 0));
  3432  0015E6  0E11               	movlw	17
  3433  0015E8  6EE6               	movwf	postinc1,c
  3434  0015EA  0E00               	movlw	0
  3435  0015EC  6EE6               	movwf	postinc1,c
  3436                           
  3437                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-8)+0]
  3438  0015EE  0EF8               	movlw	-8
  3439  0015F0  CFE3 FFE6          	movff	plusw1,postinc1
  3440  0015F4  CFE3 FFE6          	movff	plusw1,postinc1
  3441  0015F8  ECD2  F00C         	call	___wmul	;wreg free
  3442  0015FC  0E08               	movlw	low (_F_APTOS+8)
  3443  0015FE  245A               	addwf	btemp,w,c
  3444  001600  6ED9               	movwf	fsr2l,c
  3445  001602  0E01               	movlw	high (_F_APTOS+8)
  3446  001604  205B               	addwfc	btemp+1,w,c
  3447  001606  6EDA               	movwf	fsr2h,c
  3448  001608  04DE               	decf	postinc2,w,c
  3449  00160A  A4D8               	btfss	status,2,c
  3450  00160C  D7CC               	goto	l2402
  3451                           
  3452                           ;stkvar	rr_scheduler@cont @ sp[(-6)+4]
  3453  00160E  0EFE               	movlw	-2
  3454  001610  CFE3 F05A          	movff	plusw1,btemp
  3455  001614  0EFF               	movlw	-1
  3456  001616  50E3               	movf	plusw1,w,c
  3457  001618  105A               	iorwf	btemp,w,c
  3458  00161A  B4D8               	btfsc	status,2,c
  3459  00161C  D008               	goto	u115_20
  3460                           
  3461                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  3462  00161E  0EFA               	movlw	-6
  3463  001620  CFE3 F05A          	movff	plusw1,btemp
  3464  001624  0EFB               	movlw	-5
  3465  001626  50E3               	movf	plusw1,w,c
  3466  001628  105A               	iorwf	btemp,w,c
  3467  00162A  B4D8               	btfsc	status,2,c
  3468  00162C  D7BC               	goto	l2402
  3469  00162E                     u115_20:
  3470                           
  3471                           ;scheduler.c: 36: return next_task_to_run;
  3472                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  3473  00162E  0EFA               	movlw	-6
  3474  001630  CFE3 F05A          	movff	plusw1,btemp
  3475  001634  0EFB               	movlw	-5
  3476  001636  CFE3 F05B          	movff	plusw1,btemp+1
  3477                           
  3478                           ; _rr_scheduler: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3479  00163A  0EFA               	movlw	250
  3480  00163C  26E1               	addwf	fsr1l,f,c
  3481  00163E  0EFF               	movlw	255
  3482  001640  22E2               	addwfc	fsr1h,f,c
  3483  001642  0012               	return		;funcret
  3484  001644                     __end_of_rr_scheduler:
  3485                           	opt stack 0
  3486                           tosu	equ	0xFFF
  3487                           tosh	equ	0xFFE
  3488                           tosl	equ	0xFFD
  3489                           stkptr	equ	0xFFC
  3490                           tblptru	equ	0xFF8
  3491                           tblptrh	equ	0xFF7
  3492                           tblptrl	equ	0xFF6
  3493                           tablat	equ	0xFF5
  3494                           prodh	equ	0xFF4
  3495                           prodl	equ	0xFF3
  3496                           intcon	equ	0xFF2
  3497                           postinc0	equ	0xFEE
  3498                           postdec0	equ	0xFED
  3499                           plusw0	equ	0xFEB
  3500                           fsr0h	equ	0xFEA
  3501                           fsr0l	equ	0xFE9
  3502                           wreg	equ	0xFE8
  3503                           postinc1	equ	0xFE6
  3504                           postdec1	equ	0xFE5
  3505                           plusw1	equ	0xFE3
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           bsr	equ	0xFE0
  3509                           indf2	equ	0xFDF
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           plusw2	equ	0xFDB
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _contagemR *****************
  3518 ;; Defined at:
  3519 ;;		line 13 in file "scheduler.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  i               2  [STACK] int 
  3524 ;;  x               2  [STACK] unsigned int 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  2  [STACK] unsigned int 
  3527 ;; Registers used:
  3528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+11, prodl, prodh
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3534 ;;      Params:         0       0       0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0       0       0
  3537 ;;      Totals:         0       0       0       0       0       0       0
  3538 ;;Total ram usage:        0 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    6
  3541 ;; This function calls:
  3542 ;;		___wmul
  3543 ;; This function is called by:
  3544 ;;		_rr_scheduler
  3545 ;; This function uses a reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text16
  3549  001700                     __ptext16:
  3550                           	opt stack 0
  3551  001700                     _contagemR:
  3552                           	opt stack 0
  3553                           
  3554                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3555  001700  52E6               	movf	postinc1,f,c
  3556  001702  52E6               	movf	postinc1,f,c
  3557  001704  52E6               	movf	postinc1,f,c
  3558  001706  52E6               	movf	postinc1,f,c
  3559                           
  3560                           ;scheduler.c: 15: u_int x = 0;
  3561                           ;stkvar	contagemR@x @ sp[(-4)+2]
  3562                           
  3563                           ;incstack = 0
  3564  001708  0EFE               	movlw	-2
  3565  00170A  6AE3               	clrf	plusw1,c
  3566  00170C  0EFF               	movlw	-1
  3567  00170E  6AE3               	clrf	plusw1,c
  3568                           
  3569                           ;scheduler.c: 16: for (int i = 1; i < 10 ; i++)
  3570  001710  0E01               	movlw	1
  3571  001712  6E5B               	movwf	btemp+1,c
  3572  001714  0E00               	movlw	0
  3573  001716  6E5C               	movwf	btemp+2,c
  3574                           
  3575                           ;stkvar	contagemR@i @ sp[(-4)+0]
  3576  001718  0EFC               	movlw	-4
  3577  00171A  C05B  FFE3         	movff	btemp+1,plusw1
  3578  00171E  0EFD               	movlw	-3
  3579  001720  C05C  FFE3         	movff	btemp+2,plusw1
  3580  001724                     l2374:
  3581                           
  3582                           ;scheduler.c: 17: {
  3583                           ;scheduler.c: 18: if (F_APTOS[i].task_state == READY) x++;
  3584  001724  0E11               	movlw	17
  3585  001726  6EE6               	movwf	postinc1,c
  3586  001728  0E00               	movlw	0
  3587  00172A  6EE6               	movwf	postinc1,c
  3588                           
  3589                           ;stkvar	contagemR@i @ sp[(-6)+0]
  3590  00172C  0EFA               	movlw	-6
  3591  00172E  CFE3 FFE6          	movff	plusw1,postinc1
  3592  001732  CFE3 FFE6          	movff	plusw1,postinc1
  3593  001736  ECD2  F00C         	call	___wmul	;wreg free
  3594  00173A  0E08               	movlw	low (_F_APTOS+8)
  3595  00173C  245A               	addwf	btemp,w,c
  3596  00173E  6ED9               	movwf	fsr2l,c
  3597  001740  0E01               	movlw	high (_F_APTOS+8)
  3598  001742  205B               	addwfc	btemp+1,w,c
  3599  001744  6EDA               	movwf	fsr2h,c
  3600  001746  04DE               	decf	postinc2,w,c
  3601  001748  A4D8               	btfss	status,2,c
  3602  00174A  D00F               	goto	l246
  3603                           
  3604                           ;stkvar	contagemR@x @ sp[(-4)+2]
  3605  00174C  0EFE               	movlw	-2
  3606  00174E  50E3               	movf	plusw1,w,c
  3607  001750  0F01               	addlw	1
  3608  001752  6E5A               	movwf	btemp,c
  3609  001754  0EFE               	movlw	-2
  3610  001756  C05A  FFE3         	movff	btemp,plusw1
  3611  00175A  6A5A               	clrf	btemp,c
  3612  00175C  0EFF               	movlw	-1
  3613  00175E  50E3               	movf	plusw1,w,c
  3614  001760  205A               	addwfc	btemp,w,c
  3615  001762  6E5A               	movwf	btemp,c
  3616  001764  0EFF               	movlw	-1
  3617  001766  C05A  FFE3         	movff	btemp,plusw1
  3618  00176A                     l246:
  3619                           
  3620                           ;stkvar	contagemR@i @ sp[(-4)+0]
  3621  00176A  0EFC               	movlw	-4
  3622  00176C  50E3               	movf	plusw1,w,c
  3623  00176E  0F01               	addlw	1
  3624  001770  6E5A               	movwf	btemp,c
  3625  001772  0EFC               	movlw	-4
  3626  001774  C05A  FFE3         	movff	btemp,plusw1
  3627  001778  6A5A               	clrf	btemp,c
  3628  00177A  0EFD               	movlw	-3
  3629  00177C  50E3               	movf	plusw1,w,c
  3630  00177E  205A               	addwfc	btemp,w,c
  3631  001780  6E5A               	movwf	btemp,c
  3632  001782  0EFD               	movlw	-3
  3633  001784  C05A  FFE3         	movff	btemp,plusw1
  3634                           
  3635                           ;stkvar	contagemR@i @ sp[(-4)+0]
  3636  001788  0EFD               	movlw	-3
  3637  00178A  BEE3               	btfsc	plusw1,7,c
  3638  00178C  D7CB               	goto	l2374
  3639  00178E  0EFD               	movlw	-3
  3640  001790  50E3               	movf	plusw1,w,c
  3641  001792  E107               	bnz	u110_20
  3642  001794  0EFC               	movlw	-4
  3643  001796  CFE3 F05A          	movff	plusw1,btemp
  3644  00179A  0E0A               	movlw	10
  3645  00179C  5E5A               	subwf	btemp,f,c
  3646  00179E  A0D8               	btfss	status,0,c
  3647  0017A0  D7C1               	goto	l2374
  3648  0017A2                     u110_20:
  3649                           
  3650                           ;scheduler.c: 19: }
  3651                           ;scheduler.c: 20: return x;
  3652                           ;stkvar	contagemR@x @ sp[(-4)+2]
  3653  0017A2  0EFE               	movlw	-2
  3654  0017A4  CFE3 F05A          	movff	plusw1,btemp
  3655  0017A8  0EFF               	movlw	-1
  3656  0017AA  CFE3 F05B          	movff	plusw1,btemp+1
  3657                           
  3658                           ; _contagemR: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3659  0017AE  52E5               	movf	postdec1,f,c
  3660  0017B0  52E5               	movf	postdec1,f,c
  3661  0017B2  52E5               	movf	postdec1,f,c
  3662  0017B4  52E5               	movf	postdec1,f,c
  3663  0017B6  0012               	return		;funcret
  3664  0017B8                     __end_of_contagemR:
  3665                           	opt stack 0
  3666                           tosu	equ	0xFFF
  3667                           tosh	equ	0xFFE
  3668                           tosl	equ	0xFFD
  3669                           stkptr	equ	0xFFC
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           postinc0	equ	0xFEE
  3678                           postdec0	equ	0xFED
  3679                           plusw0	equ	0xFEB
  3680                           fsr0h	equ	0xFEA
  3681                           fsr0l	equ	0xFE9
  3682                           wreg	equ	0xFE8
  3683                           postinc1	equ	0xFE6
  3684                           postdec1	equ	0xFE5
  3685                           plusw1	equ	0xFE3
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           bsr	equ	0xFE0
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           postdec2	equ	0xFDD
  3692                           plusw2	equ	0xFDB
  3693                           fsr2h	equ	0xFDA
  3694                           fsr2l	equ	0xFD9
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function ___lwmod *****************
  3698 ;; Defined at:
  3699 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  dividend        2  [STACK] unsigned int 
  3702 ;;  divisor         2  [STACK] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  counter         1  [STACK] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  2  [STACK] unsigned int 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3714 ;;      Params:         0       0       0       0       0       0       0
  3715 ;;      Locals:         0       0       0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0
  3717 ;;      Totals:         0       0       0       0       0       0       0
  3718 ;;Total ram usage:        0 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    5
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_rr_scheduler
  3725 ;;		_sem_wait
  3726 ;;		_sem_post
  3727 ;;		_pipe_read
  3728 ;;		_pipe_write
  3729 ;; This function uses a reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text17
  3733  001644                     __ptext17:
  3734                           	opt stack 0
  3735  001644                     ___lwmod:
  3736                           	opt stack 0
  3737                           
  3738                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  3739  001644  52E6               	movf	postinc1,f,c
  3740                           
  3741                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3742                           
  3743                           ;incstack = 0
  3744  001646  0EFB               	movlw	-5
  3745  001648  CFE3 F05A          	movff	plusw1,btemp
  3746  00164C  0EFC               	movlw	-4
  3747  00164E  50E3               	movf	plusw1,w,c
  3748  001650  105A               	iorwf	btemp,w,c
  3749  001652  B4D8               	btfsc	status,2,c
  3750  001654  D04A               	goto	u68_20
  3751                           
  3752                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3753  001656  0EFF               	movlw	-1
  3754  001658  6AE3               	clrf	plusw1,c
  3755  00165A  D010               	goto	L3
  3756  00165C                     l1822:
  3757                           
  3758                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3759  00165C  0EFB               	movlw	-5
  3760  00165E  50E3               	movf	plusw1,w,c
  3761  001660  90D8               	bcf	status,0,c
  3762  001662  34E8               	rlcf	wreg,w,c
  3763  001664  6E5A               	movwf	btemp,c
  3764  001666  0EFB               	movlw	-5
  3765  001668  C05A  FFE3         	movff	btemp,plusw1
  3766  00166C  0EFC               	movlw	-4
  3767  00166E  50E3               	movf	plusw1,w,c
  3768  001670  34E8               	rlcf	wreg,w,c
  3769  001672  6E5A               	movwf	btemp,c
  3770  001674  0EFC               	movlw	-4
  3771  001676  C05A  FFE3         	movff	btemp,plusw1
  3772                           
  3773                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3774  00167A  0EFF               	movlw	-1
  3775  00167C                     L3:
  3776  00167C  2AE3               	incf	plusw1,f,c
  3777                           
  3778                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3779  00167E  0EFC               	movlw	-4
  3780  001680  AEE3               	btfss	plusw1,7,c
  3781  001682  D7EC               	goto	l1822
  3782  001684                     u66_20:
  3783                           
  3784                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3785  001684  0EFB               	movlw	-5
  3786  001686  CFE3 F05B          	movff	plusw1,btemp+1
  3787  00168A  0EFC               	movlw	-4
  3788  00168C  CFE3 F05C          	movff	plusw1,btemp+2
  3789                           
  3790                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3791  001690  0EFD               	movlw	-3
  3792  001692  CFE3 F064          	movff	plusw1,btemp+10
  3793  001696  0EFE               	movlw	-2
  3794  001698  CFE3 F065          	movff	plusw1,btemp+11
  3795  00169C  505B               	movf	btemp+1,w,c
  3796  00169E  5C64               	subwf	btemp+10,w,c
  3797  0016A0  505C               	movf	btemp+2,w,c
  3798  0016A2  5865               	subwfb	btemp+11,w,c
  3799  0016A4  A0D8               	btfss	status,0,c
  3800  0016A6  D012               	goto	l1832
  3801                           
  3802                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3803                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3804  0016A8  0EFD               	movlw	-3
  3805  0016AA  50E3               	movf	plusw1,w,c
  3806  0016AC  6E5A               	movwf	btemp,c
  3807  0016AE  0EFB               	movlw	-5
  3808  0016B0  50E3               	movf	plusw1,w,c
  3809  0016B2  5E5A               	subwf	btemp,f,c
  3810  0016B4  0EFD               	movlw	-3
  3811  0016B6  C05A  FFE3         	movff	btemp,plusw1
  3812  0016BA  0EFE               	movlw	-2
  3813  0016BC  50E3               	movf	plusw1,w,c
  3814  0016BE  6E5A               	movwf	btemp,c
  3815  0016C0  0EFC               	movlw	-4
  3816  0016C2  50E3               	movf	plusw1,w,c
  3817  0016C4  5A5A               	subwfb	btemp,f,c
  3818  0016C6  0EFE               	movlw	-2
  3819  0016C8  C05A  FFE3         	movff	btemp,plusw1
  3820  0016CC                     l1832:
  3821                           
  3822                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3823  0016CC  90D8               	bcf	status,0,c
  3824  0016CE  0EFC               	movlw	-4
  3825  0016D0  32E3               	rrcf	plusw1,f,c
  3826  0016D2  0EFB               	movlw	-5
  3827  0016D4  32E3               	rrcf	plusw1,f,c
  3828                           
  3829                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3830  0016D6  0EFF               	movlw	-1
  3831  0016D8  50E3               	movf	plusw1,w,c
  3832  0016DA  6E5A               	movwf	btemp,c
  3833  0016DC  0E01               	movlw	1
  3834  0016DE  5E5A               	subwf	btemp,f,c
  3835  0016E0  0EFF               	movlw	-1
  3836  0016E2  C05A  FFE3         	movff	btemp,plusw1
  3837  0016E6  A4D8               	btfss	status,2,c
  3838  0016E8  D7CD               	goto	u66_20
  3839  0016EA                     u68_20:
  3840                           
  3841                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3842  0016EA  0EFD               	movlw	-3
  3843  0016EC  CFE3 F05A          	movff	plusw1,btemp
  3844  0016F0  0EFE               	movlw	-2
  3845  0016F2  CFE3 F05B          	movff	plusw1,btemp+1
  3846                           
  3847                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3848  0016F6  0EFB               	movlw	251
  3849  0016F8  26E1               	addwf	fsr1l,f,c
  3850  0016FA  0EFF               	movlw	255
  3851  0016FC  22E2               	addwfc	fsr1h,f,c
  3852  0016FE  0012               	return		;funcret
  3853  001700                     __end_of___lwmod:
  3854                           	opt stack 0
  3855                           tosu	equ	0xFFF
  3856                           tosh	equ	0xFFE
  3857                           tosl	equ	0xFFD
  3858                           stkptr	equ	0xFFC
  3859                           tblptru	equ	0xFF8
  3860                           tblptrh	equ	0xFF7
  3861                           tblptrl	equ	0xFF6
  3862                           tablat	equ	0xFF5
  3863                           prodh	equ	0xFF4
  3864                           prodl	equ	0xFF3
  3865                           intcon	equ	0xFF2
  3866                           postinc0	equ	0xFEE
  3867                           postdec0	equ	0xFED
  3868                           plusw0	equ	0xFEB
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           postinc1	equ	0xFE6
  3873                           postdec1	equ	0xFE5
  3874                           plusw1	equ	0xFE3
  3875                           fsr1h	equ	0xFE2
  3876                           fsr1l	equ	0xFE1
  3877                           bsr	equ	0xFE0
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           postdec2	equ	0xFDD
  3881                           plusw2	equ	0xFDB
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886 ;; *************** function _led_2 *****************
  3887 ;; Defined at:
  3888 ;;		line 340 in file "tasks.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1  [STACK] void 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3902 ;;      Params:         0       0       0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   10
  3909 ;; This function calls:
  3910 ;;		_delay
  3911 ;;		_sem_post
  3912 ;;		_sem_wait
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text18
  3919  001ACC                     __ptext18:
  3920                           	opt stack 0
  3921  001ACC                     _led_2:
  3922                           	opt stack 17
  3923                           
  3924                           ;tasks.c: 343: PORTDbits.RD5 = 0;
  3925                           
  3926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3927                           ;incstack = 0
  3928  001ACC  9A83               	bcf	3971,5,c	;volatile
  3929                           
  3930                           ;tasks.c: 344: PORTDbits.RD6 = 0;
  3931  001ACE  9C83               	bcf	3971,6,c	;volatile
  3932                           
  3933                           ;tasks.c: 345: PORTDbits.RD4 = 0;
  3934  001AD0  9883               	bcf	3971,4,c	;volatile
  3935                           
  3936                           ;tasks.c: 346: PORTDbits.RD1 = 0;
  3937  001AD2  9283               	bcf	3971,1,c	;volatile
  3938  001AD4                     l213:
  3939                           
  3940                           ;tasks.c: 349: {
  3941                           ;tasks.c: 351: PORTDbits.RD5 = 1;
  3942  001AD4  8A83               	bsf	3971,5,c	;volatile
  3943                           
  3944                           ;tasks.c: 353: delay(6000);
  3945  001AD6  0E70               	movlw	112
  3946  001AD8  6EE6               	movwf	postinc1,c
  3947  001ADA  0E17               	movlw	23
  3948  001ADC  6EE6               	movwf	postinc1,c
  3949  001ADE  EC93  F00E         	call	_delay	;wreg free
  3950                           
  3951                           ;tasks.c: 355: sem_wait(&spista);
  3952  001AE2  0E3B               	movlw	low _spista
  3953  001AE4  6EE6               	movwf	postinc1,c
  3954  001AE6  0E00               	movlw	high _spista
  3955  001AE8  6EE6               	movwf	postinc1,c
  3956  001AEA  ECB8  F009         	call	_sem_wait	;wreg free
  3957                           
  3958                           ;tasks.c: 357: PORTDbits.RD5 = 0;
  3959  001AEE  9A83               	bcf	3971,5,c	;volatile
  3960                           
  3961                           ;tasks.c: 359: PORTDbits.RD6 = 1;
  3962  001AF0  8C83               	bsf	3971,6,c	;volatile
  3963                           
  3964                           ;tasks.c: 361: delay(6000);
  3965  001AF2  0E70               	movlw	112
  3966  001AF4  6EE6               	movwf	postinc1,c
  3967  001AF6  0E17               	movlw	23
  3968  001AF8  6EE6               	movwf	postinc1,c
  3969  001AFA  EC93  F00E         	call	_delay	;wreg free
  3970                           
  3971                           ;tasks.c: 364: PORTDbits.RD6 = 0;
  3972  001AFE  9C83               	bcf	3971,6,c	;volatile
  3973                           
  3974                           ;tasks.c: 367: sem_post(&spista);
  3975  001B00  0E3B               	movlw	low _spista
  3976  001B02  6EE6               	movwf	postinc1,c
  3977  001B04  0E00               	movlw	high _spista
  3978  001B06  6EE6               	movwf	postinc1,c
  3979  001B08  EC2A  F007         	call	_sem_post	;wreg free
  3980                           
  3981                           ;tasks.c: 368: delay(300);
  3982  001B0C  0E2C               	movlw	44
  3983  001B0E  6EE6               	movwf	postinc1,c
  3984  001B10  0E01               	movlw	1
  3985  001B12  6EE6               	movwf	postinc1,c
  3986  001B14  EC93  F00E         	call	_delay	;wreg free
  3987                           
  3988                           ;tasks.c: 370: PORTDbits.RD1 = 1;
  3989  001B18  8283               	bsf	3971,1,c	;volatile
  3990                           
  3991                           ;tasks.c: 371: delay(6000);
  3992  001B1A  0E70               	movlw	112
  3993  001B1C  6EE6               	movwf	postinc1,c
  3994  001B1E  0E17               	movlw	23
  3995  001B20  6EE6               	movwf	postinc1,c
  3996  001B22  EC93  F00E         	call	_delay	;wreg free
  3997                           
  3998                           ;tasks.c: 373: sem_wait(&spista);
  3999  001B26  0E3B               	movlw	low _spista
  4000  001B28  6EE6               	movwf	postinc1,c
  4001  001B2A  0E00               	movlw	high _spista
  4002  001B2C  6EE6               	movwf	postinc1,c
  4003  001B2E  ECB8  F009         	call	_sem_wait	;wreg free
  4004                           
  4005                           ;tasks.c: 375: PORTDbits.RD1 = 0;
  4006  001B32  9283               	bcf	3971,1,c	;volatile
  4007                           
  4008                           ;tasks.c: 377: PORTDbits.RD4 = 1;
  4009  001B34  8883               	bsf	3971,4,c	;volatile
  4010                           
  4011                           ;tasks.c: 379: delay(6000);
  4012  001B36  0E70               	movlw	112
  4013  001B38  6EE6               	movwf	postinc1,c
  4014  001B3A  0E17               	movlw	23
  4015  001B3C  6EE6               	movwf	postinc1,c
  4016  001B3E  EC93  F00E         	call	_delay	;wreg free
  4017                           
  4018                           ;tasks.c: 381: PORTDbits.RD4 = 0;
  4019  001B42  9883               	bcf	3971,4,c	;volatile
  4020                           
  4021                           ;tasks.c: 383: sem_post(&spista);
  4022  001B44  0E3B               	movlw	low _spista
  4023  001B46  6EE6               	movwf	postinc1,c
  4024  001B48  0E00               	movlw	high _spista
  4025  001B4A  6EE6               	movwf	postinc1,c
  4026  001B4C  EC2A  F007         	call	_sem_post	;wreg free
  4027  001B50  D7C1               	goto	l213
  4028  001B52                     __end_of_led_2:
  4029                           	opt stack 0
  4030                           tosu	equ	0xFFF
  4031                           tosh	equ	0xFFE
  4032                           tosl	equ	0xFFD
  4033                           stkptr	equ	0xFFC
  4034                           tblptru	equ	0xFF8
  4035                           tblptrh	equ	0xFF7
  4036                           tblptrl	equ	0xFF6
  4037                           tablat	equ	0xFF5
  4038                           prodh	equ	0xFF4
  4039                           prodl	equ	0xFF3
  4040                           intcon	equ	0xFF2
  4041                           postinc0	equ	0xFEE
  4042                           postdec0	equ	0xFED
  4043                           plusw0	equ	0xFEB
  4044                           fsr0h	equ	0xFEA
  4045                           fsr0l	equ	0xFE9
  4046                           wreg	equ	0xFE8
  4047                           postinc1	equ	0xFE6
  4048                           postdec1	equ	0xFE5
  4049                           plusw1	equ	0xFE3
  4050                           fsr1h	equ	0xFE2
  4051                           fsr1l	equ	0xFE1
  4052                           bsr	equ	0xFE0
  4053                           indf2	equ	0xFDF
  4054                           postinc2	equ	0xFDE
  4055                           postdec2	equ	0xFDD
  4056                           plusw2	equ	0xFDB
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _led_3 *****************
  4062 ;; Defined at:
  4063 ;;		line 390 in file "tasks.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;		None
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;		None
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1  [STACK] void 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4077 ;;      Params:         0       0       0       0       0       0       0
  4078 ;;      Locals:         0       0       0       0       0       0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0
  4080 ;;      Totals:         0       0       0       0       0       0       0
  4081 ;;Total ram usage:        0 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:   10
  4084 ;; This function calls:
  4085 ;;		_delay
  4086 ;;		_pipe_create
  4087 ;;		_pipe_write
  4088 ;;		_sem_post
  4089 ;;		_sem_wait
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text19
  4096  001864                     __ptext19:
  4097                           	opt stack 0
  4098  001864                     _led_3:
  4099                           	opt stack 17
  4100                           
  4101                           ;tasks.c: 393: pipe_create(&testL ,4,1);
  4102                           
  4103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4104                           ;incstack = 0
  4105  001864  0E01               	movlw	1
  4106  001866  6EE6               	movwf	postinc1,c
  4107  001868  0E00               	movlw	0
  4108  00186A  6EE6               	movwf	postinc1,c
  4109  00186C  0E04               	movlw	4
  4110  00186E  6EE6               	movwf	postinc1,c
  4111  001870  0E00               	movlw	0
  4112  001872  6EE6               	movwf	postinc1,c
  4113  001874  0E1B               	movlw	low _testL
  4114  001876  6EE6               	movwf	postinc1,c
  4115  001878  0E00               	movlw	high _testL
  4116  00187A  6EE6               	movwf	postinc1,c
  4117  00187C  EC3F  F00A         	call	_pipe_create	;wreg free
  4118                           
  4119                           ;tasks.c: 397: PORTDbits.RD7 = 0;
  4120  001880  9E83               	bcf	3971,7,c	;volatile
  4121                           
  4122                           ;tasks.c: 398: PORTDbits.RD6 = 0;
  4123  001882  9C83               	bcf	3971,6,c	;volatile
  4124                           
  4125                           ;tasks.c: 399: PORTDbits.RD4 = 0;
  4126  001884  9883               	bcf	3971,4,c	;volatile
  4127                           
  4128                           ;tasks.c: 400: PORTDbits.RD2 = 0;
  4129  001886  9483               	bcf	3971,2,c	;volatile
  4130  001888                     l2732:
  4131                           
  4132                           ;tasks.c: 404: PORTDbits.RD7 = 1;
  4133  001888  8E83               	bsf	3971,7,c	;volatile
  4134                           
  4135                           ;tasks.c: 406: delay(6000);
  4136  00188A  0E70               	movlw	112
  4137  00188C  6EE6               	movwf	postinc1,c
  4138  00188E  0E17               	movlw	23
  4139  001890  6EE6               	movwf	postinc1,c
  4140  001892  EC93  F00E         	call	_delay	;wreg free
  4141                           
  4142                           ;tasks.c: 408: sem_wait(&spista);
  4143  001896  0E3B               	movlw	low _spista
  4144  001898  6EE6               	movwf	postinc1,c
  4145  00189A  0E00               	movlw	high _spista
  4146  00189C  6EE6               	movwf	postinc1,c
  4147  00189E  ECB8  F009         	call	_sem_wait	;wreg free
  4148                           
  4149                           ;tasks.c: 410: PORTDbits.RD7 = 0;
  4150  0018A2  9E83               	bcf	3971,7,c	;volatile
  4151                           
  4152                           ;tasks.c: 412: PORTDbits.RD6 = 1;
  4153  0018A4  8C83               	bsf	3971,6,c	;volatile
  4154                           
  4155                           ;tasks.c: 414: delay(6000);
  4156  0018A6  0E70               	movlw	112
  4157  0018A8  6EE6               	movwf	postinc1,c
  4158  0018AA  0E17               	movlw	23
  4159  0018AC  6EE6               	movwf	postinc1,c
  4160  0018AE  EC93  F00E         	call	_delay	;wreg free
  4161                           
  4162                           ;tasks.c: 417: PORTDbits.RD6 = 0;
  4163  0018B2  9C83               	bcf	3971,6,c	;volatile
  4164                           
  4165                           ;tasks.c: 420: sem_post(&spista);
  4166  0018B4  0E3B               	movlw	low _spista
  4167  0018B6  6EE6               	movwf	postinc1,c
  4168  0018B8  0E00               	movlw	high _spista
  4169  0018BA  6EE6               	movwf	postinc1,c
  4170  0018BC  EC2A  F007         	call	_sem_post	;wreg free
  4171                           
  4172                           ;tasks.c: 423: pipe_write(&testL, 't');
  4173  0018C0  0E74               	movlw	116
  4174  0018C2  6EE6               	movwf	postinc1,c
  4175  0018C4  0E1B               	movlw	low _testL
  4176  0018C6  6EE6               	movwf	postinc1,c
  4177  0018C8  0E00               	movlw	high _testL
  4178  0018CA  6EE6               	movwf	postinc1,c
  4179  0018CC  EC7D  F008         	call	_pipe_write	;wreg free
  4180                           
  4181                           ;tasks.c: 424: PORTDbits.RD2 = 1;
  4182  0018D0  8483               	bsf	3971,2,c	;volatile
  4183                           
  4184                           ;tasks.c: 426: delay(6000);
  4185  0018D2  0E70               	movlw	112
  4186  0018D4  6EE6               	movwf	postinc1,c
  4187  0018D6  0E17               	movlw	23
  4188  0018D8  6EE6               	movwf	postinc1,c
  4189  0018DA  EC93  F00E         	call	_delay	;wreg free
  4190                           
  4191                           ;tasks.c: 430: sem_wait(&spista);
  4192  0018DE  0E3B               	movlw	low _spista
  4193  0018E0  6EE6               	movwf	postinc1,c
  4194  0018E2  0E00               	movlw	high _spista
  4195  0018E4  6EE6               	movwf	postinc1,c
  4196  0018E6  ECB8  F009         	call	_sem_wait	;wreg free
  4197                           
  4198                           ;tasks.c: 432: PORTDbits.RD2 = 0;
  4199  0018EA  9483               	bcf	3971,2,c	;volatile
  4200                           
  4201                           ;tasks.c: 435: PORTDbits.RD4 = 1;
  4202  0018EC  8883               	bsf	3971,4,c	;volatile
  4203                           
  4204                           ;tasks.c: 437: delay(6000);
  4205  0018EE  0E70               	movlw	112
  4206  0018F0  6EE6               	movwf	postinc1,c
  4207  0018F2  0E17               	movlw	23
  4208  0018F4  6EE6               	movwf	postinc1,c
  4209  0018F6  EC93  F00E         	call	_delay	;wreg free
  4210                           
  4211                           ;tasks.c: 439: PORTDbits.RD4 = 0;
  4212  0018FA  9883               	bcf	3971,4,c	;volatile
  4213                           
  4214                           ;tasks.c: 441: sem_post(&spista);
  4215  0018FC  0E3B               	movlw	low _spista
  4216  0018FE  6EE6               	movwf	postinc1,c
  4217  001900  0E00               	movlw	high _spista
  4218  001902  6EE6               	movwf	postinc1,c
  4219  001904  EC2A  F007         	call	_sem_post	;wreg free
  4220  001908  D7BF               	goto	l2732
  4221  00190A                     __end_of_led_3:
  4222                           	opt stack 0
  4223                           tosu	equ	0xFFF
  4224                           tosh	equ	0xFFE
  4225                           tosl	equ	0xFFD
  4226                           stkptr	equ	0xFFC
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           prodh	equ	0xFF4
  4232                           prodl	equ	0xFF3
  4233                           intcon	equ	0xFF2
  4234                           postinc0	equ	0xFEE
  4235                           postdec0	equ	0xFED
  4236                           plusw0	equ	0xFEB
  4237                           fsr0h	equ	0xFEA
  4238                           fsr0l	equ	0xFE9
  4239                           wreg	equ	0xFE8
  4240                           postinc1	equ	0xFE6
  4241                           postdec1	equ	0xFE5
  4242                           plusw1	equ	0xFE3
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           bsr	equ	0xFE0
  4246                           indf2	equ	0xFDF
  4247                           postinc2	equ	0xFDE
  4248                           postdec2	equ	0xFDD
  4249                           plusw2	equ	0xFDB
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function _pipe_write *****************
  4255 ;; Defined at:
  4256 ;;		line 122 in file "pipe.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  pipe_handler    2  [STACK] PTR struct pipe
  4259 ;;		 -> testL(12), 
  4260 ;;  msg             1  [STACK] unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1  [STACK] void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4272 ;;      Params:         0       0       0       0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    9
  4279 ;; This function calls:
  4280 ;;		___lwmod
  4281 ;;		_dispatcher
  4282 ;;		_libera_processos
  4283 ;; This function is called by:
  4284 ;;		_led_3
  4285 ;; This function uses a reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text20
  4289  0010FA                     __ptext20:
  4290                           	opt stack 0
  4291  0010FA                     _pipe_write:
  4292                           	opt stack 17
  4293                           
  4294                           ;pipe.c: 124: INTCONbits.GIE = 0;
  4295                           
  4296                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
  4297                           ;incstack = 0
  4298  0010FA  9EF2               	bcf	intcon,7,c	;volatile
  4299                           
  4300                           ;pipe.c: 126: if (pipe_handler->p_count == pipe_handler->p_size) {
  4301                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4302  0010FC  0EFE               	movlw	-2
  4303  0010FE  CFE3 F05B          	movff	plusw1,btemp+1
  4304  001102  0EFF               	movlw	-1
  4305  001104  CFE3 F05C          	movff	plusw1,btemp+2
  4306  001108  0E08               	movlw	8
  4307  00110A  245B               	addwf	btemp+1,w,c
  4308  00110C  6ED9               	movwf	fsr2l,c
  4309  00110E  0E00               	movlw	0
  4310  001110  205C               	addwfc	btemp+2,w,c
  4311  001112  6EDA               	movwf	fsr2h,c
  4312                           
  4313                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4314  001114  0EFE               	movlw	-2
  4315  001116  CFE3 F05B          	movff	plusw1,btemp+1
  4316  00111A  0EFF               	movlw	-1
  4317  00111C  CFE3 F05C          	movff	plusw1,btemp+2
  4318  001120  0E0A               	movlw	10
  4319  001122  245B               	addwf	btemp+1,w,c
  4320  001124  6EE9               	movwf	fsr0l,c
  4321  001126  0E00               	movlw	0
  4322  001128  205C               	addwfc	btemp+2,w,c
  4323  00112A  6EEA               	movwf	fsr0h,c
  4324  00112C  50DE               	movf	postinc2,w,c
  4325  00112E  18EE               	xorwf	postinc0,w,c
  4326  001130  E109               	bnz	l2548
  4327  001132  50DE               	movf	postinc2,w,c
  4328  001134  18EE               	xorwf	postinc0,w,c
  4329  001136  A4D8               	btfss	status,2,c
  4330  001138  D005               	goto	l2548
  4331                           
  4332                           ;pipe.c: 129: dispatcher(WAITING_PIPE);
  4333  00113A  0E05               	movlw	5
  4334  00113C  6EE6               	movwf	postinc1,c
  4335  00113E  EC03  F003         	call	_dispatcher	;wreg free
  4336                           
  4337                           ;pipe.c: 130: }
  4338  001142  D078               	goto	l2556
  4339  001144                     l2548:
  4340                           
  4341                           ;pipe.c: 131: else {
  4342                           ;pipe.c: 132: pipe_handler->p_msg_queue[pipe_handler->p_pos_write] = msg;
  4343                           ;stkvar	pipe_write@msg @ sp[(0)+-3]
  4344                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4345  001144  0EFE               	movlw	-2
  4346  001146  CFE3 F05B          	movff	plusw1,btemp+1
  4347  00114A  0EFF               	movlw	-1
  4348  00114C  CFE3 F05C          	movff	plusw1,btemp+2
  4349  001150  0E04               	movlw	4
  4350  001152  245B               	addwf	btemp+1,w,c
  4351  001154  6ED9               	movwf	fsr2l,c
  4352  001156  0E00               	movlw	0
  4353  001158  205C               	addwfc	btemp+2,w,c
  4354  00115A  6EDA               	movwf	fsr2h,c
  4355  00115C  CFDE F05B          	movff	postinc2,btemp+1
  4356  001160  CFDD F05C          	movff	postdec2,btemp+2
  4357                           
  4358                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4359  001164  0EFE               	movlw	-2
  4360  001166  CFE3 F064          	movff	plusw1,btemp+10
  4361  00116A  0EFF               	movlw	-1
  4362  00116C  CFE3 F065          	movff	plusw1,btemp+11
  4363  001170  0E02               	movlw	2
  4364  001172  2464               	addwf	btemp+10,w,c
  4365  001174  6ED9               	movwf	fsr2l,c
  4366  001176  0E00               	movlw	0
  4367  001178  2065               	addwfc	btemp+11,w,c
  4368  00117A  6EDA               	movwf	fsr2h,c
  4369  00117C  CFDE F064          	movff	postinc2,btemp+10
  4370  001180  CFDD F065          	movff	postdec2,btemp+11
  4371  001184  505B               	movf	btemp+1,w,c
  4372  001186  2464               	addwf	btemp+10,w,c
  4373  001188  6ED9               	movwf	fsr2l,c
  4374  00118A  505C               	movf	btemp+2,w,c
  4375  00118C  2065               	addwfc	btemp+11,w,c
  4376  00118E  6EDA               	movwf	fsr2h,c
  4377  001190  0EFD               	movlw	-3
  4378  001192  CFE3 FFDF          	movff	plusw1,indf2
  4379                           
  4380                           ;pipe.c: 133: pipe_handler->p_pos_write = (pipe_handler->p_pos_write + 1) % pipe_handler
      +                          ->p_size;
  4381                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4382  001196  0EFE               	movlw	-2
  4383  001198  CFE3 F05B          	movff	plusw1,btemp+1
  4384  00119C  0EFF               	movlw	-1
  4385  00119E  CFE3 F05C          	movff	plusw1,btemp+2
  4386  0011A2  0E08               	movlw	8
  4387  0011A4  245B               	addwf	btemp+1,w,c
  4388  0011A6  6ED9               	movwf	fsr2l,c
  4389  0011A8  0E00               	movlw	0
  4390  0011AA  205C               	addwfc	btemp+2,w,c
  4391  0011AC  6EDA               	movwf	fsr2h,c
  4392  0011AE  CFDE F05B          	movff	postinc2,btemp+1
  4393  0011B2  CFDD F05C          	movff	postdec2,btemp+2
  4394  0011B6  C05B  FFE6         	movff	btemp+1,postinc1
  4395  0011BA  C05C  FFE6         	movff	btemp+2,postinc1
  4396                           
  4397                           ;stkvar	pipe_write@pipe_handler @ sp[(-2)+-2]
  4398  0011BE  0EFC               	movlw	-4
  4399  0011C0  CFE3 F05B          	movff	plusw1,btemp+1
  4400  0011C4  0EFD               	movlw	-3
  4401  0011C6  CFE3 F05C          	movff	plusw1,btemp+2
  4402  0011CA  0E04               	movlw	4
  4403  0011CC  245B               	addwf	btemp+1,w,c
  4404  0011CE  6ED9               	movwf	fsr2l,c
  4405  0011D0  0E00               	movlw	0
  4406  0011D2  205C               	addwfc	btemp+2,w,c
  4407  0011D4  6EDA               	movwf	fsr2h,c
  4408  0011D6  CFDE F05B          	movff	postinc2,btemp+1
  4409  0011DA  CFDD F05C          	movff	postdec2,btemp+2
  4410  0011DE  0E01               	movlw	1
  4411  0011E0  265B               	addwf	btemp+1,f,c
  4412  0011E2  0E00               	movlw	0
  4413  0011E4  225C               	addwfc	btemp+2,f,c
  4414  0011E6  C05B  FFE6         	movff	btemp+1,postinc1
  4415  0011EA  C05C  FFE6         	movff	btemp+2,postinc1
  4416  0011EE  EC22  F00B         	call	___lwmod	;wreg free
  4417                           
  4418                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4419  0011F2  0EFE               	movlw	-2
  4420  0011F4  CFE3 F064          	movff	plusw1,btemp+10
  4421  0011F8  0EFF               	movlw	-1
  4422  0011FA  CFE3 F065          	movff	plusw1,btemp+11
  4423  0011FE  0E04               	movlw	4
  4424  001200  2464               	addwf	btemp+10,w,c
  4425  001202  6ED9               	movwf	fsr2l,c
  4426  001204  0E00               	movlw	0
  4427  001206  2065               	addwfc	btemp+11,w,c
  4428  001208  6EDA               	movwf	fsr2h,c
  4429  00120A  C05A  FFDE         	movff	btemp,postinc2
  4430  00120E  C05B  FFDD         	movff	btemp+1,postdec2
  4431                           
  4432                           ;pipe.c: 134: pipe_handler->p_count++;
  4433                           ;stkvar	pipe_write@pipe_handler @ sp[(0)+-2]
  4434  001212  0EFE               	movlw	-2
  4435  001214  CFE3 F05B          	movff	plusw1,btemp+1
  4436  001218  0EFF               	movlw	-1
  4437  00121A  CFE3 F05C          	movff	plusw1,btemp+2
  4438  00121E  0E0A               	movlw	10
  4439  001220  245B               	addwf	btemp+1,w,c
  4440  001222  6ED9               	movwf	fsr2l,c
  4441  001224  0E00               	movlw	0
  4442  001226  205C               	addwfc	btemp+2,w,c
  4443  001228  6EDA               	movwf	fsr2h,c
  4444  00122A  2ADE               	incf	postinc2,f,c
  4445  00122C  0E00               	movlw	0
  4446  00122E  22DD               	addwfc	postdec2,f,c
  4447                           
  4448                           ;pipe.c: 136: libera_processos();
  4449  001230  EC85  F00C         	call	_libera_processos	;wreg free
  4450  001234                     l2556:
  4451                           
  4452                           ;pipe.c: 137: }
  4453                           ;pipe.c: 139: INTCONbits.GIE = 1;
  4454  001234  8EF2               	bsf	intcon,7,c	;volatile
  4455                           
  4456                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4457  001236  52E5               	movf	postdec1,f,c
  4458  001238  52E5               	movf	postdec1,f,c
  4459  00123A  52E5               	movf	postdec1,f,c
  4460  00123C  0012               	return		;funcret
  4461  00123E                     __end_of_pipe_write:
  4462                           	opt stack 0
  4463                           tosu	equ	0xFFF
  4464                           tosh	equ	0xFFE
  4465                           tosl	equ	0xFFD
  4466                           stkptr	equ	0xFFC
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           prodh	equ	0xFF4
  4472                           prodl	equ	0xFF3
  4473                           intcon	equ	0xFF2
  4474                           postinc0	equ	0xFEE
  4475                           postdec0	equ	0xFED
  4476                           plusw0	equ	0xFEB
  4477                           fsr0h	equ	0xFEA
  4478                           fsr0l	equ	0xFE9
  4479                           wreg	equ	0xFE8
  4480                           postinc1	equ	0xFE6
  4481                           postdec1	equ	0xFE5
  4482                           plusw1	equ	0xFE3
  4483                           fsr1h	equ	0xFE2
  4484                           fsr1l	equ	0xFE1
  4485                           bsr	equ	0xFE0
  4486                           indf2	equ	0xFDF
  4487                           postinc2	equ	0xFDE
  4488                           postdec2	equ	0xFDD
  4489                           plusw2	equ	0xFDB
  4490                           fsr2h	equ	0xFDA
  4491                           fsr2l	equ	0xFD9
  4492                           status	equ	0xFD8
  4493                           
  4494 ;; *************** function _libera_processos *****************
  4495 ;; Defined at:
  4496 ;;		line 147 in file "pipe.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  i               2  [STACK] int 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1  [STACK] void 
  4503 ;; Registers used:
  4504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4510 ;;      Params:         0       0       0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used:    1
  4516 ;; Hardware stack levels required when called:    6
  4517 ;; This function calls:
  4518 ;;		___wmul
  4519 ;; This function is called by:
  4520 ;;		_pipe_read
  4521 ;;		_pipe_write
  4522 ;; This function uses a reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text21
  4526  00190A                     __ptext21:
  4527                           	opt stack 0
  4528  00190A                     _libera_processos:
  4529                           	opt stack 0
  4530                           
  4531                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4532  00190A  52E6               	movf	postinc1,f,c
  4533  00190C  52E6               	movf	postinc1,f,c
  4534                           
  4535                           ;pipe.c: 149: int i;
  4536                           ;pipe.c: 150: for (i = 0; i < tasks_installed; i++)
  4537                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4538                           
  4539                           ;incstack = 0
  4540  00190E  0EFE               	movlw	-2
  4541  001910  6AE3               	clrf	plusw1,c
  4542  001912  0EFF               	movlw	-1
  4543  001914  6AE3               	clrf	plusw1,c
  4544  001916  D037               	goto	l2424
  4545  001918                     l2418:
  4546                           
  4547                           ;pipe.c: 151: if (F_APTOS[i].task_state == WAITING_PIPE)
  4548  001918  0E11               	movlw	17
  4549  00191A  6EE6               	movwf	postinc1,c
  4550  00191C  0E00               	movlw	0
  4551  00191E  6EE6               	movwf	postinc1,c
  4552                           
  4553                           ;stkvar	libera_processos@i @ sp[(-4)+0]
  4554  001920  0EFC               	movlw	-4
  4555  001922  CFE3 FFE6          	movff	plusw1,postinc1
  4556  001926  CFE3 FFE6          	movff	plusw1,postinc1
  4557  00192A  ECD2  F00C         	call	___wmul	;wreg free
  4558  00192E  0E08               	movlw	low (_F_APTOS+8)
  4559  001930  245A               	addwf	btemp,w,c
  4560  001932  6ED9               	movwf	fsr2l,c
  4561  001934  0E01               	movlw	high (_F_APTOS+8)
  4562  001936  205B               	addwfc	btemp+1,w,c
  4563  001938  6EDA               	movwf	fsr2h,c
  4564  00193A  0E05               	movlw	5
  4565  00193C  18DE               	xorwf	postinc2,w,c
  4566  00193E  A4D8               	btfss	status,2,c
  4567  001940  D013               	goto	l2422
  4568                           
  4569                           ;pipe.c: 152: F_APTOS[i].task_state = READY;
  4570  001942  0E11               	movlw	17
  4571  001944  6EE6               	movwf	postinc1,c
  4572  001946  0E00               	movlw	0
  4573  001948  6EE6               	movwf	postinc1,c
  4574                           
  4575                           ;stkvar	libera_processos@i @ sp[(-4)+0]
  4576  00194A  0EFC               	movlw	-4
  4577  00194C  CFE3 FFE6          	movff	plusw1,postinc1
  4578  001950  CFE3 FFE6          	movff	plusw1,postinc1
  4579  001954  ECD2  F00C         	call	___wmul	;wreg free
  4580  001958  0E08               	movlw	low (_F_APTOS+8)
  4581  00195A  245A               	addwf	btemp,w,c
  4582  00195C  6ED9               	movwf	fsr2l,c
  4583  00195E  0E01               	movlw	high (_F_APTOS+8)
  4584  001960  205B               	addwfc	btemp+1,w,c
  4585  001962  6EDA               	movwf	fsr2h,c
  4586  001964  0E01               	movlw	1
  4587  001966  6EDF               	movwf	indf2,c
  4588  001968                     l2422:
  4589                           
  4590                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4591  001968  0EFE               	movlw	-2
  4592  00196A  50E3               	movf	plusw1,w,c
  4593  00196C  0F01               	addlw	1
  4594  00196E  6E5A               	movwf	btemp,c
  4595  001970  0EFE               	movlw	-2
  4596  001972  C05A  FFE3         	movff	btemp,plusw1
  4597  001976  6A5A               	clrf	btemp,c
  4598  001978  0EFF               	movlw	-1
  4599  00197A  50E3               	movf	plusw1,w,c
  4600  00197C  205A               	addwfc	btemp,w,c
  4601  00197E  6E5A               	movwf	btemp,c
  4602  001980  0EFF               	movlw	-1
  4603  001982  C05A  FFE3         	movff	btemp,plusw1
  4604  001986                     l2424:
  4605                           
  4606                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4607  001986  0EFE               	movlw	-2
  4608  001988  CFE3 F05A          	movff	plusw1,btemp
  4609  00198C  5019               	movf	_tasks_installed,w,c
  4610  00198E  5C5A               	subwf	btemp,w,c
  4611  001990  0EFF               	movlw	-1
  4612  001992  CFE3 F05A          	movff	plusw1,btemp
  4613  001996  501A               	movf	_tasks_installed+1,w,c
  4614  001998  585A               	subwfb	btemp,w,c
  4615  00199A  A0D8               	btfss	status,0,c
  4616  00199C  D7BD               	goto	l2418
  4617                           
  4618                           ; _libera_processos: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4619  00199E  52E5               	movf	postdec1,f,c
  4620  0019A0  52E5               	movf	postdec1,f,c
  4621  0019A2  0012               	return		;funcret
  4622  0019A4                     __end_of_libera_processos:
  4623                           	opt stack 0
  4624                           tosu	equ	0xFFF
  4625                           tosh	equ	0xFFE
  4626                           tosl	equ	0xFFD
  4627                           stkptr	equ	0xFFC
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           postdec0	equ	0xFED
  4637                           plusw0	equ	0xFEB
  4638                           fsr0h	equ	0xFEA
  4639                           fsr0l	equ	0xFE9
  4640                           wreg	equ	0xFE8
  4641                           postinc1	equ	0xFE6
  4642                           postdec1	equ	0xFE5
  4643                           plusw1	equ	0xFE3
  4644                           fsr1h	equ	0xFE2
  4645                           fsr1l	equ	0xFE1
  4646                           bsr	equ	0xFE0
  4647                           indf2	equ	0xFDF
  4648                           postinc2	equ	0xFDE
  4649                           postdec2	equ	0xFDD
  4650                           plusw2	equ	0xFDB
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _pipe_create *****************
  4656 ;; Defined at:
  4657 ;;		line 92 in file "pipe.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  pipe_handler    2  [STACK] PTR struct pipe
  4660 ;;		 -> testL(12), 
  4661 ;;  id              2  [STACK] unsigned int 
  4662 ;;  size            2  [STACK] unsigned int 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1  [STACK] void 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, pro
      +dl, prodh
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4674 ;;      Params:         0       0       0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    7
  4681 ;; This function calls:
  4682 ;;		_SRAMalloc
  4683 ;; This function is called by:
  4684 ;;		_led_3
  4685 ;; This function uses a reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text22
  4689  00147E                     __ptext22:
  4690                           	opt stack 0
  4691  00147E                     _pipe_create:
  4692                           	opt stack 19
  4693                           
  4694                           ;pipe.c: 94: pipe_handler->p_id = id;
  4695                           ;stkvar	pipe_create@id @ sp[(0)+-4]
  4696                           
  4697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
  4698                           ;incstack = 0
  4699  00147E  50E1               	movf	fsr1l,w,c
  4700  001480  0FFC               	addlw	-4
  4701  001482  6ED9               	movwf	fsr2l,c
  4702  001484  50E2               	movf	fsr1h,w,c
  4703  001486  6EDA               	movwf	fsr2h,c
  4704  001488  0EFF               	movlw	255
  4705  00148A  22DA               	addwfc	fsr2h,f,c
  4706                           
  4707                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4708  00148C  0EFE               	movlw	-2
  4709  00148E  CFE3 FFE9          	movff	plusw1,fsr0l
  4710  001492  0EFF               	movlw	-1
  4711  001494  CFE3 FFEA          	movff	plusw1,fsr0h
  4712  001498  CFDE FFEE          	movff	postinc2,postinc0
  4713  00149C  CFDD FFED          	movff	postdec2,postdec0
  4714                           
  4715                           ;pipe.c: 95: pipe_handler->p_pos_read = 0;
  4716                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4717  0014A0  0EFE               	movlw	-2
  4718  0014A2  CFE3 F05B          	movff	plusw1,btemp+1
  4719  0014A6  0EFF               	movlw	-1
  4720  0014A8  CFE3 F05C          	movff	plusw1,btemp+2
  4721  0014AC  0E06               	movlw	6
  4722  0014AE  245B               	addwf	btemp+1,w,c
  4723  0014B0  6ED9               	movwf	fsr2l,c
  4724  0014B2  0E00               	movlw	0
  4725  0014B4  205C               	addwfc	btemp+2,w,c
  4726  0014B6  6EDA               	movwf	fsr2h,c
  4727  0014B8  0E00               	movlw	0
  4728  0014BA  6EDE               	movwf	postinc2,c
  4729  0014BC  0E00               	movlw	0
  4730  0014BE  6EDD               	movwf	postdec2,c
  4731                           
  4732                           ;pipe.c: 96: pipe_handler->p_pos_write = 0;
  4733                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4734  0014C0  0EFE               	movlw	-2
  4735  0014C2  CFE3 F05B          	movff	plusw1,btemp+1
  4736  0014C6  0EFF               	movlw	-1
  4737  0014C8  CFE3 F05C          	movff	plusw1,btemp+2
  4738  0014CC  0E04               	movlw	4
  4739  0014CE  245B               	addwf	btemp+1,w,c
  4740  0014D0  6ED9               	movwf	fsr2l,c
  4741  0014D2  0E00               	movlw	0
  4742  0014D4  205C               	addwfc	btemp+2,w,c
  4743  0014D6  6EDA               	movwf	fsr2h,c
  4744  0014D8  0E00               	movlw	0
  4745  0014DA  6EDE               	movwf	postinc2,c
  4746  0014DC  0E00               	movlw	0
  4747  0014DE  6EDD               	movwf	postdec2,c
  4748                           
  4749                           ;pipe.c: 97: pipe_handler->p_size = size;
  4750                           ;stkvar	pipe_create@size @ sp[(0)+-6]
  4751  0014E0  50E1               	movf	fsr1l,w,c
  4752  0014E2  0FFA               	addlw	-6
  4753  0014E4  6ED9               	movwf	fsr2l,c
  4754  0014E6  50E2               	movf	fsr1h,w,c
  4755  0014E8  6EDA               	movwf	fsr2h,c
  4756  0014EA  0EFF               	movlw	255
  4757  0014EC  22DA               	addwfc	fsr2h,f,c
  4758                           
  4759                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4760  0014EE  0EFE               	movlw	-2
  4761  0014F0  CFE3 F05B          	movff	plusw1,btemp+1
  4762  0014F4  0EFF               	movlw	-1
  4763  0014F6  CFE3 F05C          	movff	plusw1,btemp+2
  4764  0014FA  0E08               	movlw	8
  4765  0014FC  245B               	addwf	btemp+1,w,c
  4766  0014FE  6EE9               	movwf	fsr0l,c
  4767  001500  0E00               	movlw	0
  4768  001502  205C               	addwfc	btemp+2,w,c
  4769  001504  6EEA               	movwf	fsr0h,c
  4770  001506  CFDE FFEE          	movff	postinc2,postinc0
  4771  00150A  CFDD FFED          	movff	postdec2,postdec0
  4772                           
  4773                           ;pipe.c: 98: pipe_handler->p_msg_queue = SRAMalloc(size);
  4774                           ;stkvar	pipe_create@size @ sp[(0)+-6]
  4775  00150E  0EFA               	movlw	-6
  4776  001510  50E3               	movf	plusw1,w,c
  4777  001512  6EE6               	movwf	postinc1,c
  4778  001514  ECA3  F005         	call	_SRAMalloc	;wreg free
  4779                           
  4780                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4781  001518  0EFE               	movlw	-2
  4782  00151A  CFE3 F064          	movff	plusw1,btemp+10
  4783  00151E  0EFF               	movlw	-1
  4784  001520  CFE3 F065          	movff	plusw1,btemp+11
  4785  001524  0E02               	movlw	2
  4786  001526  2464               	addwf	btemp+10,w,c
  4787  001528  6ED9               	movwf	fsr2l,c
  4788  00152A  0E00               	movlw	0
  4789  00152C  2065               	addwfc	btemp+11,w,c
  4790  00152E  6EDA               	movwf	fsr2h,c
  4791  001530  C05A  FFDE         	movff	btemp,postinc2
  4792  001534  C05B  FFDD         	movff	btemp+1,postdec2
  4793                           
  4794                           ;pipe.c: 99: pipe_handler->p_count = 0;
  4795                           ;stkvar	pipe_create@pipe_handler @ sp[(0)+-2]
  4796  001538  0EFE               	movlw	-2
  4797  00153A  CFE3 F05B          	movff	plusw1,btemp+1
  4798  00153E  0EFF               	movlw	-1
  4799  001540  CFE3 F05C          	movff	plusw1,btemp+2
  4800  001544  0E0A               	movlw	10
  4801  001546  245B               	addwf	btemp+1,w,c
  4802  001548  6ED9               	movwf	fsr2l,c
  4803  00154A  0E00               	movlw	0
  4804  00154C  205C               	addwfc	btemp+2,w,c
  4805  00154E  6EDA               	movwf	fsr2h,c
  4806  001550  0E00               	movlw	0
  4807  001552  6EDE               	movwf	postinc2,c
  4808  001554  0E00               	movlw	0
  4809  001556  6EDD               	movwf	postdec2,c
  4810                           
  4811                           ; _pipe_create: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, a
      +                          rgsize = 6, vargsize = 0
  4812  001558  0EFA               	movlw	250
  4813  00155A  26E1               	addwf	fsr1l,f,c
  4814  00155C  0EFF               	movlw	255
  4815  00155E  22E2               	addwfc	fsr1h,f,c
  4816  001560  0012               	return		;funcret
  4817  001562                     __end_of_pipe_create:
  4818                           	opt stack 0
  4819                           tosu	equ	0xFFF
  4820                           tosh	equ	0xFFE
  4821                           tosl	equ	0xFFD
  4822                           stkptr	equ	0xFFC
  4823                           tblptru	equ	0xFF8
  4824                           tblptrh	equ	0xFF7
  4825                           tblptrl	equ	0xFF6
  4826                           tablat	equ	0xFF5
  4827                           prodh	equ	0xFF4
  4828                           prodl	equ	0xFF3
  4829                           intcon	equ	0xFF2
  4830                           postinc0	equ	0xFEE
  4831                           postdec0	equ	0xFED
  4832                           plusw0	equ	0xFEB
  4833                           fsr0h	equ	0xFEA
  4834                           fsr0l	equ	0xFE9
  4835                           wreg	equ	0xFE8
  4836                           postinc1	equ	0xFE6
  4837                           postdec1	equ	0xFE5
  4838                           plusw1	equ	0xFE3
  4839                           fsr1h	equ	0xFE2
  4840                           fsr1l	equ	0xFE1
  4841                           bsr	equ	0xFE0
  4842                           indf2	equ	0xFDF
  4843                           postinc2	equ	0xFDE
  4844                           postdec2	equ	0xFDD
  4845                           plusw2	equ	0xFDB
  4846                           fsr2h	equ	0xFDA
  4847                           fsr2l	equ	0xFD9
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _acender *****************
  4851 ;; Defined at:
  4852 ;;		line 450 in file "tasks.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;		None
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  dado            1  [STACK] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  1  [STACK] void 
  4859 ;; Registers used:
  4860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4866 ;;      Params:         0       0       0       0       0       0       0
  4867 ;;      Locals:         0       0       0       0       0       0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0
  4869 ;;      Totals:         0       0       0       0       0       0       0
  4870 ;;Total ram usage:        0 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:   10
  4873 ;; This function calls:
  4874 ;;		_delay
  4875 ;;		_pipe_read
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text23
  4882  001B52                     __ptext23:
  4883                           	opt stack 0
  4884  001B52                     _acender:
  4885                           	opt stack 0
  4886                           
  4887                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4888  001B52  52E6               	movf	postinc1,f,c
  4889                           
  4890                           ;tasks.c: 452: TRISCbits.RC5 = 0;
  4891                           
  4892                           ;incstack = 0
  4893  001B54  9A94               	bcf	3988,5,c	;volatile
  4894                           
  4895                           ;tasks.c: 453: PORTCbits.RC5 = 0;
  4896  001B56  9A82               	bcf	3970,5,c	;volatile
  4897                           
  4898                           ;tasks.c: 454: byte dado;
  4899                           ;tasks.c: 455: LATCbits.LATC5 =0;
  4900  001B58  9A8B               	bcf	3979,5,c	;volatile
  4901  001B5A                     l2768:
  4902                           
  4903                           ;tasks.c: 458: {
  4904                           ;tasks.c: 459: pipe_read(&testL, &dado);
  4905                           ;stkvar	acender@dado @ sp[(-1)+0]
  4906  001B5A  0EFF               	movlw	255
  4907  001B5C  24E1               	addwf	fsr1l,w,c
  4908  001B5E  6EE6               	movwf	postinc1,c
  4909  001B60  0EFF               	movlw	255
  4910  001B62  20E2               	addwfc	fsr1h,w,c
  4911  001B64  6EE6               	movwf	postinc1,c
  4912  001B66  0E1B               	movlw	low _testL
  4913  001B68  6EE6               	movwf	postinc1,c
  4914  001B6A  0E00               	movlw	high _testL
  4915  001B6C  6EE6               	movwf	postinc1,c
  4916  001B6E  EC1F  F009         	call	_pipe_read	;wreg free
  4917                           
  4918                           ;tasks.c: 460: if(dado == 't')
  4919                           ;stkvar	acender@dado @ sp[(-1)+0]
  4920  001B72  0EFF               	movlw	-1
  4921  001B74  CFE3 F05A          	movff	plusw1,btemp
  4922  001B78  0E74               	movlw	116
  4923  001B7A  185A               	xorwf	btemp,w,c
  4924  001B7C  A4D8               	btfss	status,2,c
  4925  001B7E  D7ED               	goto	l2768
  4926                           
  4927                           ;tasks.c: 461: {
  4928                           ;tasks.c: 463: PORTCbits.RC5 = ~LATCbits.LATC5;
  4929  001B80  AA8B               	btfss	3979,5,c	;volatile
  4930  001B82  D002               	goto	u137_20
  4931  001B84  0E01               	movlw	1
  4932  001B86  D001               	goto	u137_26
  4933  001B88                     u137_20:
  4934  001B88  0E00               	movlw	0
  4935  001B8A                     u137_26:
  4936  001B8A  0AFF               	xorlw	255
  4937  001B8C  6E65               	movwf	btemp+11,c
  4938  001B8E  3A65               	swapf	btemp+11,f,c
  4939  001B90  4665               	rlncf	btemp+11,f,c
  4940  001B92  5082               	movf	3970,w,c	;volatile
  4941  001B94  1865               	xorwf	btemp+11,w,c
  4942  001B96  0BDF               	andlw	-33
  4943  001B98  1865               	xorwf	btemp+11,w,c
  4944  001B9A  6E82               	movwf	3970,c	;volatile
  4945                           
  4946                           ;tasks.c: 464: delay(1000);
  4947  001B9C  0EE8               	movlw	232
  4948  001B9E  6EE6               	movwf	postinc1,c
  4949  001BA0  0E03               	movlw	3
  4950  001BA2  6EE6               	movwf	postinc1,c
  4951  001BA4  EC93  F00E         	call	_delay	;wreg free
  4952                           
  4953                           ;tasks.c: 465: PORTCbits.RC5 = ~LATCbits.LATC5;
  4954  001BA8  AA8B               	btfss	3979,5,c	;volatile
  4955  001BAA  D002               	goto	u138_20
  4956  001BAC  0E01               	movlw	1
  4957  001BAE  D001               	goto	u138_26
  4958  001BB0                     u138_20:
  4959  001BB0  0E00               	movlw	0
  4960  001BB2                     u138_26:
  4961  001BB2  0AFF               	xorlw	255
  4962  001BB4  6E65               	movwf	btemp+11,c
  4963  001BB6  3A65               	swapf	btemp+11,f,c
  4964  001BB8  4665               	rlncf	btemp+11,f,c
  4965  001BBA  5082               	movf	3970,w,c	;volatile
  4966  001BBC  1865               	xorwf	btemp+11,w,c
  4967  001BBE  0BDF               	andlw	-33
  4968  001BC0  1865               	xorwf	btemp+11,w,c
  4969  001BC2  6E82               	movwf	3970,c	;volatile
  4970  001BC4  D7CA               	goto	l2768
  4971  001BC6                     __end_of_acender:
  4972                           	opt stack 0
  4973                           tosu	equ	0xFFF
  4974                           tosh	equ	0xFFE
  4975                           tosl	equ	0xFFD
  4976                           stkptr	equ	0xFFC
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           postinc0	equ	0xFEE
  4985                           postdec0	equ	0xFED
  4986                           plusw0	equ	0xFEB
  4987                           fsr0h	equ	0xFEA
  4988                           fsr0l	equ	0xFE9
  4989                           wreg	equ	0xFE8
  4990                           postinc1	equ	0xFE6
  4991                           postdec1	equ	0xFE5
  4992                           plusw1	equ	0xFE3
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           bsr	equ	0xFE0
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           plusw2	equ	0xFDB
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _pipe_read *****************
  5005 ;; Defined at:
  5006 ;;		line 102 in file "pipe.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  pipe_handler    2  [STACK] PTR struct pipe
  5009 ;;		 -> testL(12), 
  5010 ;;  msg             2  [STACK] PTR unsigned char 
  5011 ;;		 -> acender@dado(1), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1  [STACK] void 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5023 ;;      Params:         0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    9
  5030 ;; This function calls:
  5031 ;;		___lwmod
  5032 ;;		_dispatcher
  5033 ;;		_libera_processos
  5034 ;; This function is called by:
  5035 ;;		_acender
  5036 ;; This function uses a reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text24
  5040  00123E                     __ptext24:
  5041                           	opt stack 0
  5042  00123E                     _pipe_read:
  5043                           	opt stack 17
  5044                           
  5045                           ;pipe.c: 104: INTCONbits.GIE = 0;
  5046                           
  5047                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  5048                           ;incstack = 0
  5049  00123E  9EF2               	bcf	intcon,7,c	;volatile
  5050                           
  5051                           ;pipe.c: 106: if (pipe_handler->p_count == 0) {
  5052                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5053  001240  0EFE               	movlw	-2
  5054  001242  CFE3 F05B          	movff	plusw1,btemp+1
  5055  001246  0EFF               	movlw	-1
  5056  001248  CFE3 F05C          	movff	plusw1,btemp+2
  5057  00124C  0E0A               	movlw	10
  5058  00124E  245B               	addwf	btemp+1,w,c
  5059  001250  6ED9               	movwf	fsr2l,c
  5060  001252  0E00               	movlw	0
  5061  001254  205C               	addwfc	btemp+2,w,c
  5062  001256  6EDA               	movwf	fsr2h,c
  5063  001258  50DE               	movf	postinc2,w,c
  5064  00125A  10DE               	iorwf	postinc2,w,c
  5065  00125C  A4D8               	btfss	status,2,c
  5066  00125E  D005               	goto	l2564
  5067                           
  5068                           ;pipe.c: 109: dispatcher(WAITING_PIPE);
  5069  001260  0E05               	movlw	5
  5070  001262  6EE6               	movwf	postinc1,c
  5071  001264  EC03  F003         	call	_dispatcher	;wreg free
  5072                           
  5073                           ;pipe.c: 110: }
  5074  001268  D07D               	goto	l2572
  5075  00126A                     l2564:
  5076                           
  5077                           ;pipe.c: 111: else {
  5078                           ;pipe.c: 112: *msg = pipe_handler->p_msg_queue[pipe_handler->p_pos_read];
  5079                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5080  00126A  0EFE               	movlw	-2
  5081  00126C  CFE3 F05B          	movff	plusw1,btemp+1
  5082  001270  0EFF               	movlw	-1
  5083  001272  CFE3 F05C          	movff	plusw1,btemp+2
  5084  001276  0E06               	movlw	6
  5085  001278  245B               	addwf	btemp+1,w,c
  5086  00127A  6ED9               	movwf	fsr2l,c
  5087  00127C  0E00               	movlw	0
  5088  00127E  205C               	addwfc	btemp+2,w,c
  5089  001280  6EDA               	movwf	fsr2h,c
  5090  001282  CFDE F05B          	movff	postinc2,btemp+1
  5091  001286  CFDD F05C          	movff	postdec2,btemp+2
  5092                           
  5093                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5094  00128A  0EFE               	movlw	-2
  5095  00128C  CFE3 F064          	movff	plusw1,btemp+10
  5096  001290  0EFF               	movlw	-1
  5097  001292  CFE3 F065          	movff	plusw1,btemp+11
  5098  001296  0E02               	movlw	2
  5099  001298  2464               	addwf	btemp+10,w,c
  5100  00129A  6ED9               	movwf	fsr2l,c
  5101  00129C  0E00               	movlw	0
  5102  00129E  2065               	addwfc	btemp+11,w,c
  5103  0012A0  6EDA               	movwf	fsr2h,c
  5104  0012A2  CFDE F064          	movff	postinc2,btemp+10
  5105  0012A6  CFDD F065          	movff	postdec2,btemp+11
  5106  0012AA  505B               	movf	btemp+1,w,c
  5107  0012AC  2464               	addwf	btemp+10,w,c
  5108  0012AE  6ED9               	movwf	fsr2l,c
  5109  0012B0  505C               	movf	btemp+2,w,c
  5110  0012B2  2065               	addwfc	btemp+11,w,c
  5111  0012B4  6EDA               	movwf	fsr2h,c
  5112                           
  5113                           ;stkvar	pipe_read@msg @ sp[(0)+-4]
  5114  0012B6  0EFC               	movlw	-4
  5115  0012B8  CFE3 FFE9          	movff	plusw1,fsr0l
  5116  0012BC  0EFD               	movlw	-3
  5117  0012BE  CFE3 FFEA          	movff	plusw1,fsr0h
  5118  0012C2  CFDF FFEF          	movff	indf2,indf0
  5119                           
  5120                           ;pipe.c: 113: pipe_handler->p_pos_read = (pipe_handler->p_pos_read + 1) % pipe_handler->
      +                          p_size;
  5121                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5122  0012C6  0EFE               	movlw	-2
  5123  0012C8  CFE3 F05B          	movff	plusw1,btemp+1
  5124  0012CC  0EFF               	movlw	-1
  5125  0012CE  CFE3 F05C          	movff	plusw1,btemp+2
  5126  0012D2  0E08               	movlw	8
  5127  0012D4  245B               	addwf	btemp+1,w,c
  5128  0012D6  6ED9               	movwf	fsr2l,c
  5129  0012D8  0E00               	movlw	0
  5130  0012DA  205C               	addwfc	btemp+2,w,c
  5131  0012DC  6EDA               	movwf	fsr2h,c
  5132  0012DE  CFDE F05B          	movff	postinc2,btemp+1
  5133  0012E2  CFDD F05C          	movff	postdec2,btemp+2
  5134  0012E6  C05B  FFE6         	movff	btemp+1,postinc1
  5135  0012EA  C05C  FFE6         	movff	btemp+2,postinc1
  5136                           
  5137                           ;stkvar	pipe_read@pipe_handler @ sp[(-2)+-2]
  5138  0012EE  0EFC               	movlw	-4
  5139  0012F0  CFE3 F05B          	movff	plusw1,btemp+1
  5140  0012F4  0EFD               	movlw	-3
  5141  0012F6  CFE3 F05C          	movff	plusw1,btemp+2
  5142  0012FA  0E06               	movlw	6
  5143  0012FC  245B               	addwf	btemp+1,w,c
  5144  0012FE  6ED9               	movwf	fsr2l,c
  5145  001300  0E00               	movlw	0
  5146  001302  205C               	addwfc	btemp+2,w,c
  5147  001304  6EDA               	movwf	fsr2h,c
  5148  001306  CFDE F05B          	movff	postinc2,btemp+1
  5149  00130A  CFDD F05C          	movff	postdec2,btemp+2
  5150  00130E  0E01               	movlw	1
  5151  001310  265B               	addwf	btemp+1,f,c
  5152  001312  0E00               	movlw	0
  5153  001314  225C               	addwfc	btemp+2,f,c
  5154  001316  C05B  FFE6         	movff	btemp+1,postinc1
  5155  00131A  C05C  FFE6         	movff	btemp+2,postinc1
  5156  00131E  EC22  F00B         	call	___lwmod	;wreg free
  5157                           
  5158                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5159  001322  0EFE               	movlw	-2
  5160  001324  CFE3 F064          	movff	plusw1,btemp+10
  5161  001328  0EFF               	movlw	-1
  5162  00132A  CFE3 F065          	movff	plusw1,btemp+11
  5163  00132E  0E06               	movlw	6
  5164  001330  2464               	addwf	btemp+10,w,c
  5165  001332  6ED9               	movwf	fsr2l,c
  5166  001334  0E00               	movlw	0
  5167  001336  2065               	addwfc	btemp+11,w,c
  5168  001338  6EDA               	movwf	fsr2h,c
  5169  00133A  C05A  FFDE         	movff	btemp,postinc2
  5170  00133E  C05B  FFDD         	movff	btemp+1,postdec2
  5171                           
  5172                           ;pipe.c: 114: pipe_handler->p_count--;
  5173                           ;stkvar	pipe_read@pipe_handler @ sp[(0)+-2]
  5174  001342  0EFE               	movlw	-2
  5175  001344  CFE3 F05B          	movff	plusw1,btemp+1
  5176  001348  0EFF               	movlw	-1
  5177  00134A  CFE3 F05C          	movff	plusw1,btemp+2
  5178  00134E  0E0A               	movlw	10
  5179  001350  245B               	addwf	btemp+1,w,c
  5180  001352  6ED9               	movwf	fsr2l,c
  5181  001354  0E00               	movlw	0
  5182  001356  205C               	addwfc	btemp+2,w,c
  5183  001358  6EDA               	movwf	fsr2h,c
  5184  00135A  06DE               	decf	postinc2,f,c
  5185  00135C  0E00               	movlw	0
  5186  00135E  5ADD               	subwfb	postdec2,f,c
  5187                           
  5188                           ;pipe.c: 116: libera_processos();
  5189  001360  EC85  F00C         	call	_libera_processos	;wreg free
  5190  001364                     l2572:
  5191                           
  5192                           ;pipe.c: 117: }
  5193                           ;pipe.c: 119: INTCONbits.GIE = 1;
  5194  001364  8EF2               	bsf	intcon,7,c	;volatile
  5195                           
  5196                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  5197  001366  52E5               	movf	postdec1,f,c
  5198  001368  52E5               	movf	postdec1,f,c
  5199  00136A  52E5               	movf	postdec1,f,c
  5200  00136C  52E5               	movf	postdec1,f,c
  5201  00136E  0012               	return		;funcret
  5202  001370                     __end_of_pipe_read:
  5203                           	opt stack 0
  5204                           tosu	equ	0xFFF
  5205                           tosh	equ	0xFFE
  5206                           tosl	equ	0xFFD
  5207                           stkptr	equ	0xFFC
  5208                           tblptru	equ	0xFF8
  5209                           tblptrh	equ	0xFF7
  5210                           tblptrl	equ	0xFF6
  5211                           tablat	equ	0xFF5
  5212                           prodh	equ	0xFF4
  5213                           prodl	equ	0xFF3
  5214                           intcon	equ	0xFF2
  5215                           indf0	equ	0xFEF
  5216                           postinc0	equ	0xFEE
  5217                           postdec0	equ	0xFED
  5218                           plusw0	equ	0xFEB
  5219                           fsr0h	equ	0xFEA
  5220                           fsr0l	equ	0xFE9
  5221                           wreg	equ	0xFE8
  5222                           postinc1	equ	0xFE6
  5223                           postdec1	equ	0xFE5
  5224                           plusw1	equ	0xFE3
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           bsr	equ	0xFE0
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           postdec2	equ	0xFDD
  5231                           plusw2	equ	0xFDB
  5232                           fsr2h	equ	0xFDA
  5233                           fsr2l	equ	0xFD9
  5234                           status	equ	0xFD8
  5235                           
  5236 ;; *************** function _task_idle *****************
  5237 ;; Defined at:
  5238 ;;		line 73 in file "kernel.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1  [STACK] void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5252 ;;      Params:         0       0       0       0       0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used:    1
  5258 ;; Hardware stack levels required when called:    5
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_setupOS
  5263 ;; This function uses a reentrant model
  5264 ;;
  5265                           
  5266                           	psect	text25
  5267  001DB4                     __ptext25:
  5268                           	opt stack 0
  5269  001DB4                     _task_idle:
  5270                           	opt stack 22
  5271                           
  5272                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5273                           ;incstack = 0
  5274                           ;kernel.c: 79: while (1) {
  5275  001DB4  D7FF               	goto	_task_idle
  5276  001DB6                     __end_of_task_idle:
  5277                           	opt stack 0
  5278                           tosu	equ	0xFFF
  5279                           tosh	equ	0xFFE
  5280                           tosl	equ	0xFFD
  5281                           stkptr	equ	0xFFC
  5282                           tblptru	equ	0xFF8
  5283                           tblptrh	equ	0xFF7
  5284                           tblptrl	equ	0xFF6
  5285                           tablat	equ	0xFF5
  5286                           prodh	equ	0xFF4
  5287                           prodl	equ	0xFF3
  5288                           intcon	equ	0xFF2
  5289                           indf0	equ	0xFEF
  5290                           postinc0	equ	0xFEE
  5291                           postdec0	equ	0xFED
  5292                           plusw0	equ	0xFEB
  5293                           fsr0h	equ	0xFEA
  5294                           fsr0l	equ	0xFE9
  5295                           wreg	equ	0xFE8
  5296                           postinc1	equ	0xFE6
  5297                           postdec1	equ	0xFE5
  5298                           plusw1	equ	0xFE3
  5299                           fsr1h	equ	0xFE2
  5300                           fsr1l	equ	0xFE1
  5301                           bsr	equ	0xFE0
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           plusw2	equ	0xFDB
  5306                           fsr2h	equ	0xFDA
  5307                           fsr2l	equ	0xFD9
  5308                           status	equ	0xFD8
  5309                           
  5310 ;; *************** function _int_high *****************
  5311 ;; Defined at:
  5312 ;;		line 129 in file "kernel.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  i               2   15[COMRAM] unsigned int 
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5326 ;;      Params:         0       0       0       0       0       0       0
  5327 ;;      Locals:         2       0       0       0       0       0       0
  5328 ;;      Temps:         15       0       0       0       0       0       0
  5329 ;;      Totals:        17       0       0       0       0       0       0
  5330 ;;Total ram usage:       17 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    4
  5333 ;; This function calls:
  5334 ;;		___wmul
  5335 ;;		_dispatcher
  5336 ;; This function is called by:
  5337 ;;		Interrupt level 2
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	intcode
  5342  000008                     __pintcode:
  5343                           	opt stack 0
  5344  000008                     _int_high:
  5345                           	opt stack 17
  5346                           
  5347                           ;incstack = 0
  5348  000008  ED74  F006         	call	int_func,f	;refresh shadow registers
  5349                           tosu	equ	0xFFF
  5350                           tosh	equ	0xFFE
  5351                           tosl	equ	0xFFD
  5352                           stkptr	equ	0xFFC
  5353                           tblptru	equ	0xFF8
  5354                           tblptrh	equ	0xFF7
  5355                           tblptrl	equ	0xFF6
  5356                           tablat	equ	0xFF5
  5357                           prodh	equ	0xFF4
  5358                           prodl	equ	0xFF3
  5359                           intcon	equ	0xFF2
  5360                           indf0	equ	0xFEF
  5361                           postinc0	equ	0xFEE
  5362                           postdec0	equ	0xFED
  5363                           plusw0	equ	0xFEB
  5364                           fsr0h	equ	0xFEA
  5365                           fsr0l	equ	0xFE9
  5366                           wreg	equ	0xFE8
  5367                           postinc1	equ	0xFE6
  5368                           postdec1	equ	0xFE5
  5369                           plusw1	equ	0xFE3
  5370                           fsr1h	equ	0xFE2
  5371                           fsr1l	equ	0xFE1
  5372                           bsr	equ	0xFE0
  5373                           indf2	equ	0xFDF
  5374                           postinc2	equ	0xFDE
  5375                           postdec2	equ	0xFDD
  5376                           plusw2	equ	0xFDB
  5377                           fsr2h	equ	0xFDA
  5378                           fsr2l	equ	0xFD9
  5379                           status	equ	0xFD8
  5380                           
  5381                           	psect	intcode_body
  5382  000CE8                     __pintcode_body:
  5383                           	opt stack 17
  5384  000CE8                     int_func:
  5385                           	opt stack 17
  5386  000CE8  0006               	pop		; remove dummy address from shadow register refresh
  5387  000CEA  CFE1 F045          	movff	fsr1l,??_int_high+2
  5388  000CEE  CFE2 F046          	movff	fsr1h,??_int_high+3
  5389  000CF2  CFD9 F047          	movff	fsr2l,??_int_high+4
  5390  000CF6  CFDA F048          	movff	fsr2h,??_int_high+5
  5391  000CFA  CFF3 F049          	movff	prodl,??_int_high+6
  5392  000CFE  CFF4 F04A          	movff	prodh,??_int_high+7
  5393  000D02  C05A  F04B         	movff	btemp,??_int_high+8
  5394  000D06  C05B  F04C         	movff	btemp+1,??_int_high+9
  5395  000D0A  C05C  F04D         	movff	btemp+2,??_int_high+10
  5396  000D0E  C062  F04E         	movff	btemp+8,??_int_high+11
  5397  000D12  C063  F04F         	movff	btemp+9,??_int_high+12
  5398  000D16  C064  F050         	movff	btemp+10,??_int_high+13
  5399  000D1A  C065  F051         	movff	btemp+11,??_int_high+14
  5400  000D1E  EE14  F072         	lfsr	1,___inthi_sp
  5401                           
  5402                           ;kernel.c: 131: u_int i;
  5403                           ;kernel.c: 133: if (INTCONbits.TMR0IF) {
  5404  000D22  A4F2               	btfss	intcon,2,c	;volatile
  5405  000D24  D07C               	goto	i2l116
  5406                           
  5407                           ;kernel.c: 134: INTCONbits.TMR0IF = 0;
  5408  000D26  94F2               	bcf	intcon,2,c	;volatile
  5409                           
  5410                           ;kernel.c: 135: TMR0L = 252;
  5411  000D28  0EFC               	movlw	252
  5412  000D2A  6ED6               	movwf	4054,c	;volatile
  5413                           
  5414                           ;kernel.c: 138: for (i = 1; i < tasks_installed; i++) {
  5415  000D2C  0E00               	movlw	0
  5416  000D2E  6E53               	movwf	int_high@i+1,c
  5417  000D30  0E01               	movlw	1
  5418  000D32  6E52               	movwf	int_high@i,c
  5419  000D34  D05F               	goto	i2l111
  5420  000D36                     
  5421                           ;kernel.c: 139: if (F_APTOS[i].task_state == SLEEPING) {
  5422  000D36  0E11               	movlw	17
  5423  000D38  6EE6               	movwf	postinc1,c
  5424  000D3A  0E00               	movlw	0
  5425  000D3C  6EE6               	movwf	postinc1,c
  5426  000D3E  C052  FFE6         	movff	int_high@i,postinc1
  5427  000D42  C053  FFE6         	movff	int_high@i+1,postinc1
  5428  000D46  ECD2  F00C         	call	___wmul	;wreg free
  5429  000D4A  0E08               	movlw	8
  5430  000D4C  265A               	addwf	btemp,f,c
  5431  000D4E  0E00               	movlw	0
  5432  000D50  225B               	addwfc	btemp+1,f,c
  5433  000D52  0E00               	movlw	low _F_APTOS
  5434  000D54  245A               	addwf	btemp,w,c
  5435  000D56  6ED9               	movwf	fsr2l,c
  5436  000D58  0E01               	movlw	high _F_APTOS
  5437  000D5A  205B               	addwfc	btemp+1,w,c
  5438  000D5C  6EDA               	movwf	fsr2h,c
  5439  000D5E  0E03               	movlw	3
  5440  000D60  18DE               	xorwf	postinc2,w,c
  5441  000D62  A4D8               	btfss	status,2,c
  5442  000D64  D045               	goto	i2l114
  5443                           
  5444                           ;kernel.c: 140: F_APTOS[i].delay_time--;
  5445  000D66  0E11               	movlw	17
  5446  000D68  6EE6               	movwf	postinc1,c
  5447  000D6A  0E00               	movlw	0
  5448  000D6C  6EE6               	movwf	postinc1,c
  5449  000D6E  C052  FFE6         	movff	int_high@i,postinc1
  5450  000D72  C053  FFE6         	movff	int_high@i+1,postinc1
  5451  000D76  ECD2  F00C         	call	___wmul	;wreg free
  5452  000D7A  0E06               	movlw	6
  5453  000D7C  265A               	addwf	btemp,f,c
  5454  000D7E  0E00               	movlw	0
  5455  000D80  225B               	addwfc	btemp+1,f,c
  5456  000D82  0E00               	movlw	low _F_APTOS
  5457  000D84  245A               	addwf	btemp,w,c
  5458  000D86  6ED9               	movwf	fsr2l,c
  5459  000D88  0E01               	movlw	high _F_APTOS
  5460  000D8A  205B               	addwfc	btemp+1,w,c
  5461  000D8C  6EDA               	movwf	fsr2h,c
  5462  000D8E  06DE               	decf	postinc2,f,c
  5463  000D90  0E00               	movlw	0
  5464  000D92  5ADD               	subwfb	postdec2,f,c
  5465                           
  5466                           ;kernel.c: 141: if (F_APTOS[i].delay_time == 0) {
  5467  000D94  0E11               	movlw	17
  5468  000D96  6EE6               	movwf	postinc1,c
  5469  000D98  0E00               	movlw	0
  5470  000D9A  6EE6               	movwf	postinc1,c
  5471  000D9C  C052  FFE6         	movff	int_high@i,postinc1
  5472  000DA0  C053  FFE6         	movff	int_high@i+1,postinc1
  5473  000DA4  ECD2  F00C         	call	___wmul	;wreg free
  5474  000DA8  0E06               	movlw	6
  5475  000DAA  265A               	addwf	btemp,f,c
  5476  000DAC  0E00               	movlw	0
  5477  000DAE  225B               	addwfc	btemp+1,f,c
  5478  000DB0  0E00               	movlw	low _F_APTOS
  5479  000DB2  245A               	addwf	btemp,w,c
  5480  000DB4  6ED9               	movwf	fsr2l,c
  5481  000DB6  0E01               	movlw	high _F_APTOS
  5482  000DB8  205B               	addwfc	btemp+1,w,c
  5483  000DBA  6EDA               	movwf	fsr2h,c
  5484  000DBC  50DE               	movf	postinc2,w,c
  5485  000DBE  10DE               	iorwf	postinc2,w,c
  5486  000DC0  A4D8               	btfss	status,2,c
  5487  000DC2  D016               	goto	i2l114
  5488                           
  5489                           ;kernel.c: 142: F_APTOS[i].task_state = READY;
  5490  000DC4  0E11               	movlw	17
  5491  000DC6  6EE6               	movwf	postinc1,c
  5492  000DC8  0E00               	movlw	0
  5493  000DCA  6EE6               	movwf	postinc1,c
  5494  000DCC  C052  FFE6         	movff	int_high@i,postinc1
  5495  000DD0  C053  FFE6         	movff	int_high@i+1,postinc1
  5496  000DD4  ECD2  F00C         	call	___wmul	;wreg free
  5497  000DD8  0E08               	movlw	8
  5498  000DDA  265A               	addwf	btemp,f,c
  5499  000DDC  0E00               	movlw	0
  5500  000DDE  225B               	addwfc	btemp+1,f,c
  5501  000DE0  0E00               	movlw	low _F_APTOS
  5502  000DE2  245A               	addwf	btemp,w,c
  5503  000DE4  6ED9               	movwf	fsr2l,c
  5504  000DE6  0E01               	movlw	high _F_APTOS
  5505  000DE8  205B               	addwfc	btemp+1,w,c
  5506  000DEA  6EDA               	movwf	fsr2h,c
  5507  000DEC  0E01               	movlw	1
  5508  000DEE  6EDF               	movwf	indf2,c
  5509  000DF0                     i2l114:
  5510  000DF0  4A52               	infsnz	int_high@i,f,c
  5511  000DF2  2A53               	incf	int_high@i+1,f,c
  5512  000DF4                     i2l111:
  5513  000DF4  5019               	movf	_tasks_installed,w,c
  5514  000DF6  5C52               	subwf	int_high@i,w,c
  5515  000DF8  501A               	movf	_tasks_installed+1,w,c
  5516  000DFA  5853               	subwfb	int_high@i+1,w,c
  5517  000DFC  A0D8               	btfss	status,0,c
  5518  000DFE  D79B               	goto	i2l112
  5519                           
  5520                           ;kernel.c: 143: }
  5521                           ;kernel.c: 144: }
  5522                           ;kernel.c: 145: }
  5523                           ;kernel.c: 147: quantum--;
  5524  000E00  0666               	decf	_quantum,f,c
  5525  000E02  A0D8               	btfss	status,0,c
  5526  000E04  0667               	decf	_quantum+1,f,c
  5527                           
  5528                           ;kernel.c: 148: if (quantum == 0) {
  5529  000E06  5066               	movf	_quantum,w,c
  5530  000E08  1067               	iorwf	_quantum+1,w,c
  5531  000E0A  A4D8               	btfss	status,2,c
  5532  000E0C  D008               	goto	i2l116
  5533                           
  5534                           ;kernel.c: 149: quantum = 4;
  5535  000E0E  0E00               	movlw	0
  5536  000E10  6E67               	movwf	_quantum+1,c
  5537  000E12  0E04               	movlw	4
  5538  000E14  6E66               	movwf	_quantum,c
  5539                           
  5540                           ;kernel.c: 150: dispatcher(READY);
  5541  000E16  0E01               	movlw	1
  5542  000E18  6EE6               	movwf	postinc1,c
  5543  000E1A  EC03  F003         	call	_dispatcher	;wreg free
  5544  000E1E                     i2l116:
  5545  000E1E  C051  F065         	movff	??_int_high+14,btemp+11
  5546  000E22  C050  F064         	movff	??_int_high+13,btemp+10
  5547  000E26  C04F  F063         	movff	??_int_high+12,btemp+9
  5548  000E2A  C04E  F062         	movff	??_int_high+11,btemp+8
  5549  000E2E  C04D  F05C         	movff	??_int_high+10,btemp+2
  5550  000E32  C04C  F05B         	movff	??_int_high+9,btemp+1
  5551  000E36  C04B  F05A         	movff	??_int_high+8,btemp
  5552  000E3A  C04A  FFF4         	movff	??_int_high+7,prodh
  5553  000E3E  C049  FFF3         	movff	??_int_high+6,prodl
  5554  000E42  C048  FFDA         	movff	??_int_high+5,fsr2h
  5555  000E46  C047  FFD9         	movff	??_int_high+4,fsr2l
  5556  000E4A  C046  FFE2         	movff	??_int_high+3,fsr1h
  5557  000E4E  C045  FFE1         	movff	??_int_high+2,fsr1l
  5558  000E52  0011               	retfie		f
  5559  000E54                     __end_of_int_high:
  5560                           	opt stack 0
  5561                           tosu	equ	0xFFF
  5562                           tosh	equ	0xFFE
  5563                           tosl	equ	0xFFD
  5564                           stkptr	equ	0xFFC
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           indf0	equ	0xFEF
  5573                           postinc0	equ	0xFEE
  5574                           postdec0	equ	0xFED
  5575                           plusw0	equ	0xFEB
  5576                           fsr0h	equ	0xFEA
  5577                           fsr0l	equ	0xFE9
  5578                           wreg	equ	0xFE8
  5579                           postinc1	equ	0xFE6
  5580                           postdec1	equ	0xFE5
  5581                           plusw1	equ	0xFE3
  5582                           fsr1h	equ	0xFE2
  5583                           fsr1l	equ	0xFE1
  5584                           bsr	equ	0xFE0
  5585                           indf2	equ	0xFDF
  5586                           postinc2	equ	0xFDE
  5587                           postdec2	equ	0xFDD
  5588                           plusw2	equ	0xFDB
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           tosu	equ	0xFFF
  5593                           tosh	equ	0xFFE
  5594                           tosl	equ	0xFFD
  5595                           stkptr	equ	0xFFC
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           prodh	equ	0xFF4
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           indf0	equ	0xFEF
  5604                           postinc0	equ	0xFEE
  5605                           postdec0	equ	0xFED
  5606                           plusw0	equ	0xFEB
  5607                           fsr0h	equ	0xFEA
  5608                           fsr0l	equ	0xFE9
  5609                           wreg	equ	0xFE8
  5610                           postinc1	equ	0xFE6
  5611                           postdec1	equ	0xFE5
  5612                           plusw1	equ	0xFE3
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           bsr	equ	0xFE0
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           plusw2	equ	0xFDB
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624                           	psect	rparam
  5625  0000                     tosu	equ	0xFFF
  5626                           tosh	equ	0xFFE
  5627                           tosl	equ	0xFFD
  5628                           stkptr	equ	0xFFC
  5629                           tblptru	equ	0xFF8
  5630                           tblptrh	equ	0xFF7
  5631                           tblptrl	equ	0xFF6
  5632                           tablat	equ	0xFF5
  5633                           prodh	equ	0xFF4
  5634                           prodl	equ	0xFF3
  5635                           intcon	equ	0xFF2
  5636                           indf0	equ	0xFEF
  5637                           postinc0	equ	0xFEE
  5638                           postdec0	equ	0xFED
  5639                           plusw0	equ	0xFEB
  5640                           fsr0h	equ	0xFEA
  5641                           fsr0l	equ	0xFE9
  5642                           wreg	equ	0xFE8
  5643                           postinc1	equ	0xFE6
  5644                           postdec1	equ	0xFE5
  5645                           plusw1	equ	0xFE3
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           bsr	equ	0xFE0
  5649                           indf2	equ	0xFDF
  5650                           postinc2	equ	0xFDE
  5651                           postdec2	equ	0xFDD
  5652                           plusw2	equ	0xFDB
  5653                           fsr2h	equ	0xFDA
  5654                           fsr2l	equ	0xFD9
  5655                           status	equ	0xFD8
  5656                           
  5657                           	psect	temp
  5658  00005A                     btemp:
  5659                           	opt stack 0
  5660  00005A                     	ds	12
  5661  0000                     wtemp0	set	btemp
  5662  0000                     wtemp1	set	btemp+2
  5663  0000                     wtemp2	set	btemp+4
  5664  0000                     wtemp3	set	btemp+6
  5665  0000                     wtemp4	set	btemp+8
  5666  0000                     wtemp5	set	btemp+10
  5667  0000                     wtemp6	set	btemp+1
  5668  0000                     ttemp0	set	btemp
  5669  0000                     ttemp1	set	btemp+3
  5670  0000                     ttemp2	set	btemp+6
  5671  0000                     ttemp3	set	btemp+9
  5672  0000                     ltemp0	set	btemp
  5673  0000                     ltemp1	set	btemp+4
  5674  0000                     ltemp2	set	btemp+8
  5675                           tosu	equ	0xFFF
  5676                           tosh	equ	0xFFE
  5677                           tosl	equ	0xFFD
  5678                           stkptr	equ	0xFFC
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           intcon	equ	0xFF2
  5686                           indf0	equ	0xFEF
  5687                           postinc0	equ	0xFEE
  5688                           postdec0	equ	0xFED
  5689                           plusw0	equ	0xFEB
  5690                           fsr0h	equ	0xFEA
  5691                           fsr0l	equ	0xFE9
  5692                           wreg	equ	0xFE8
  5693                           postinc1	equ	0xFE6
  5694                           postdec1	equ	0xFE5
  5695                           plusw1	equ	0xFE3
  5696                           fsr1h	equ	0xFE2
  5697                           fsr1l	equ	0xFE1
  5698                           bsr	equ	0xFE0
  5699                           indf2	equ	0xFDF
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           plusw2	equ	0xFDB
  5703                           fsr2h	equ	0xFDA
  5704                           fsr2l	equ	0xFD9
  5705                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    2
    Data        2
    BSS         748
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     23      91
    BANK0           128     17      17
    BANK1           256      0     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    _SRAMmerge@pSegA	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	near PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_destroy@pipe_handler.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_write@pipe_handler.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_write@pipe_handler	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    pipe_read@msg	PTR unsigned char  size(2) Largest target is 1
		 -> acender@dado(UNKNOWN), 

    pipe_read@pipe_handler.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_read@pipe_handler	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    pipe_create@pipe_handler.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_create@pipe_handler	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_post@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_post@s	PTR struct sem size(2) Largest target is 9
		 -> spista(COMRAM[8]), 

    sem_wait@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_wait@s	PTR struct sem size(2) Largest target is 9
		 -> spista(COMRAM[8]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_init@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_init@s	PTR struct sem size(2) Largest target is 9
		 -> t1(COMRAM[8]), spista(COMRAM[8]), 

    testL.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipeluzes.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    F_APTOS.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), acender(), led_3(), led_2(), 
		 -> led_1(), 

    create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), acender(), led_3(), led_2(), 
		 -> led_1(), 

    S175tcb$task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), acender(), led_3(), led_2(), 
		 -> led_1(), 

    task.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> task_idle(), acender(), led_3(), led_2(), 
		 -> led_1(), 

    t2.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    t1.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S36_queue$task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    spista.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S21pipe$p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    mensagens.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_create_task
    _setupOS->_create_task

Critical Paths under _led_1 in COMRAM

    None.

Critical Paths under _led_2 in COMRAM

    None.

Critical Paths under _led_3 in COMRAM

    None.

Critical Paths under _acender in COMRAM

    None.

Critical Paths under _task_idle in COMRAM

    None.

Critical Paths under _led_1 in COMRAM

    None.

Critical Paths under _led_2 in COMRAM

    None.

Critical Paths under _led_3 in COMRAM

    None.

Critical Paths under _acender in COMRAM

    None.

Critical Paths under _int_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_create_task
    _setupOS->_create_task

Critical Paths under _led_1 in BANK0

    None.

Critical Paths under _led_2 in BANK0

    None.

Critical Paths under _led_3 in BANK0

    None.

Critical Paths under _acender in BANK0

    None.

Critical Paths under _task_idle in BANK0

    None.

Critical Paths under _led_1 in BANK0

    None.

Critical Paths under _led_2 in BANK0

    None.

Critical Paths under _led_3 in BANK0

    None.

Critical Paths under _acender in BANK0

    None.

Critical Paths under _int_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _led_1 in BANK1

    None.

Critical Paths under _led_2 in BANK1

    None.

Critical Paths under _led_3 in BANK1

    None.

Critical Paths under _acender in BANK1

    None.

Critical Paths under _task_idle in BANK1

    None.

Critical Paths under _led_1 in BANK1

    None.

Critical Paths under _led_2 in BANK1

    None.

Critical Paths under _led_3 in BANK1

    None.

Critical Paths under _acender in BANK1

    None.

Critical Paths under _int_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _led_1 in BANK2

    None.

Critical Paths under _led_2 in BANK2

    None.

Critical Paths under _led_3 in BANK2

    None.

Critical Paths under _acender in BANK2

    None.

Critical Paths under _task_idle in BANK2

    None.

Critical Paths under _led_1 in BANK2

    None.

Critical Paths under _led_2 in BANK2

    None.

Critical Paths under _led_3 in BANK2

    None.

Critical Paths under _acender in BANK2

    None.

Critical Paths under _int_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _led_1 in BANK3

    None.

Critical Paths under _led_2 in BANK3

    None.

Critical Paths under _led_3 in BANK3

    None.

Critical Paths under _acender in BANK3

    None.

Critical Paths under _task_idle in BANK3

    None.

Critical Paths under _led_1 in BANK3

    None.

Critical Paths under _led_2 in BANK3

    None.

Critical Paths under _led_3 in BANK3

    None.

Critical Paths under _acender in BANK3

    None.

Critical Paths under _int_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _led_1 in BANK4

    None.

Critical Paths under _led_2 in BANK4

    None.

Critical Paths under _led_3 in BANK4

    None.

Critical Paths under _acender in BANK4

    None.

Critical Paths under _task_idle in BANK4

    None.

Critical Paths under _led_1 in BANK4

    None.

Critical Paths under _led_2 in BANK4

    None.

Critical Paths under _led_3 in BANK4

    None.

Critical Paths under _acender in BANK4

    None.

Critical Paths under _int_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _led_1 in BANK5

    None.

Critical Paths under _led_2 in BANK5

    None.

Critical Paths under _led_3 in BANK5

    None.

Critical Paths under _acender in BANK5

    None.

Critical Paths under _task_idle in BANK5

    None.

Critical Paths under _led_1 in BANK5

    None.

Critical Paths under _led_2 in BANK5

    None.

Critical Paths under _led_3 in BANK5

    None.

Critical Paths under _acender in BANK5

    None.

Critical Paths under _int_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7793
                       _SRAMInitHeap
                         _confi_port
                        _create_task
                           _sem_init
                            _setupOS
                           _start_os
 ---------------------------------------------------------------------------------
 (1) _start_os                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupOS                                              0     0      0    3237
                       _SRAMInitHeap
                        _create_task
 ---------------------------------------------------------------------------------
 (2) _create_task                                         23    17      6    3079
                                             17 COMRAM     6     0      6
                                              0 BANK0     17    17      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                             17 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _sem_init                                             4     0      4    1319
                                             17 COMRAM     4     0      4
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (6) _SRAMalloc                                            7     6      1     905
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (7) __SRAMmerge                                           7     5      2     414
 ---------------------------------------------------------------------------------
 (1) _confi_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_1                                                0     0      0   19331
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_2                                                0     0      0   19331
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_3                                                0     0      0   27585
                              _delay
                        _pipe_create
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           3     0      3    7115
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1553
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _pipe_create                                          6     0      6    1139
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (6) _SRAMalloc                                            7     6      1     905
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (7) __SRAMmerge                                           7     5      2     414
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _acender                                              1     1      0   13888
                              _delay
                          _pipe_read
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4    7084
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1553
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _task_idle                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_1                                                0     0      0   19331
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_2                                                0     0      0   19331
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_3                                                0     0      0   27585
                              _delay
                        _pipe_create
                         _pipe_write
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    5555
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    7040
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           3     0      3    7115
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1553
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _pipe_create                                          6     0      6    1139
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (6) _SRAMalloc                                            7     6      1     905
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (7) __SRAMmerge                                           7     5      2     414
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _acender                                              1     1      0   13888
                              _delay
                          _pipe_read
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4    7084
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1553
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    6736
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _int_high                                           17    17      0    6593
                                              0 COMRAM    17    17      0
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4978
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3493
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1590
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1454
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _confi_port
   _create_task
     ___wmul
   _sem_init
     _SRAMalloc
       __SRAMmerge
   _setupOS
     _SRAMInitHeap
     _create_task
       ___wmul
   _start_os

 _led_1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_create
     _SRAMalloc
       __SRAMmerge
   _pipe_write
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _acender (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_read
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _task_idle (ROOT)

 _led_1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_create
     _SRAMalloc
       __SRAMmerge
   _pipe_write
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _acender (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_read
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _int_high (ROOT)
   ___wmul
   _dispatcher
     ___wmul
     _rr_scheduler
       ___lwmod
       ___wmul
       _contagemR
         ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      17       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AA       7       66.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     11      11       5       13.3%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     17      5B       1       79.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     116      15        0.0%
DATA                 0      0     31A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 22 02:20:03 2018

                       l37 1862                         l88 094A                         _t1 0033  
                       _t2 000D  __size_of_libera_processos 009A                        l213 1AD4  
                      l207 1A42                        l246 176A                        l337 0CDE  
                      l354 1C2E                        l355 1C5C                        _BSR 000FE0  
                      u600 100E                        u750 0B5A                        u690 1C3A  
                      u790 0BF0                        _TOS 000FFD              create_task@id 0054  
                      wreg 000FE8          SRAMInitHeap@pHeap 0056          SRAMInitHeap@count 0054  
                     l2402 15A6                       l2422 1968                       l2424 1986  
                     l2418 1918                       l2522 1472                       l2444 06C2  
                     l2540 0F9C                       l1900 0B76                       l1822 165C  
                     l2374 1724                       l1814 10DA                       l1832 16CC  
                     l2464 08DC                       l2572 1364                       l2564 126A  
                     l2556 1234                       l2548 1144                       l2732 1888  
                     l1782 1012                       l1918 0C1C                       l1928 0C5C  
                     l2768 1B5A                       l1898 0B62                       STR_1 0603  
                     u1111 1C12                       _TOSH 000FFE                       _TOSL 000FFD  
                     _WREG 000FE8                       _TOSU 000FFF                       _cont 0015  
                     _main 17B8                       fsr0h 000FEA                       fsr1h 000FE2  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr1l 000FE1                       fsr2l 000FD9  
                     btemp 005A                       prodh 000FF4                       prodl 000FF3  
                     start 000C               ___param_bank 000000                      ?_main 0043  
          _tasks_installed 0019                      i2l111 0DF4                      i2l112 0D36  
          __end_of___lwmod 1700                      i2l114 0DF0                      i2l116 0E1E  
          __end_of_acender 1BC6                      _TMR0L 000FD6                      _PORTB 000F81  
                    _TRISB 000F93                      _TRISD 000F95                      u66_20 1684  
                    u68_20 16EA                 __SRAMmerge 0FA8                      _delay 1D26  
                    _led_1 1A3A                      _led_2 1ACC                      _led_3 1864  
                    _testL 001B            create_task@task 0080         __size_of_SRAMalloc 01A2  
                    tablat 000FF5                      ltemp0 005A                      ltemp1 005E  
                    ltemp2 0062            __end_of_setupOS 1DA8                      plusw0 000FEB  
                    plusw1 000FE3                      plusw2 000FDB                      ttemp0 005A  
                    ttemp1 005D                      ttemp2 0060                      ttemp3 0063  
                    status 000FD8                      wtemp0 005A                      wtemp1 005C  
                    wtemp2 005E                      wtemp3 0060                      wtemp4 0062  
                    wtemp5 0064                      wtemp6 005B            __initialization 1CD4  
             __end_of_main 1864                     ??_main 005A              __activetblptr 000001  
                   u110_20 17A2                     u112_20 1596                     u120_20 0B1A  
                   u112_26 1598                     u122_20 0E8A                     u122_21 0E88  
                   u115_20 162E                     u137_20 1B88                     u137_26 1B8A  
                   u138_20 1BB0                     u138_26 1BB2                     _STATUS 000FD8  
                   _STKPTR 000FFC       __size_of_create_task 005A                     ___wmul 19A4  
        __end_of_SRAMalloc 0CE8                     clear_0 1CF4                     clear_1 1D06  
                   clear_2 1D12           __end_of_int_high 0E54           _libera_processos 190A  
         create_task@prior 0056                     _spista 003B           __end_of_sem_init 1CD4  
         __end_of_sem_wait 147E           __end_of_sem_post 0FA8               __pdataCOMRAM 0066  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_setupOS 005A           __end_of_start_os 1DB2  
               __accesstop 0080    __end_of__initialization 1D18              ___rparam_used 000001  
           __pcstackCOMRAM 0043                 ___inthi_sp 0472              __end_of_delay 1D6E  
            __end_of_led_1 1ACC              __end_of_led_2 1B52              __end_of_led_3 190A  
       __size_of_contagemR 00B8                 __pbssBANK1 0100              __uDynamicHeap 01AA  
      __size_of__SRAMmerge 0152         __size_of_pipe_read 0132         __size_of_task_idle 0002  
                  _F_APTOS 0100                 _confi_port 1DA8                 _dispatcher 0606  
     __size_of_pipe_create 00E4                  ?_int_high 0043                    __Hparam 0000  
                ?_sem_init 0054                    __Lparam 0000         __end_of_STACK_SIZE 0603  
          __size_of___wmul 0096          __end_of_contagemR 17B8                    ___lwmod 1644  
                  _acender 1B52               __psmallconst 0600                  ?_start_os 0043  
                  __pcinit 1CD4                    __ramtop 0600              ?_SRAMInitHeap 0043  
                  __ptext0 17B8                    __ptext1 1DAE                    __ptext2 1D6E  
                  __ptext3 1BC6                    __ptext4 19A4                    __ptext5 1C20  
                  __ptext6 1C7A                    __ptext7 0B46                    __ptext8 0FA8  
                  __ptext9 1DA8                  _T0CONbits 000FD5                    _setupOS 1D6E  
        create_task@task_f 0058                    _quantum 0066             __pintcode_body 0CE8  
     end_of_initialization 1D18          __end_of_pipe_read 1370   __end_of_libera_processos 19A4  
        __end_of_task_idle 1DB6                    int_func 0CE8                 ??_int_high 0043  
               _pipe_write 10FA                 ??_sem_init 0058                    postdec0 000FED  
                  postdec1 000FE5                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_start_os 0054  
           ??_SRAMInitHeap 0054                  _PORTBbits 000F81                  _PORTCbits 000F82  
                _PORTDbits 000F83                  _PORTEbits 000F84                  _SRAMalloc 0B46  
                _TRISBbits 000F93                  _TRISCbits 000F94                ?_confi_port 0043  
            sem_init@value 0056              ??_create_task 005A         __end_of__SRAMmerge 10FA  
           __end_of___wmul 1A3A              __pidataCOMRAM 1DB2        start_initialization 1CD4  
      __end_of_create_task 1C20        __size_of_confi_port 0006        __size_of_dispatcher 0540  
              __pbssBIGRAM 01AA                __pbssCOMRAM 0001              __pcstackBANK0 0080  
     __end_of_SRAMInitHeap 1C7A          __size_of_int_high 0E4C                  __pintcode 0008  
        __size_of_sem_init 005A          __size_of_sem_wait 010E          __size_of_sem_post 0154  
        __size_of_start_os 0004                  _contagemR 1700                __smallconst 0600  
      __size_of_pipe_write 0144                   ?_setupOS 0043             __size_of_delay 0048  
           __size_of_led_1 0092             __size_of_led_2 0086             __size_of_led_3 00A6  
     __end_of_rr_scheduler 1644                  _mensagens 0001                _create_task 1BC6  
                 _LATBbits 000F8A                   _LATCbits 000F8B                  _pipe_read 123E  
                _task_idle 1DB4                  _pipeluzes 0027               ??_confi_port 0054  
      __end_of_pipe_create 1562                   __Hrparam 0000                   __Lrparam 0000  
             __Lsmallconst 0600         __end_of_confi_port 1DAE                  int_high@i 0052  
       __end_of_dispatcher 0B46           __size_of___lwmod 00BC           __size_of_acender 0074  
    __size_of_SRAMInitHeap 005A                   __ptext10 1A3A                   __ptext11 1370  
                 __ptext20 10FA                   __ptext12 0E54                   __ptext21 190A  
                 __ptext13 1D26                   __ptext22 147E                   __ptext14 0606  
                 __ptext23 1B52                   __ptext15 1562                   __ptext24 123E  
                 __ptext16 1700                   __ptext25 1DB4                   __ptext17 1644  
                 __ptext18 1ACC                   __ptext19 1864           __size_of_setupOS 003A  
                sem_init@s 0054              __size_of_main 00AC                   _int_high 0008  
                 _sem_init 1C7A                   _sem_wait 1370                   _sem_post 0E54  
             _task_running 0017                   _start_os 1DAE               _SRAMInitHeap 1C20  
    __size_of_rr_scheduler 00E2                 _INTCONbits 000FF2         __end_of_pipe_write 123E  
              _pipe_create 147E                   intlevel1 0000                   intlevel2 0000  
             _rr_scheduler 1562                 _STACK_SIZE 0601               ?_create_task 0054  
