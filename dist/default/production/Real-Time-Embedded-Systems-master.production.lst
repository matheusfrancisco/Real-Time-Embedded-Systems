

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Nov 23 18:43:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4520 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81 ;;___wmul@product	offset	0
    82 ;;___wmul@multiplier	offset=-2 (param)
    83 ;;___wmul@multiplicand	offset=-4 (param)
    84 ;;delay@time_ms	offset=-2 (param)
    85 ;;dispatcher@state	offset=-1 (param)
    86 ;;rr_scheduler@next_task_to_run	offset	0
    87 ;;rr_scheduler@j	offset	2
    88 ;;rr_scheduler@cont	offset	4
    89 ;;contagemR@i	offset	0
    90 ;;contagemR@x	offset	2
    91 ;;___wmul@product	offset	0
    92 ;;___wmul@multiplier	offset=-2 (param)
    93 ;;___wmul@multiplicand	offset=-4 (param)
    94 ;;___lwmod@counter	offset	0
    95 ;;___lwmod@dividend	offset=-2 (param)
    96 ;;___lwmod@divisor	offset=-4 (param)
    97 ;;sem_wait@pos	offset	0
    98 ;;sem_wait@s	offset=-2 (param)
    99 ;;sem_post@value	offset	0
   100 ;;sem_post@s	offset=-2 (param)
   101 ;;pipe_write@pipe	offset=-2 (param)
   102 ;;pipe_write@msg	offset=-3 (param)
   103 ;;libera_processos@i	offset	0
   104 ;;acender@dado	offset	0
   105 ;;pipe_read@pipe	offset=-2 (param)
   106 ;;pipe_read@msg	offset=-4 (param)
   107 ;;dispatcher@state	offset=-1 (param)
   108 ;;rr_scheduler@next_task_to_run	offset	0
   109 ;;rr_scheduler@j	offset	2
   110 ;;rr_scheduler@cont	offset	4
   111 ;;contagemR@i	offset	0
   112 ;;contagemR@x	offset	2
   113 ;;___wmul@product	offset	0
   114 ;;___wmul@multiplier	offset=-2 (param)
   115 ;;___wmul@multiplicand	offset=-4 (param)
   116 ;;___lwmod@counter	offset	0
   117 ;;___lwmod@dividend	offset=-2 (param)
   118 ;;___lwmod@divisor	offset=-4 (param)
   119                           
   120                           	psect	idataCOMRAM
   121  001BF8                     __pidataCOMRAM:
   122                           	opt stack 0
   123                           
   124                           ;initializer for _quantum
   125  001BF8  0004               	dw	4
   126                           
   127                           	psect	smallconst
   128  000600                     __psmallconst:
   129                           	opt stack 0
   130  000600  00                 	db	0
   131  000601  001F               	dw	31
   132  000603                     __end_of_STACK_SIZE:
   133                           	opt stack 0
   134  0000                     _TOS	set	4093
   135  0000                     _PORTEbits	set	3972
   136  0000                     _LATBbits	set	3978
   137  0000                     _LATCbits	set	3979
   138  0000                     _PORTCbits	set	3970
   139  0000                     _TRISCbits	set	3988
   140  0000                     _PORTDbits	set	3971
   141  0000                     _PORTBbits	set	3969
   142  0000                     _TRISD	set	3989
   143  0000                     _TMR0L	set	4054
   144  0000                     _T0CONbits	set	4053
   145  0000                     _STKPTR	set	4092
   146  0000                     _TOSH	set	4094
   147  0000                     _TOSL	set	4093
   148  0000                     _TOSU	set	4095
   149  0000                     _WREG	set	4072
   150  0000                     _STATUS	set	4056
   151  0000                     _BSR	set	4064
   152  0000                     _INTCONbits	set	4082
   153  0000                     _TRISBbits	set	3987
   154  000603  00                 	db	0	; dummy byte at the end
   155  0000                     
   156                           ; #config settings
   157                           
   158                           	psect	cinit
   159  001B04                     __pcinit:
   160                           	opt stack 0
   161  001B04                     start_initialization:
   162                           	opt stack 0
   163  001B04                     __initialization:
   164                           	opt stack 0
   165                           
   166                           ; Initialize objects allocated to COMRAM (2 bytes)
   167                           ; load TBLPTR registers with __pidataCOMRAM
   168  001B04  0EF8               	movlw	low __pidataCOMRAM
   169  001B06  6EF6               	movwf	tblptrl,c
   170  001B08  0E1B               	movlw	high __pidataCOMRAM
   171  001B0A  6EF7               	movwf	tblptrh,c
   172  001B0C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   173  001B0E  6EF8               	movwf	tblptru,c
   174  001B10  0009               	tblrd		*+	;fetch initializer
   175  001B12  CFF5 F06D          	movff	tablat,__pdataCOMRAM
   176  001B16  0009               	tblrd		*+	;fetch initializer
   177  001B18  CFF5 F06E          	movff	tablat,__pdataCOMRAM+1
   178                           
   179                           ; Clear objects allocated to BIGRAM (512 bytes)
   180  001B1C  EE01  F0AA         	lfsr	0,__pbssBIGRAM
   181  001B20  EE22 F000          	lfsr	2,512
   182  001B24                     clear_0:
   183  001B24  6AEE               	clrf	postinc0,c
   184  001B26  50DD               	movf	postdec2,w,c
   185  001B28  50D9               	movf	fsr2l,w,c
   186  001B2A  E1FC               	bnz	clear_0
   187  001B2C  50DA               	movf	fsr2h,w,c
   188  001B2E  E1FA               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to BANK1 (170 bytes)
   191  001B30  EE01  F000         	lfsr	0,__pbssBANK1
   192  001B34  0EAA               	movlw	170
   193  001B36                     clear_1:
   194  001B36  6AEE               	clrf	postinc0,c
   195  001B38  06E8               	decf	wreg,f,c
   196  001B3A  E1FD               	bnz	clear_1
   197                           
   198                           ; Clear objects allocated to COMRAM (54 bytes)
   199  001B3C  EE00  F001         	lfsr	0,__pbssCOMRAM
   200  001B40  0E36               	movlw	54
   201  001B42                     clear_2:
   202  001B42  6AEE               	clrf	postinc0,c
   203  001B44  06E8               	decf	wreg,f,c
   204  001B46  E1FD               	bnz	clear_2
   205  001B48                     end_of_initialization:
   206                           	opt stack 0
   207  001B48                     __end_of__initialization:
   208                           	opt stack 0
   209  001B48  0E00               	movlw	low (__Lsmallconst shr (0+16))
   210  001B4A  6EF8               	movwf	tblptru,c
   211  001B4C  0E06               	movlw	high __Lsmallconst
   212  001B4E  6EF7               	movwf	tblptrh,c
   213  001B50  0100               	movlb	0
   214  001B52  EFC4  F008         	goto	_main	;jump to C main() function
   215                           tblptru	equ	0xFF8
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           postinc0	equ	0xFEE
   220                           wreg	equ	0xFE8
   221                           postdec2	equ	0xFDD
   222                           fsr2h	equ	0xFDA
   223                           fsr2l	equ	0xFD9
   224                           
   225                           	psect	bssCOMRAM
   226  000001                     __pbssCOMRAM:
   227                           	opt stack 0
   228  000001                     _pipeluzes:
   229                           	opt stack 0
   230  000001                     	ds	12
   231  00000D                     _t2:
   232                           	opt stack 0
   233  00000D                     	ds	8
   234  000015                     _cont:
   235                           	opt stack 0
   236  000015                     	ds	2
   237  000017                     _task_running:
   238                           	opt stack 0
   239  000017                     	ds	2
   240  000019                     _tasks_installed:
   241                           	opt stack 0
   242  000019                     	ds	2
   243  00001B                     _testL:
   244                           	opt stack 0
   245  00001B                     	ds	12
   246  000027                     _t1:
   247                           	opt stack 0
   248  000027                     	ds	8
   249  00002F                     _spista:
   250                           	opt stack 0
   251  00002F                     	ds	8
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec2	equ	0xFDD
   259                           fsr2h	equ	0xFDA
   260                           fsr2l	equ	0xFD9
   261                           
   262                           	psect	dataCOMRAM
   263  00006D                     __pdataCOMRAM:
   264                           	opt stack 0
   265  00006D                     _quantum:
   266                           	opt stack 0
   267  00006D                     	ds	2
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec2	equ	0xFDD
   275                           fsr2h	equ	0xFDA
   276                           fsr2l	equ	0xFD9
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	opt stack 0
   281  000100                     _F_APTOS:
   282                           	opt stack 0
   283  000100                     	ds	170
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec2	equ	0xFDD
   291                           fsr2h	equ	0xFDA
   292                           fsr2l	equ	0xFD9
   293                           
   294                           	psect	bssBIGRAM
   295  0001AA                     __pbssBIGRAM:
   296                           	opt stack 0
   297  0001AA                     __uDynamicHeap:
   298                           	opt stack 0
   299  0001AA                     	ds	512
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec2	equ	0xFDD
   307                           fsr2h	equ	0xFDA
   308                           fsr2l	equ	0xFD9
   309                           
   310                           	psect	cstackCOMRAM
   311  000037                     __pcstackCOMRAM:
   312                           	opt stack 0
   313  000037                     ??_int_high:
   314                           
   315                           ; 1 bytes @ 0x0
   316  000037                     	ds	15
   317  000046                     int_high@i:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0xF
   321  000046                     	ds	2
   322  000048                     create_task@id:
   323                           	opt stack 0
   324  000048                     SRAMInitHeap@count:
   325                           	opt stack 0
   326  000048                     __SRAMmerge@pSegA:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x11
   330  000048                     	ds	2
   331  00004A                     ??__SRAMmerge:
   332  00004A                     create_task@prior:
   333                           	opt stack 0
   334  00004A                     SRAMInitHeap@pHeap:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x13
   338  00004A                     	ds	1
   339  00004B                     __SRAMmerge@uSum:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x14
   343  00004B                     	ds	1
   344  00004C                     __SRAMmerge@uSegA:
   345                           	opt stack 0
   346  00004C                     create_task@task_f:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x15
   350  00004C                     	ds	1
   351  00004D                     __SRAMmerge@uSegB:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x16
   355  00004D                     	ds	1
   356  00004E                     __SRAMmerge@pSegB:
   357                           	opt stack 0
   358  00004E                     create_task@task:
   359                           	opt stack 0
   360                           
   361                           ; 17 bytes @ 0x17
   362  00004E                     	ds	2
   363  000050                     ?_SRAMalloc:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x19
   367  000050                     	ds	2
   368  000052                     ??_SRAMalloc:
   369                           
   370                           ; 1 bytes @ 0x1B
   371  000052                     	ds	2
   372  000054                     SRAMalloc@segLen:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x1D
   376  000054                     	ds	1
   377  000055                     SRAMalloc@segHeader:
   378                           	opt stack 0
   379                           
   380                           ; 1 bytes @ 0x1E
   381  000055                     	ds	1
   382  000056                     SRAMalloc@temp:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x1F
   386  000056                     	ds	2
   387  000058                     SRAMalloc@nBytes:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x21
   391  000058                     	ds	1
   392  000059                     SRAMalloc@pHeap:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x22
   396  000059                     	ds	2
   397  00005B                     sem_init@s:
   398                           	opt stack 0
   399  00005B                     pipe_create@pipe:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x24
   403  00005B                     	ds	2
   404  00005D                     sem_init@value:
   405                           	opt stack 0
   406  00005D                     pipe_create@id:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x26
   410  00005D                     	ds	2
   411  00005F                     pipe_create@size:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x28
   415  00005F                     	ds	2
   416  000061                     tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec2	equ	0xFDD
   423                           fsr2h	equ	0xFDA
   424                           fsr2l	equ	0xFD9
   425                           
   426                           ; 1 bytes @ 0x2A
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 18 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   446 ;;      Params:         0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels required when called:   14
   452 ;; This function calls:
   453 ;;		_SRAMInitHeap
   454 ;;		_confi_port
   455 ;;		_create_task
   456 ;;		_pipe_create
   457 ;;		_sem_init
   458 ;;		_setupOS
   459 ;;		_start_os
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text0
   466  001188                     __ptext0:
   467                           	opt stack 0
   468  001188                     _main:
   469                           	opt stack 17
   470                           
   471                           ;main.c: 20: setupOS();
   472                           
   473                           ;incstack = 0
   474  001188  ECCF  F00D         	call	_setupOS	;wreg free
   475                           
   476                           ;main.c: 21: SRAMInitHeap();
   477  00118C  ECD1  F00C         	call	_SRAMInitHeap	;wreg free
   478                           
   479                           ;main.c: 22: extern sem_t spista;
   480                           ;main.c: 23: extern sem_t t1;
   481                           ;main.c: 24: extern sem_t t2;
   482                           ;main.c: 25: extern pipe_t testL;
   483                           ;main.c: 26: TRISBbits.RB0 = 0;
   484  001190  9093               	bcf	3987,0,c	;volatile
   485                           
   486                           ;main.c: 29: confi_port();
   487  001192  ECF7  F00D         	call	_confi_port	;wreg free
   488                           
   489                           ;main.c: 30: sem_init(&spista, 1);
   490  001196  0E2F               	movlw	low _spista
   491  001198  6E5B               	movwf	sem_init@s,c
   492  00119A  0E00               	movlw	high _spista
   493  00119C  6E5C               	movwf	sem_init@s+1,c
   494  00119E  0E00               	movlw	0
   495  0011A0  6E5E               	movwf	sem_init@value+1,c
   496  0011A2  0E01               	movlw	1
   497  0011A4  6E5D               	movwf	sem_init@value,c
   498  0011A6  ECFE  F00C         	call	_sem_init	;wreg free
   499                           
   500                           ;main.c: 31: sem_init(&t1, 1);
   501  0011AA  0E27               	movlw	low _t1
   502  0011AC  6E5B               	movwf	sem_init@s,c
   503  0011AE  0E00               	movlw	high _t1
   504  0011B0  6E5C               	movwf	sem_init@s+1,c
   505  0011B2  0E00               	movlw	0
   506  0011B4  6E5E               	movwf	sem_init@value+1,c
   507  0011B6  0E01               	movlw	1
   508  0011B8  6E5D               	movwf	sem_init@value,c
   509  0011BA  ECFE  F00C         	call	_sem_init	;wreg free
   510                           
   511                           ;main.c: 32: pipe_create(&testL,5,1);
   512  0011BE  0E1B               	movlw	low _testL
   513  0011C0  6E5B               	movwf	pipe_create@pipe,c
   514  0011C2  0E00               	movlw	high _testL
   515  0011C4  6E5C               	movwf	pipe_create@pipe+1,c
   516  0011C6  0E00               	movlw	0
   517  0011C8  6E5E               	movwf	pipe_create@id+1,c
   518  0011CA  0E05               	movlw	5
   519  0011CC  6E5D               	movwf	pipe_create@id,c
   520  0011CE  0E00               	movlw	0
   521  0011D0  6E60               	movwf	pipe_create@size+1,c
   522  0011D2  0E01               	movlw	1
   523  0011D4  6E5F               	movwf	pipe_create@size,c
   524  0011D6  EC56  F00C         	call	_pipe_create	;wreg free
   525                           
   526                           ;main.c: 38: create_task(1, 3, &aviaoidle);
   527  0011DA  0E00               	movlw	0
   528  0011DC  6E49               	movwf	create_task@id+1,c
   529  0011DE  0E01               	movlw	1
   530  0011E0  6E48               	movwf	create_task@id,c
   531  0011E2  0E00               	movlw	0
   532  0011E4  6E4B               	movwf	create_task@prior+1,c
   533  0011E6  0E03               	movlw	3
   534  0011E8  6E4A               	movwf	create_task@prior,c
   535  0011EA  0EDA               	movlw	low _aviaoidle
   536  0011EC  6E4C               	movwf	create_task@task_f,c
   537  0011EE  0E1B               	movlw	high _aviaoidle
   538  0011F0  6E4D               	movwf	create_task@task_f+1,c
   539  0011F2  EC2A  F00D         	call	_create_task	;wreg free
   540                           
   541                           ;main.c: 40: create_task(2, 3, &led_1);
   542  0011F6  0E00               	movlw	0
   543  0011F8  6E49               	movwf	create_task@id+1,c
   544  0011FA  0E02               	movlw	2
   545  0011FC  6E48               	movwf	create_task@id,c
   546  0011FE  0E00               	movlw	0
   547  001200  6E4B               	movwf	create_task@prior+1,c
   548  001202  0E03               	movlw	3
   549  001204  6E4A               	movwf	create_task@prior,c
   550  001206  0E94               	movlw	low _led_1
   551  001208  6E4C               	movwf	create_task@task_f,c
   552  00120A  0E17               	movlw	high _led_1
   553  00120C  6E4D               	movwf	create_task@task_f+1,c
   554  00120E  EC2A  F00D         	call	_create_task	;wreg free
   555                           
   556                           ;main.c: 41: create_task(3, 3, &led_2);
   557  001212  0E00               	movlw	0
   558  001214  6E49               	movwf	create_task@id+1,c
   559  001216  0E03               	movlw	3
   560  001218  6E48               	movwf	create_task@id,c
   561  00121A  0E00               	movlw	0
   562  00121C  6E4B               	movwf	create_task@prior+1,c
   563  00121E  0E03               	movlw	3
   564  001220  6E4A               	movwf	create_task@prior,c
   565  001222  0E26               	movlw	low _led_2
   566  001224  6E4C               	movwf	create_task@task_f,c
   567  001226  0E18               	movlw	high _led_2
   568  001228  6E4D               	movwf	create_task@task_f+1,c
   569  00122A  EC2A  F00D         	call	_create_task	;wreg free
   570                           
   571                           ;main.c: 42: create_task(4, 3, &led_3);
   572  00122E  0E00               	movlw	0
   573  001230  6E49               	movwf	create_task@id+1,c
   574  001232  0E04               	movlw	4
   575  001234  6E48               	movwf	create_task@id,c
   576  001236  0E00               	movlw	0
   577  001238  6E4B               	movwf	create_task@prior+1,c
   578  00123A  0E03               	movlw	3
   579  00123C  6E4A               	movwf	create_task@prior,c
   580  00123E  0E28               	movlw	low _led_3
   581  001240  6E4C               	movwf	create_task@task_f,c
   582  001242  0E19               	movlw	high _led_3
   583  001244  6E4D               	movwf	create_task@task_f+1,c
   584  001246  EC2A  F00D         	call	_create_task	;wreg free
   585                           
   586                           ;main.c: 44: create_task(5, 3, &dianoite);
   587  00124A  0E00               	movlw	0
   588  00124C  6E49               	movwf	create_task@id+1,c
   589  00124E  0E05               	movlw	5
   590  001250  6E48               	movwf	create_task@id,c
   591  001252  0E00               	movlw	0
   592  001254  6E4B               	movwf	create_task@prior+1,c
   593  001256  0E03               	movlw	3
   594  001258  6E4A               	movwf	create_task@prior,c
   595  00125A  0EBC               	movlw	low _dianoite
   596  00125C  6E4C               	movwf	create_task@task_f,c
   597  00125E  0E1B               	movlw	high _dianoite
   598  001260  6E4D               	movwf	create_task@task_f+1,c
   599  001262  EC2A  F00D         	call	_create_task	;wreg free
   600                           
   601                           ;main.c: 45: create_task(6, 3, &acender);
   602  001266  0E00               	movlw	0
   603  001268  6E49               	movwf	create_task@id+1,c
   604  00126A  0E06               	movlw	6
   605  00126C  6E48               	movwf	create_task@id,c
   606  00126E  0E00               	movlw	0
   607  001270  6E4B               	movwf	create_task@prior+1,c
   608  001272  0E03               	movlw	3
   609  001274  6E4A               	movwf	create_task@prior,c
   610  001276  0EAC               	movlw	low _acender
   611  001278  6E4C               	movwf	create_task@task_f,c
   612  00127A  0E1A               	movlw	high _acender
   613  00127C  6E4D               	movwf	create_task@task_f+1,c
   614  00127E  EC2A  F00D         	call	_create_task	;wreg free
   615                           
   616                           ;main.c: 67: start_os();
   617  001282  ECFA  F00D         	call	_start_os	;wreg free
   618  001286                     l43:
   619                           
   620                           ;main.c: 69: {
   621  001286  D7FF               	goto	l43
   622  001288                     __end_of_main:
   623                           	opt stack 0
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           postdec2	equ	0xFDD
   631                           fsr2h	equ	0xFDA
   632                           fsr2l	equ	0xFD9
   633                           
   634 ;; *************** function _start_os *****************
   635 ;; Defined at:
   636 ;;		line 155 in file "kernel.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   650 ;;      Params:         0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:   11
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665  001BF4                     __ptext1:
   666                           	opt stack 0
   667  001BF4                     _start_os:
   668                           	opt stack 19
   669                           
   670                           ;kernel.c: 159: T0CONbits.TMR0ON = 1;
   671                           
   672                           ;incstack = 0
   673  001BF4  8ED5               	bsf	4053,7,c	;volatile
   674  001BF6  0012               	return		;funcret
   675  001BF8                     __end_of_start_os:
   676                           	opt stack 0
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec2	equ	0xFDD
   684                           fsr2h	equ	0xFDA
   685                           fsr2l	equ	0xFD9
   686                           
   687 ;; *************** function _setupOS *****************
   688 ;; Defined at:
   689 ;;		line 86 in file "kernel.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         0       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:   12
   710 ;; This function calls:
   711 ;;		_SRAMInitHeap
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  001B9E                     __ptext2:
   719                           	opt stack 0
   720  001B9E                     _setupOS:
   721                           	opt stack 18
   722                           
   723                           ;kernel.c: 98: T0CONbits.T0CS = 0;
   724                           
   725                           ;incstack = 0
   726  001B9E  9AD5               	bcf	4053,5,c	;volatile
   727                           
   728                           ;kernel.c: 99: T0CONbits.PSA = 0;
   729  001BA0  96D5               	bcf	4053,3,c	;volatile
   730                           
   731                           ;kernel.c: 100: T0CONbits.T0PS = 0b111;
   732  001BA2  80D5               	bsf	4053,0,c	;volatile
   733  001BA4  82D5               	bsf	4053,1,c	;volatile
   734  001BA6  84D5               	bsf	4053,2,c	;volatile
   735                           
   736                           ;kernel.c: 101: INTCONbits.PEIE = 1;
   737  001BA8  8CF2               	bsf	intcon,6,c	;volatile
   738                           
   739                           ;kernel.c: 102: INTCONbits.TMR0IE = 1;
   740  001BAA  8AF2               	bsf	intcon,5,c	;volatile
   741                           
   742                           ;kernel.c: 103: TMR0L = 252;
   743  001BAC  0EFC               	movlw	252
   744  001BAE  6ED6               	movwf	4054,c	;volatile
   745                           
   746                           ;kernel.c: 105: T0CONbits.TMR0ON = 1;
   747  001BB0  8ED5               	bsf	4053,7,c	;volatile
   748                           
   749                           ;kernel.c: 122: TRISBbits.RB0 = 0;
   750  001BB2  9093               	bcf	3987,0,c	;volatile
   751                           
   752                           ;kernel.c: 124: SRAMInitHeap();
   753  001BB4  ECD1  F00C         	call	_SRAMInitHeap	;wreg free
   754                           
   755                           ;kernel.c: 126: INTCONbits.GIE = 1;
   756  001BB8  8EF2               	bsf	intcon,7,c	;volatile
   757  001BBA  0012               	return		;funcret
   758  001BBC                     __end_of_setupOS:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           intcon	equ	0xFF2
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec2	equ	0xFDD
   768                           fsr2h	equ	0xFDA
   769                           fsr2l	equ	0xFD9
   770                           
   771 ;; *************** function _SRAMInitHeap *****************
   772 ;; Defined at:
   773 ;;		line 303 in file "memory.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  count           2   17[COMRAM] unsigned int 
   778 ;;  pHeap           2   19[COMRAM] near PTR unsigned char 
   779 ;;		 -> _uDynamicHeap(512), 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   789 ;;      Params:         0       0       0       0       0       0       0
   790 ;;      Locals:         4       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0
   792 ;;      Totals:         4       0       0       0       0       0       0
   793 ;;Total ram usage:        4 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:   11
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;;		_setupOS
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text3
   805  0019A2                     __ptext3:
   806                           	opt stack 0
   807  0019A2                     _SRAMInitHeap:
   808                           	opt stack 18
   809                           
   810                           ;memory.c: 305: unsigned char * near pHeap;
   811                           ;memory.c: 306: near unsigned int count;
   812                           ;memory.c: 308: pHeap = _uDynamicHeap;
   813                           
   814                           ;incstack = 0
   815  0019A2  0EAA               	movlw	low __uDynamicHeap
   816  0019A4  6E4A               	movwf	SRAMInitHeap@pHeap,c
   817  0019A6  0E01               	movlw	high __uDynamicHeap
   818  0019A8  6E4B               	movwf	SRAMInitHeap@pHeap+1,c
   819                           
   820                           ;memory.c: 309: count = 0x200-1;
   821  0019AA  0E01               	movlw	1
   822  0019AC  6E49               	movwf	SRAMInitHeap@count+1,c
   823  0019AE  6848               	setf	SRAMInitHeap@count,c
   824  0019B0                     
   825                           ;memory.c: 312: {
   826                           ;memory.c: 313: if (count > 0x7F)
   827  0019B0  5049               	movf	SRAMInitHeap@count+1,w,c
   828  0019B2  E104               	bnz	u620
   829  0019B4  0E80               	movlw	128
   830  0019B6  5C48               	subwf	SRAMInitHeap@count,w,c
   831  0019B8  A0D8               	btfss	status,0,c
   832  0019BA  D011               	goto	l331
   833  0019BC                     u620:
   834                           
   835                           ;memory.c: 314: {
   836                           ;memory.c: 315: *pHeap = 0x7F;
   837  0019BC  C04A  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
   838  0019C0  C04B  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
   839  0019C4  0E7F               	movlw	127
   840  0019C6  6EDF               	movwf	indf2,c
   841                           
   842                           ;memory.c: 316: pHeap += 0x7F;
   843  0019C8  0E7F               	movlw	127
   844  0019CA  264A               	addwf	SRAMInitHeap@pHeap,f,c
   845  0019CC  0E00               	movlw	0
   846  0019CE  224B               	addwfc	SRAMInitHeap@pHeap+1,f,c
   847                           
   848                           ;memory.c: 317: count = count - 0x7F;
   849  0019D0  0E81               	movlw	129
   850  0019D2  2448               	addwf	SRAMInitHeap@count,w,c
   851  0019D4  6E48               	movwf	SRAMInitHeap@count,c
   852  0019D6  0EFF               	movlw	255
   853  0019D8  2049               	addwfc	SRAMInitHeap@count+1,w,c
   854  0019DA  6E49               	movwf	SRAMInitHeap@count+1,c
   855                           
   856                           ;memory.c: 318: }
   857  0019DC  D7E9               	goto	l330
   858  0019DE                     l331:
   859                           
   860                           ;memory.c: 319: else
   861                           ;memory.c: 320: {
   862                           ;memory.c: 321: *pHeap = count;
   863  0019DE  C04A  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
   864  0019E2  C04B  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
   865  0019E6  C048  FFDF         	movff	SRAMInitHeap@count,indf2
   866                           
   867                           ;memory.c: 322: *(pHeap + count) = 0;
   868  0019EA  5048               	movf	SRAMInitHeap@count,w,c
   869  0019EC  244A               	addwf	SRAMInitHeap@pHeap,w,c
   870  0019EE  6ED9               	movwf	fsr2l,c
   871  0019F0  5049               	movf	SRAMInitHeap@count+1,w,c
   872  0019F2  204B               	addwfc	SRAMInitHeap@pHeap+1,w,c
   873  0019F4  6EDA               	movwf	fsr2h,c
   874  0019F6  0E00               	movlw	0
   875  0019F8  6EDF               	movwf	indf2,c
   876                           
   877                           ;memory.c: 323: return;
   878  0019FA  0012               	return	
   879  0019FC                     __end_of_SRAMInitHeap:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           indf2	equ	0xFDF
   889                           postdec2	equ	0xFDD
   890                           fsr2h	equ	0xFDA
   891                           fsr2l	equ	0xFD9
   892                           status	equ	0xFD8
   893                           
   894 ;; *************** function _sem_init *****************
   895 ;; Defined at:
   896 ;;		line 8 in file "semaphore.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  s               2   36[COMRAM] PTR struct sem
   899 ;;		 -> t1(8), spista(8), 
   900 ;;  value           2   38[COMRAM] int 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   912 ;;      Params:         4       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0
   915 ;;      Totals:         4       0       0       0       0       0       0
   916 ;;Total ram usage:        4 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:   13
   919 ;; This function calls:
   920 ;;		_SRAMalloc
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text4
   927  0019FC                     __ptext4:
   928                           	opt stack 0
   929  0019FC                     _sem_init:
   930                           	opt stack 17
   931                           
   932                           ;semaphore.c: 10: INTCONbits.GIE = 0;
   933                           
   934                           ;incstack = 0
   935  0019FC  9EF2               	bcf	intcon,7,c	;volatile
   936                           
   937                           ;semaphore.c: 12: s->contador = value;
   938  0019FE  C05B  FFD9         	movff	sem_init@s,fsr2l
   939  001A02  C05C  FFDA         	movff	sem_init@s+1,fsr2h
   940  001A06  C05D  FFDE         	movff	sem_init@value,postinc2
   941  001A0A  C05E  FFDD         	movff	sem_init@value+1,postdec2
   942                           
   943                           ;semaphore.c: 13: s->queue.task = (u_int*)SRAMalloc(sizeof(u_int)*10);
   944  001A0E  0E14               	movlw	20
   945  001A10  ECB5  F009         	call	_SRAMalloc
   946  001A14  EE20 F002          	lfsr	2,2
   947  001A18  505B               	movf	sem_init@s,w,c
   948  001A1A  26D9               	addwf	fsr2l,f,c
   949  001A1C  505C               	movf	sem_init@s+1,w,c
   950  001A1E  22DA               	addwfc	fsr2h,f,c
   951  001A20  C050  FFDE         	movff	?_SRAMalloc,postinc2
   952  001A24  C051  FFDD         	movff	?_SRAMalloc+1,postdec2
   953                           
   954                           ;semaphore.c: 14: s->queue.first = 0;
   955  001A28  EE20 F006          	lfsr	2,6
   956  001A2C  505B               	movf	sem_init@s,w,c
   957  001A2E  26D9               	addwf	fsr2l,f,c
   958  001A30  505C               	movf	sem_init@s+1,w,c
   959  001A32  22DA               	addwfc	fsr2h,f,c
   960  001A34  0E00               	movlw	0
   961  001A36  6EDE               	movwf	postinc2,c
   962  001A38  0E00               	movlw	0
   963  001A3A  6EDD               	movwf	postdec2,c
   964                           
   965                           ;semaphore.c: 15: s->queue.size = 0;
   966  001A3C  EE20 F004          	lfsr	2,4
   967  001A40  505B               	movf	sem_init@s,w,c
   968  001A42  26D9               	addwf	fsr2l,f,c
   969  001A44  505C               	movf	sem_init@s+1,w,c
   970  001A46  22DA               	addwfc	fsr2h,f,c
   971  001A48  0E00               	movlw	0
   972  001A4A  6EDE               	movwf	postinc2,c
   973  001A4C  0E00               	movlw	0
   974  001A4E  6EDD               	movwf	postdec2,c
   975                           
   976                           ;semaphore.c: 17: INTCONbits.GIE = 1;
   977  001A50  8EF2               	bsf	intcon,7,c	;volatile
   978  001A52  0012               	return		;funcret
   979  001A54                     __end_of_sem_init:
   980                           	opt stack 0
   981                           tblptru	equ	0xFF8
   982                           tblptrh	equ	0xFF7
   983                           tblptrl	equ	0xFF6
   984                           tablat	equ	0xFF5
   985                           intcon	equ	0xFF2
   986                           postinc0	equ	0xFEE
   987                           wreg	equ	0xFE8
   988                           indf2	equ	0xFDF
   989                           postinc2	equ	0xFDE
   990                           postdec2	equ	0xFDD
   991                           fsr2h	equ	0xFDA
   992                           fsr2l	equ	0xFD9
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _pipe_create *****************
   996 ;; Defined at:
   997 ;;		line 91 in file "pipe.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  pipe            2   36[COMRAM] PTR struct pipe
  1000 ;;		 -> testL(12), 
  1001 ;;  id              2   38[COMRAM] unsigned int 
  1002 ;;  size            2   40[COMRAM] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1014 ;;      Params:         6       0       0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0
  1017 ;;      Totals:         6       0       0       0       0       0       0
  1018 ;;Total ram usage:        6 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:   13
  1021 ;; This function calls:
  1022 ;;		_SRAMalloc
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text5
  1029  0018AC                     __ptext5:
  1030                           	opt stack 0
  1031  0018AC                     _pipe_create:
  1032                           	opt stack 17
  1033                           
  1034                           ;pipe.c: 93: pipe->p_id = id;
  1035                           
  1036                           ;incstack = 0
  1037  0018AC  C05B  FFD9         	movff	pipe_create@pipe,fsr2l
  1038  0018B0  C05C  FFDA         	movff	pipe_create@pipe+1,fsr2h
  1039  0018B4  C05D  FFDE         	movff	pipe_create@id,postinc2
  1040  0018B8  C05E  FFDD         	movff	pipe_create@id+1,postdec2
  1041                           
  1042                           ;pipe.c: 94: pipe->p_pos_read = 0;
  1043  0018BC  EE20 F006          	lfsr	2,6
  1044  0018C0  505B               	movf	pipe_create@pipe,w,c
  1045  0018C2  26D9               	addwf	fsr2l,f,c
  1046  0018C4  505C               	movf	pipe_create@pipe+1,w,c
  1047  0018C6  22DA               	addwfc	fsr2h,f,c
  1048  0018C8  0E00               	movlw	0
  1049  0018CA  6EDE               	movwf	postinc2,c
  1050  0018CC  0E00               	movlw	0
  1051  0018CE  6EDD               	movwf	postdec2,c
  1052                           
  1053                           ;pipe.c: 95: pipe->p_pos_write = 0;
  1054  0018D0  EE20 F004          	lfsr	2,4
  1055  0018D4  505B               	movf	pipe_create@pipe,w,c
  1056  0018D6  26D9               	addwf	fsr2l,f,c
  1057  0018D8  505C               	movf	pipe_create@pipe+1,w,c
  1058  0018DA  22DA               	addwfc	fsr2h,f,c
  1059  0018DC  0E00               	movlw	0
  1060  0018DE  6EDE               	movwf	postinc2,c
  1061  0018E0  0E00               	movlw	0
  1062  0018E2  6EDD               	movwf	postdec2,c
  1063                           
  1064                           ;pipe.c: 96: pipe->p_size = size;
  1065  0018E4  EE20 F008          	lfsr	2,8
  1066  0018E8  505B               	movf	pipe_create@pipe,w,c
  1067  0018EA  26D9               	addwf	fsr2l,f,c
  1068  0018EC  505C               	movf	pipe_create@pipe+1,w,c
  1069  0018EE  22DA               	addwfc	fsr2h,f,c
  1070  0018F0  C05F  FFDE         	movff	pipe_create@size,postinc2
  1071  0018F4  C060  FFDD         	movff	pipe_create@size+1,postdec2
  1072                           
  1073                           ;pipe.c: 97: pipe->p_msg_queue = SRAMalloc(size);
  1074  0018F8  505F               	movf	pipe_create@size,w,c
  1075  0018FA  ECB5  F009         	call	_SRAMalloc
  1076  0018FE  EE20 F002          	lfsr	2,2
  1077  001902  505B               	movf	pipe_create@pipe,w,c
  1078  001904  26D9               	addwf	fsr2l,f,c
  1079  001906  505C               	movf	pipe_create@pipe+1,w,c
  1080  001908  22DA               	addwfc	fsr2h,f,c
  1081  00190A  C050  FFDE         	movff	?_SRAMalloc,postinc2
  1082  00190E  C051  FFDD         	movff	?_SRAMalloc+1,postdec2
  1083                           
  1084                           ;pipe.c: 98: pipe->p_count = 0;
  1085  001912  EE20 F00A          	lfsr	2,10
  1086  001916  505B               	movf	pipe_create@pipe,w,c
  1087  001918  26D9               	addwf	fsr2l,f,c
  1088  00191A  505C               	movf	pipe_create@pipe+1,w,c
  1089  00191C  22DA               	addwfc	fsr2h,f,c
  1090  00191E  0E00               	movlw	0
  1091  001920  6EDE               	movwf	postinc2,c
  1092  001922  0E00               	movlw	0
  1093  001924  6EDD               	movwf	postdec2,c
  1094  001926  0012               	return		;funcret
  1095  001928                     __end_of_pipe_create:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           indf2	equ	0xFDF
  1105                           postinc2	equ	0xFDE
  1106                           postdec2	equ	0xFDD
  1107                           fsr2h	equ	0xFDA
  1108                           fsr2l	equ	0xFD9
  1109                           status	equ	0xFD8
  1110                           
  1111 ;; *************** function _SRAMalloc *****************
  1112 ;; Defined at:
  1113 ;;		line 181 in file "memory.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  nBytes          1    wreg     near unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  nBytes          1   33[COMRAM] near unsigned char 
  1118 ;;  pHeap           2   34[COMRAM] near PTR struct _SALLOC
  1119 ;;		 -> _uDynamicHeap(512), 
  1120 ;;  temp            2   31[COMRAM] near PTR struct _SALLOC
  1121 ;;		 -> _uDynamicHeap(512), 
  1122 ;;  segHeader       1   30[COMRAM] struct _SALLOC
  1123 ;;  segLen          1   29[COMRAM] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2   25[COMRAM] PTR unsigned char 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1133 ;;      Params:         2       0       0       0       0       0       0
  1134 ;;      Locals:         7       0       0       0       0       0       0
  1135 ;;      Temps:          2       0       0       0       0       0       0
  1136 ;;      Totals:        11       0       0       0       0       0       0
  1137 ;;Total ram usage:       11 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:   12
  1140 ;; This function calls:
  1141 ;;		__SRAMmerge
  1142 ;; This function is called by:
  1143 ;;		_sem_init
  1144 ;;		_pipe_create
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text6
  1149  00136A                     __ptext6:
  1150                           	opt stack 0
  1151  00136A                     _SRAMalloc:
  1152                           	opt stack 17
  1153                           
  1154                           ;incstack = 0
  1155                           ;SRAMalloc@nBytes stored from wreg
  1156  00136A  6E58               	movwf	SRAMalloc@nBytes,c
  1157                           
  1158                           ;memory.c: 183: SALLOC * near pHeap;
  1159                           ;memory.c: 184: SALLOC * near temp;
  1160                           ;memory.c: 185: near SALLOC segHeader;
  1161                           ;memory.c: 186: near unsigned char segLen;
  1162                           ;memory.c: 189: if (nBytes > (0x7F - 1)) return (0);
  1163  00136C  0E7E               	movlw	126
  1164  00136E  6458               	cpfsgt	SRAMalloc@nBytes,c
  1165  001370  D005               	goto	l312
  1166  001372  0E00               	movlw	0
  1167  001374  6E50               	movwf	?_SRAMalloc,c
  1168  001376  0E00               	movlw	0
  1169  001378  6E51               	movwf	?_SRAMalloc+1,c
  1170  00137A  0012               	return	
  1171  00137C                     l312:
  1172                           
  1173                           ;memory.c: 192: pHeap = (SALLOC *)_uDynamicHeap;
  1174  00137C  0EAA               	movlw	low __uDynamicHeap
  1175  00137E  6E59               	movwf	SRAMalloc@pHeap,c
  1176  001380  0E01               	movlw	high __uDynamicHeap
  1177  001382  6E5A               	movwf	SRAMalloc@pHeap+1,c
  1178  001384                     
  1179                           ;memory.c: 195: {
  1180                           ;memory.c: 197: segHeader = *pHeap;
  1181  001384  C059  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1182  001388  C05A  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1183  00138C  50DF               	movf	indf2,w,c
  1184  00138E  6E55               	movwf	SRAMalloc@segHeader,c
  1185                           
  1186                           ;memory.c: 200: segLen = segHeader.bits.count - 1;
  1187  001390  5055               	movf	SRAMalloc@segHeader,w,c
  1188  001392  0B7F               	andlw	127
  1189  001394  6E52               	movwf	??_SRAMalloc& (0+255),c
  1190  001396  0452               	decf	??_SRAMalloc,w,c
  1191  001398  6E54               	movwf	SRAMalloc@segLen,c
  1192                           
  1193                           ;memory.c: 203: if (segHeader.byte == 0) return (0);
  1194  00139A  5055               	movf	SRAMalloc@segHeader,w,c
  1195  00139C  A4D8               	btfss	status,2,c
  1196  00139E  D005               	goto	l315
  1197  0013A0  0E00               	movlw	0
  1198  0013A2  6E50               	movwf	?_SRAMalloc,c
  1199  0013A4  0E00               	movlw	0
  1200  0013A6  6E51               	movwf	?_SRAMalloc+1,c
  1201  0013A8  0012               	return	
  1202  0013AA                     l315:
  1203                           
  1204                           ;memory.c: 206: if (!(segHeader.bits.alloc))
  1205  0013AA  BE55               	btfsc	SRAMalloc@segHeader,7,c
  1206  0013AC  D043               	goto	l316
  1207                           
  1208                           ;memory.c: 207: {
  1209                           ;memory.c: 209: if (nBytes > segLen)
  1210  0013AE  5058               	movf	SRAMalloc@nBytes,w,c
  1211  0013B0  5C54               	subwf	SRAMalloc@segLen,w,c
  1212  0013B2  B0D8               	btfsc	status,0,c
  1213  0013B4  D00A               	goto	l317
  1214                           
  1215                           ;memory.c: 210: {
  1216                           ;memory.c: 212: if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  1217  0013B6  C059  F048         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  1218  0013BA  C05A  F049         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  1219  0013BE  ECDE  F00A         	call	__SRAMmerge	;wreg free
  1220  0013C2  0900               	iorlw	0
  1221  0013C4  A4D8               	btfss	status,2,c
  1222  0013C6  D7DE               	goto	l314
  1223  0013C8  D035               	goto	l316
  1224  0013CA                     l317:
  1225                           
  1226                           ;memory.c: 214: else
  1227                           ;memory.c: 218: if (nBytes == segLen)
  1228  0013CA  5054               	movf	SRAMalloc@segLen,w,c
  1229  0013CC  1858               	xorwf	SRAMalloc@nBytes,w,c
  1230  0013CE  A4D8               	btfss	status,2,c
  1231  0013D0  D00C               	goto	l320
  1232                           
  1233                           ;memory.c: 219: {
  1234                           ;memory.c: 221: (*pHeap).bits.alloc = 1;
  1235  0013D2  C059  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1236  0013D6  C05A  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1237  0013DA  8EDF               	bsf	indf2,7,c
  1238                           
  1239                           ;memory.c: 224: return ((unsigned char *)(pHeap + 1));
  1240  0013DC  0E01               	movlw	1
  1241  0013DE  2459               	addwf	SRAMalloc@pHeap,w,c
  1242  0013E0  6E50               	movwf	?_SRAMalloc,c
  1243  0013E2  0E00               	movlw	0
  1244  0013E4  205A               	addwfc	SRAMalloc@pHeap+1,w,c
  1245  0013E6  6E51               	movwf	?_SRAMalloc+1,c
  1246  0013E8  0012               	return	
  1247  0013EA                     l320:
  1248                           
  1249                           ;memory.c: 228: else
  1250                           ;memory.c: 229: {
  1251                           ;memory.c: 231: (*pHeap).byte = nBytes + 0x81;
  1252  0013EA  5058               	movf	SRAMalloc@nBytes,w,c
  1253  0013EC  0F81               	addlw	129
  1254  0013EE  C059  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1255  0013F2  C05A  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1256  0013F6  6EDF               	movwf	indf2,c
  1257                           
  1258                           ;memory.c: 234: temp = pHeap + 1;
  1259  0013F8  0E01               	movlw	1
  1260  0013FA  2459               	addwf	SRAMalloc@pHeap,w,c
  1261  0013FC  6E56               	movwf	SRAMalloc@temp,c
  1262  0013FE  0E00               	movlw	0
  1263  001400  205A               	addwfc	SRAMalloc@pHeap+1,w,c
  1264  001402  6E57               	movwf	SRAMalloc@temp+1,c
  1265                           
  1266                           ;memory.c: 237: pHeap += (nBytes + 1);
  1267  001404  5058               	movf	SRAMalloc@nBytes,w,c
  1268  001406  6E52               	movwf	??_SRAMalloc& (0+255),c
  1269  001408  6A53               	clrf	(??_SRAMalloc+1)& (0+255),c
  1270  00140A  0E01               	movlw	1
  1271  00140C  2652               	addwf	??_SRAMalloc,f,c
  1272  00140E  0E00               	movlw	0
  1273  001410  2253               	addwfc	??_SRAMalloc+1,f,c
  1274  001412  5052               	movf	??_SRAMalloc,w,c
  1275  001414  2659               	addwf	SRAMalloc@pHeap,f,c
  1276  001416  5053               	movf	??_SRAMalloc+1,w,c
  1277  001418  225A               	addwfc	SRAMalloc@pHeap+1,f,c
  1278                           
  1279                           ;memory.c: 240: (*pHeap).byte = segLen - nBytes;
  1280  00141A  5058               	movf	SRAMalloc@nBytes,w,c
  1281  00141C  0800               	sublw	0
  1282  00141E  2454               	addwf	SRAMalloc@segLen,w,c
  1283  001420  C059  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  1284  001424  C05A  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  1285  001428  6EDF               	movwf	indf2,c
  1286                           
  1287                           ;memory.c: 243: return ((unsigned char *) temp);
  1288  00142A  C056  F050         	movff	SRAMalloc@temp,?_SRAMalloc
  1289  00142E  C057  F051         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  1290  001432  0012               	return	
  1291  001434                     l316:
  1292                           
  1293                           ;memory.c: 248: else
  1294                           ;memory.c: 249: {
  1295                           ;memory.c: 250: pHeap += segHeader.bits.count;
  1296  001434  5055               	movf	SRAMalloc@segHeader,w,c
  1297  001436  0B7F               	andlw	127
  1298  001438  6E52               	movwf	??_SRAMalloc& (0+255),c
  1299  00143A  5052               	movf	??_SRAMalloc,w,c
  1300  00143C  0D01               	mullw	1
  1301  00143E  50F3               	movf	prodl,w,c
  1302  001440  2659               	addwf	SRAMalloc@pHeap,f,c
  1303  001442  50F4               	movf	prodh,w,c
  1304  001444  225A               	addwfc	SRAMalloc@pHeap+1,f,c
  1305  001446  D79E               	goto	l314
  1306  001448                     __end_of_SRAMalloc:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           prodh	equ	0xFF4
  1313                           prodl	equ	0xFF3
  1314                           intcon	equ	0xFF2
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           indf2	equ	0xFDF
  1318                           postinc2	equ	0xFDE
  1319                           postdec2	equ	0xFDD
  1320                           fsr2h	equ	0xFDA
  1321                           fsr2l	equ	0xFD9
  1322                           status	equ	0xFD8
  1323                           
  1324 ;; *************** function __SRAMmerge *****************
  1325 ;; Defined at:
  1326 ;;		line 349 in file "memory.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  pSegA           2   17[COMRAM] near PTR struct _SALLOC
  1329 ;;		 -> _uDynamicHeap(512), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  pSegB           2   23[COMRAM] near PTR struct _SALLOC
  1332 ;;		 -> _uDynamicHeap(512), 
  1333 ;;  uSegB           1   22[COMRAM] struct _SALLOC
  1334 ;;  uSegA           1   21[COMRAM] struct _SALLOC
  1335 ;;  uSum            1   20[COMRAM] struct _SALLOC
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      unsigned char 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1345 ;;      Params:         2       0       0       0       0       0       0
  1346 ;;      Locals:         5       0       0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0
  1348 ;;      Totals:         8       0       0       0       0       0       0
  1349 ;;Total ram usage:        8 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:   11
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_SRAMalloc
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text7
  1360  0015BC                     __ptext7:
  1361                           	opt stack 0
  1362  0015BC                     __SRAMmerge:
  1363                           	opt stack 17
  1364                           
  1365                           ;memory.c: 351: SALLOC * near pSegB;
  1366                           ;memory.c: 352: near SALLOC uSegA, uSegB, uSum;
  1367                           ;memory.c: 356: pSegB = pSegA + (*pSegA).byte;
  1368                           
  1369                           ;incstack = 0
  1370  0015BC  C048  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1371  0015C0  C049  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1372  0015C4  50DF               	movf	indf2,w,c
  1373  0015C6  6E4A               	movwf	??__SRAMmerge& (0+255),c
  1374  0015C8  504A               	movf	??__SRAMmerge,w,c
  1375  0015CA  0D01               	mullw	1
  1376  0015CC  50F3               	movf	prodl,w,c
  1377  0015CE  2448               	addwf	__SRAMmerge@pSegA,w,c
  1378  0015D0  6E4E               	movwf	__SRAMmerge@pSegB,c
  1379  0015D2  50F4               	movf	prodh,w,c
  1380  0015D4  2049               	addwfc	__SRAMmerge@pSegA+1,w,c
  1381  0015D6  6E4F               	movwf	__SRAMmerge@pSegB+1,c
  1382                           
  1383                           ;memory.c: 359: uSegA = *pSegA;
  1384  0015D8  C048  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1385  0015DC  C049  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1386  0015E0  50DF               	movf	indf2,w,c
  1387  0015E2  6E4C               	movwf	__SRAMmerge@uSegA,c
  1388                           
  1389                           ;memory.c: 360: uSegB = *pSegB;
  1390  0015E4  C04E  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  1391  0015E8  C04F  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  1392  0015EC  50DF               	movf	indf2,w,c
  1393  0015EE  6E4D               	movwf	__SRAMmerge@uSegB,c
  1394                           
  1395                           ;memory.c: 363: if (uSegB.byte == 0) return (0);
  1396  0015F0  504D               	movf	__SRAMmerge@uSegB,w,c
  1397  0015F2  A4D8               	btfss	status,2,c
  1398  0015F4  D002               	goto	l338
  1399  0015F6  0E00               	movlw	0
  1400  0015F8  0012               	return	
  1401  0015FA                     l338:
  1402                           
  1403                           ;memory.c: 366: if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  1404  0015FA  BE4C               	btfsc	__SRAMmerge@uSegA,7,c
  1405  0015FC  D002               	goto	u550
  1406  0015FE  AE4D               	btfss	__SRAMmerge@uSegB,7,c
  1407  001600  D002               	goto	l340
  1408  001602                     u550:
  1409  001602  0E00               	movlw	0
  1410  001604  0012               	return	
  1411  001606                     l340:
  1412                           
  1413                           ;memory.c: 369: if (uSegA.bits.count == 0x7F) return (0);
  1414  001606  504C               	movf	__SRAMmerge@uSegA,w,c
  1415  001608  0B7F               	andlw	127
  1416  00160A  0A7F               	xorlw	127
  1417  00160C  A4D8               	btfss	status,2,c
  1418  00160E  D002               	goto	l343
  1419  001610  0E00               	movlw	0
  1420  001612  0012               	return	
  1421  001614                     l343:
  1422                           
  1423                           ;memory.c: 372: uSum.byte = uSegA.byte + uSegB.byte;
  1424  001614  504C               	movf	__SRAMmerge@uSegA,w,c
  1425  001616  244D               	addwf	__SRAMmerge@uSegB,w,c
  1426  001618  6E4B               	movwf	__SRAMmerge@uSum,c
  1427                           
  1428                           ;memory.c: 378: if ((uSum.byte) > 0x7F)
  1429  00161A  0E7F               	movlw	127
  1430  00161C  644B               	cpfsgt	__SRAMmerge@uSum,c
  1431  00161E  D01A               	goto	l344
  1432                           
  1433                           ;memory.c: 379: {
  1434                           ;memory.c: 380: (*pSegA).byte = 0x7F;
  1435  001620  C048  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1436  001624  C049  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1437  001628  0E7F               	movlw	127
  1438  00162A  6EDF               	movwf	indf2,c
  1439                           
  1440                           ;memory.c: 381: pSegA += 0x7F;
  1441  00162C  0E7F               	movlw	127
  1442  00162E  2648               	addwf	__SRAMmerge@pSegA,f,c
  1443  001630  0E00               	movlw	0
  1444  001632  2249               	addwfc	__SRAMmerge@pSegA+1,f,c
  1445                           
  1446                           ;memory.c: 382: pSegB += uSegB.byte;
  1447  001634  504D               	movf	__SRAMmerge@uSegB,w,c
  1448  001636  0D01               	mullw	1
  1449  001638  50F3               	movf	prodl,w,c
  1450  00163A  264E               	addwf	__SRAMmerge@pSegB,f,c
  1451  00163C  50F4               	movf	prodh,w,c
  1452  00163E  224F               	addwfc	__SRAMmerge@pSegB+1,f,c
  1453                           
  1454                           ;memory.c: 383: (*pSegA).byte = pSegB - pSegA;
  1455  001640  5048               	movf	__SRAMmerge@pSegA,w,c
  1456  001642  0800               	sublw	0
  1457  001644  244E               	addwf	__SRAMmerge@pSegB,w,c
  1458  001646  C048  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1459  00164A  C049  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1460  00164E  6EDF               	movwf	indf2,c
  1461                           
  1462                           ;memory.c: 385: return (0x7F);
  1463  001650  0E7F               	movlw	127
  1464                           
  1465                           ;memory.c: 386: }
  1466  001652  0012               	return	
  1467  001654                     l344:
  1468                           
  1469                           ;memory.c: 389: else
  1470                           ;memory.c: 390: {
  1471                           ;memory.c: 391: return ((*pSegA).byte = uSum.byte);
  1472  001654  C048  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  1473  001658  C049  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  1474  00165C  C04B  FFDF         	movff	__SRAMmerge@uSum,indf2
  1475  001660  50DF               	movf	indf2,w,c
  1476  001662  0012               	return	
  1477  001664                     __end_of__SRAMmerge:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           prodh	equ	0xFF4
  1484                           prodl	equ	0xFF3
  1485                           intcon	equ	0xFF2
  1486                           postinc0	equ	0xFEE
  1487                           wreg	equ	0xFE8
  1488                           indf2	equ	0xFDF
  1489                           postinc2	equ	0xFDE
  1490                           postdec2	equ	0xFDD
  1491                           fsr2h	equ	0xFDA
  1492                           fsr2l	equ	0xFD9
  1493                           status	equ	0xFD8
  1494                           
  1495 ;; *************** function _create_task *****************
  1496 ;; Defined at:
  1497 ;;		line 21 in file "kernel.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  id              2   17[COMRAM] unsigned int 
  1500 ;;  prior           2   19[COMRAM] unsigned int 
  1501 ;;  task_f          2   21[COMRAM] PTR FTN()void 
  1502 ;;		 -> acender(1), dianoite(1), led_3(1), led_2(1), 
  1503 ;;		 -> led_1(1), aviaoidle(1), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  task           17   23[COMRAM] struct tcb
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1515 ;;      Params:         6       0       0       0       0       0       0
  1516 ;;      Locals:        17       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0
  1518 ;;      Totals:        23       0       0       0       0       0       0
  1519 ;;Total ram usage:       23 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:   12
  1522 ;; This function calls:
  1523 ;;		___wmul
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text8
  1530  001A54                     __ptext8:
  1531                           	opt stack 0
  1532  001A54                     _create_task:
  1533                           	opt stack 18
  1534                           
  1535                           ;kernel.c: 24: tcb_t task;
  1536                           ;kernel.c: 26: task.task_id = id;
  1537                           
  1538                           ;incstack = 0
  1539  001A54  C048  F04E         	movff	create_task@id,create_task@task
  1540  001A58  C049  F04F         	movff	create_task@id+1,create_task@task+1
  1541                           
  1542                           ;kernel.c: 27: task.task_prior = prior;
  1543  001A5C  C04A  F050         	movff	create_task@prior,create_task@task+2
  1544  001A60  C04B  F051         	movff	create_task@prior+1,create_task@task+3
  1545                           
  1546                           ;kernel.c: 28: task.task_f = task_f;
  1547  001A64  C04C  F052         	movff	create_task@task_f,create_task@task+4
  1548  001A68  C04D  F053         	movff	create_task@task_f+1,create_task@task+5
  1549                           
  1550                           ;kernel.c: 29: task.task_stack.stack_size = 0;
  1551  001A6C  0E00               	movlw	0
  1552  001A6E  6E5B               	movwf	create_task@task+13,c
  1553  001A70  0E00               	movlw	0
  1554  001A72  6E5A               	movwf	create_task@task+12,c
  1555                           
  1556                           ;kernel.c: 30: task.task_state = READY;
  1557  001A74  0E01               	movlw	1
  1558  001A76  6E56               	movwf	create_task@task+8,c
  1559                           
  1560                           ;kernel.c: 32: F_APTOS[tasks_installed] = task;
  1561  001A78  0E11               	movlw	17
  1562  001A7A  6EE6               	movwf	postinc1,c
  1563  001A7C  0E00               	movlw	0
  1564  001A7E  6EE6               	movwf	postinc1,c
  1565  001A80  C019  FFE6         	movff	_tasks_installed,postinc1
  1566  001A84  C01A  FFE6         	movff	_tasks_installed+1,postinc1
  1567  001A88  EC7F  F00B         	call	___wmul	;wreg free
  1568  001A8C  0E00               	movlw	low _F_APTOS
  1569  001A8E  2461               	addwf	btemp,w,c
  1570  001A90  6EE9               	movwf	fsr0l,c
  1571  001A92  0E01               	movlw	high _F_APTOS
  1572  001A94  2062               	addwfc	btemp+1,w,c
  1573  001A96  6EEA               	movwf	fsr0h,c
  1574  001A98  EE20  F04E         	lfsr	2,create_task@task
  1575  001A9C  0E10               	movlw	16
  1576  001A9E                     u751:
  1577  001A9E  CFDB FFEB          	movff	plusw2,plusw0
  1578  001AA2  06E8               	decf	wreg,f,c
  1579  001AA4  E2FC               	bc	u751
  1580                           
  1581                           ;kernel.c: 33: tasks_installed++;
  1582  001AA6  4A19               	infsnz	_tasks_installed,f,c
  1583  001AA8  2A1A               	incf	_tasks_installed+1,f,c
  1584  001AAA  0012               	return		;funcret
  1585  001AAC                     __end_of_create_task:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           prodh	equ	0xFF4
  1592                           prodl	equ	0xFF3
  1593                           intcon	equ	0xFF2
  1594                           postinc0	equ	0xFEE
  1595                           plusw0	equ	0xFEB
  1596                           fsr0h	equ	0xFEA
  1597                           fsr0l	equ	0xFE9
  1598                           wreg	equ	0xFE8
  1599                           postinc1	equ	0xFE6
  1600                           indf2	equ	0xFDF
  1601                           postinc2	equ	0xFDE
  1602                           postdec2	equ	0xFDD
  1603                           plusw2	equ	0xFDB
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function ___wmul *****************
  1609 ;; Defined at:
  1610 ;;		line 15 in file "/opt/microchip/xc8/v1.45/sources/common/Umul16.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  multiplier      2  [STACK] unsigned int 
  1613 ;;  multiplicand    2  [STACK] unsigned int 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  product         2  [STACK] unsigned int 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  2  [STACK] unsigned int 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1625 ;;      Params:         0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:   11
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_create_task
  1636 ;;		_dispatcher
  1637 ;;		_delay
  1638 ;;		_int_high
  1639 ;;		_contagemR
  1640 ;;		_rr_scheduler
  1641 ;;		_sem_post
  1642 ;;		_libera_processos
  1643 ;;		_get_id
  1644 ;;		_prior_scheduler
  1645 ;; This function uses a reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text9
  1649  0016FE                     __ptext9:
  1650                           	opt stack 0
  1651  0016FE                     ___wmul:
  1652                           	opt stack 0
  1653                           
  1654                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  1655  0016FE  52E6               	movf	postinc1,f,c
  1656  001700  52E6               	movf	postinc1,f,c
  1657                           
  1658                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1659                           
  1660                           ;incstack = 0
  1661  001702  0EFA               	movlw	-6
  1662  001704  CFE3 F06C          	movff	plusw1,btemp+11
  1663                           
  1664                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1665  001708  0EFC               	movlw	-4
  1666  00170A  50E3               	movf	plusw1,w,c
  1667  00170C  026C               	mulwf	btemp+11,c
  1668                           
  1669                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1670  00170E  0EFE               	movlw	-2
  1671  001710  CFF3 FFE3          	movff	prodl,plusw1
  1672  001714  0EFF               	movlw	-1
  1673  001716  CFF4 FFE3          	movff	prodh,plusw1
  1674                           
  1675                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1676  00171A  0EFB               	movlw	251
  1677  00171C  24E1               	addwf	fsr1l,w,c
  1678  00171E  6ED9               	movwf	fsr2l,c
  1679  001720  0EFF               	movlw	255
  1680  001722  20E2               	addwfc	fsr1h,w,c
  1681  001724  6EDA               	movwf	fsr2h,c
  1682  001726  50DF               	movf	indf2,w,c
  1683  001728  6E6C               	movwf	btemp+11,c
  1684                           
  1685                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1686  00172A  0EFC               	movlw	-4
  1687  00172C  50E3               	movf	plusw1,w,c
  1688  00172E  026C               	mulwf	btemp+11,c
  1689  001730  CFF3 FFF4          	movff	prodl,prodh
  1690  001734  6AF3               	clrf	prodl,c
  1691                           
  1692                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1693  001736  50E1               	movf	fsr1l,w,c
  1694  001738  0FFE               	addlw	-2
  1695  00173A  6ED9               	movwf	fsr2l,c
  1696  00173C  50E2               	movf	fsr1h,w,c
  1697  00173E  6EDA               	movwf	fsr2h,c
  1698  001740  0EFF               	movlw	255
  1699  001742  22DA               	addwfc	fsr2h,f,c
  1700  001744  50F3               	movf	prodl,w,c
  1701  001746  26DE               	addwf	postinc2,f,c
  1702  001748  50F4               	movf	prodh,w,c
  1703  00174A  22DD               	addwfc	postdec2,f,c
  1704                           
  1705                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  1706  00174C  0EFA               	movlw	-6
  1707  00174E  CFE3 F06C          	movff	plusw1,btemp+11
  1708                           
  1709                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  1710  001752  0EFD               	movlw	253
  1711  001754  24E1               	addwf	fsr1l,w,c
  1712  001756  6ED9               	movwf	fsr2l,c
  1713  001758  0EFF               	movlw	255
  1714  00175A  20E2               	addwfc	fsr1h,w,c
  1715  00175C  6EDA               	movwf	fsr2h,c
  1716  00175E  50DF               	movf	indf2,w,c
  1717  001760  026C               	mulwf	btemp+11,c
  1718  001762  CFF3 FFF4          	movff	prodl,prodh
  1719  001766  6AF3               	clrf	prodl,c
  1720                           
  1721                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1722  001768  50E1               	movf	fsr1l,w,c
  1723  00176A  0FFE               	addlw	-2
  1724  00176C  6ED9               	movwf	fsr2l,c
  1725  00176E  50E2               	movf	fsr1h,w,c
  1726  001770  6EDA               	movwf	fsr2h,c
  1727  001772  0EFF               	movlw	255
  1728  001774  22DA               	addwfc	fsr2h,f,c
  1729  001776  50F3               	movf	prodl,w,c
  1730  001778  26DE               	addwf	postinc2,f,c
  1731  00177A  50F4               	movf	prodh,w,c
  1732  00177C  22DD               	addwfc	postdec2,f,c
  1733                           
  1734                           ;stkvar	___wmul@product @ sp[(-2)+0]
  1735  00177E  0EFE               	movlw	-2
  1736  001780  CFE3 F061          	movff	plusw1,btemp
  1737  001784  0EFF               	movlw	-1
  1738  001786  CFE3 F062          	movff	plusw1,btemp+1
  1739                           
  1740                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  1741  00178A  0EFA               	movlw	250
  1742  00178C  26E1               	addwf	fsr1l,f,c
  1743  00178E  0EFF               	movlw	255
  1744  001790  22E2               	addwfc	fsr1h,f,c
  1745  001792  0012               	return		;funcret
  1746  001794                     __end_of___wmul:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           intcon	equ	0xFF2
  1755                           postinc0	equ	0xFEE
  1756                           plusw0	equ	0xFEB
  1757                           fsr0h	equ	0xFEA
  1758                           fsr0l	equ	0xFE9
  1759                           wreg	equ	0xFE8
  1760                           postinc1	equ	0xFE6
  1761                           plusw1	equ	0xFE3
  1762                           fsr1h	equ	0xFE2
  1763                           fsr1l	equ	0xFE1
  1764                           indf2	equ	0xFDF
  1765                           postinc2	equ	0xFDE
  1766                           postdec2	equ	0xFDD
  1767                           plusw2	equ	0xFDB
  1768                           fsr2h	equ	0xFDA
  1769                           fsr2l	equ	0xFD9
  1770                           status	equ	0xFD8
  1771                           
  1772 ;; *************** function _confi_port *****************
  1773 ;; Defined at:
  1774 ;;		line 24 in file "tasks.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1788 ;;      Params:         0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:   11
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text10
  1803  001BEE                     __ptext10:
  1804                           	opt stack 0
  1805  001BEE                     _confi_port:
  1806                           	opt stack 19
  1807                           
  1808                           ;tasks.c: 26: TRISD = 0x00;
  1809                           
  1810                           ;incstack = 0
  1811  001BEE  0E00               	movlw	0
  1812  001BF0  6E95               	movwf	3989,c	;volatile
  1813  001BF2  0012               	return		;funcret
  1814  001BF4                     __end_of_confi_port:
  1815                           	opt stack 0
  1816                           tblptru	equ	0xFF8
  1817                           tblptrh	equ	0xFF7
  1818                           tblptrl	equ	0xFF6
  1819                           tablat	equ	0xFF5
  1820                           prodh	equ	0xFF4
  1821                           prodl	equ	0xFF3
  1822                           intcon	equ	0xFF2
  1823                           postinc0	equ	0xFEE
  1824                           plusw0	equ	0xFEB
  1825                           fsr0h	equ	0xFEA
  1826                           fsr0l	equ	0xFE9
  1827                           wreg	equ	0xFE8
  1828                           postinc1	equ	0xFE6
  1829                           plusw1	equ	0xFE3
  1830                           fsr1h	equ	0xFE2
  1831                           fsr1l	equ	0xFE1
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           postdec2	equ	0xFDD
  1835                           plusw2	equ	0xFDB
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _aviaoidle *****************
  1841 ;; Defined at:
  1842 ;;		line 31 in file "tasks.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1  [STACK] void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:   10
  1863 ;; This function calls:
  1864 ;;		_delay
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text11
  1871  001BDA                     __ptext11:
  1872                           	opt stack 0
  1873  001BDA                     _aviaoidle:
  1874                           	opt stack 17
  1875                           
  1876                           ;tasks.c: 34: {
  1877                           ;tasks.c: 35: TRISBbits.RB5 = 0;
  1878                           
  1879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  1880                           ;incstack = 0
  1881                           ;tasks.c: 33: while(1)
  1882  001BDA  9A93               	bcf	3987,5,c	;volatile
  1883  001BDC                     
  1884                           ;tasks.c: 36: PORTBbits.RB5 = 0;
  1885  001BDC  9A81               	bcf	3969,5,c	;volatile
  1886                           
  1887                           ;tasks.c: 39: {
  1888                           ;tasks.c: 40: PORTBbits.RB5=1;
  1889                           
  1890                           ;tasks.c: 38: while(1)
  1891  001BDE  8A81               	bsf	3969,5,c	;volatile
  1892                           
  1893                           ;tasks.c: 41: delay(1000);
  1894  001BE0  0EE8               	movlw	232
  1895  001BE2  6EE6               	movwf	postinc1,c
  1896  001BE4  0E03               	movlw	3
  1897  001BE6  6EE6               	movwf	postinc1,c
  1898  001BE8  ECAB  F00D         	call	_delay	;wreg free
  1899  001BEC  D7F7               	goto	L1
  1900  001BEE                     __end_of_aviaoidle:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           prodh	equ	0xFF4
  1907                           prodl	equ	0xFF3
  1908                           intcon	equ	0xFF2
  1909                           postinc0	equ	0xFEE
  1910                           plusw0	equ	0xFEB
  1911                           fsr0h	equ	0xFEA
  1912                           fsr0l	equ	0xFE9
  1913                           wreg	equ	0xFE8
  1914                           postinc1	equ	0xFE6
  1915                           plusw1	equ	0xFE3
  1916                           fsr1h	equ	0xFE2
  1917                           fsr1l	equ	0xFE1
  1918                           indf2	equ	0xFDF
  1919                           postinc2	equ	0xFDE
  1920                           postdec2	equ	0xFDD
  1921                           plusw2	equ	0xFDB
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _delay *****************
  1927 ;; Defined at:
  1928 ;;		line 63 in file "kernel.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  time_ms         2  [STACK] unsigned int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1  [STACK] void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       0       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    9
  1949 ;; This function calls:
  1950 ;;		___wmul
  1951 ;;		_dispatcher
  1952 ;; This function is called by:
  1953 ;;		_aviaoidle
  1954 ;;		_led_1
  1955 ;;		_led_2
  1956 ;;		_led_3
  1957 ;;		_dianoite
  1958 ;;		_acender
  1959 ;;		_Lcd_Write_Char
  1960 ;; This function uses a reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text12
  1964  001B56                     __ptext12:
  1965                           	opt stack 0
  1966  001B56                     _delay:
  1967                           	opt stack 17
  1968                           
  1969                           ;kernel.c: 65: INTCONbits.GIE = 0;
  1970                           
  1971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  1972                           ;incstack = 0
  1973  001B56  9EF2               	bcf	intcon,7,c	;volatile
  1974                           
  1975                           ;kernel.c: 67: F_APTOS[task_running].delay_time = time_ms;
  1976  001B58  0E11               	movlw	17
  1977  001B5A  6EE6               	movwf	postinc1,c
  1978  001B5C  0E00               	movlw	0
  1979  001B5E  6EE6               	movwf	postinc1,c
  1980  001B60  C017  FFE6         	movff	_task_running,postinc1
  1981  001B64  C018  FFE6         	movff	_task_running+1,postinc1
  1982  001B68  EC7F  F00B         	call	___wmul	;wreg free
  1983  001B6C  0E06               	movlw	low (_F_APTOS+6)
  1984  001B6E  2461               	addwf	btemp,w,c
  1985  001B70  6EE9               	movwf	fsr0l,c
  1986  001B72  0E01               	movlw	high (_F_APTOS+6)
  1987  001B74  2062               	addwfc	btemp+1,w,c
  1988  001B76  6EEA               	movwf	fsr0h,c
  1989                           
  1990                           ;stkvar	delay@time_ms @ sp[(0)+-2]
  1991  001B78  50E1               	movf	fsr1l,w,c
  1992  001B7A  0FFE               	addlw	-2
  1993  001B7C  6ED9               	movwf	fsr2l,c
  1994  001B7E  50E2               	movf	fsr1h,w,c
  1995  001B80  6EDA               	movwf	fsr2h,c
  1996  001B82  0EFF               	movlw	255
  1997  001B84  22DA               	addwfc	fsr2h,f,c
  1998  001B86  CFDE FFEE          	movff	postinc2,postinc0
  1999  001B8A  CFDD FFED          	movff	postdec2,postdec0
  2000                           
  2001                           ;kernel.c: 68: dispatcher(SLEEPING);
  2002  001B8E  0E03               	movlw	3
  2003  001B90  6EE6               	movwf	postinc1,c
  2004  001B92  EC02  F003         	call	_dispatcher	;wreg free
  2005                           
  2006                           ;kernel.c: 70: INTCONbits.GIE = 1;
  2007  001B96  8EF2               	bsf	intcon,7,c	;volatile
  2008                           
  2009                           ; _delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2010  001B98  52E5               	movf	postdec1,f,c
  2011  001B9A  52E5               	movf	postdec1,f,c
  2012  001B9C  0012               	return		;funcret
  2013  001B9E                     __end_of_delay:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           intcon	equ	0xFF2
  2022                           postinc0	equ	0xFEE
  2023                           postdec0	equ	0xFED
  2024                           plusw0	equ	0xFEB
  2025                           fsr0h	equ	0xFEA
  2026                           fsr0l	equ	0xFE9
  2027                           wreg	equ	0xFE8
  2028                           postinc1	equ	0xFE6
  2029                           postdec1	equ	0xFE5
  2030                           plusw1	equ	0xFE3
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           indf2	equ	0xFDF
  2034                           postinc2	equ	0xFDE
  2035                           postdec2	equ	0xFDD
  2036                           plusw2	equ	0xFDB
  2037                           fsr2h	equ	0xFDA
  2038                           fsr2l	equ	0xFD9
  2039                           status	equ	0xFD8
  2040                           
  2041 ;; *************** function _dispatcher *****************
  2042 ;; Defined at:
  2043 ;;		line 37 in file "kernel.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  state           1  [STACK] enum E3008
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1  [STACK] void 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2057 ;;      Params:         0       0       0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used:    1
  2063 ;; Hardware stack levels required when called:    8
  2064 ;; This function calls:
  2065 ;;		___wmul
  2066 ;;		_rr_scheduler
  2067 ;; This function is called by:
  2068 ;;		_delay
  2069 ;;		_int_high
  2070 ;;		_sem_wait
  2071 ;;		_sem_post
  2072 ;;		_pipe_read
  2073 ;;		_pipe_write
  2074 ;; This function uses a reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text13
  2078  000604                     __ptext13:
  2079                           	opt stack 0
  2080  000604                     _dispatcher:
  2081                           	opt stack 12
  2082                           
  2083                           ;kernel.c: 39: INTCONbits.GIE = 0;
  2084                           
  2085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  2086                           ;incstack = 0
  2087  000604  9EF2               	bcf	intcon,7,c	;volatile
  2088                           
  2089                           ;kernel.c: 42: F_APTOS[task_running].task_state = state; F_APTOS[task_running].BSR_regis
      +                          ter = BSR; F_APTOS[task_running].STATUS_register = STATUS; F_APTOS[task_running].WORK_re
      +                          gister = WREG; F_APTOS[task_running].task_stack.stack_size = 0; do { \F_APTOS[task_runni
      +                          n
  2090                           ;stkvar	dispatcher@state @ sp[(0)+-1]
  2091  000606  0E11               	movlw	17
  2092  000608  6EE6               	movwf	postinc1,c
  2093  00060A  0E00               	movlw	0
  2094  00060C  6EE6               	movwf	postinc1,c
  2095  00060E  C017  FFE6         	movff	_task_running,postinc1
  2096  000612  C018  FFE6         	movff	_task_running+1,postinc1
  2097  000616  EC7F  F00B         	call	___wmul	;wreg free
  2098  00061A  0E08               	movlw	low (_F_APTOS+8)
  2099  00061C  2461               	addwf	btemp,w,c
  2100  00061E  6ED9               	movwf	fsr2l,c
  2101  000620  0E01               	movlw	high (_F_APTOS+8)
  2102  000622  2062               	addwfc	btemp+1,w,c
  2103  000624  6EDA               	movwf	fsr2h,c
  2104  000626  0EFF               	movlw	-1
  2105  000628  CFE3 FFDF          	movff	plusw1,indf2
  2106  00062C  0E11               	movlw	17
  2107  00062E  6EE6               	movwf	postinc1,c
  2108  000630  0E00               	movlw	0
  2109  000632  6EE6               	movwf	postinc1,c
  2110  000634  C017  FFE6         	movff	_task_running,postinc1
  2111  000638  C018  FFE6         	movff	_task_running+1,postinc1
  2112  00063C  EC7F  F00B         	call	___wmul	;wreg free
  2113  000640  0E0E               	movlw	low (_F_APTOS+14)
  2114  000642  2461               	addwf	btemp,w,c
  2115  000644  6ED9               	movwf	fsr2l,c
  2116  000646  0E01               	movlw	high (_F_APTOS+14)
  2117  000648  2062               	addwfc	btemp+1,w,c
  2118  00064A  6EDA               	movwf	fsr2h,c
  2119  00064C  CFE0 FFDF          	movff	bsr,indf2	;volatile
  2120  000650  0E11               	movlw	17
  2121  000652  6EE6               	movwf	postinc1,c
  2122  000654  0E00               	movlw	0
  2123  000656  6EE6               	movwf	postinc1,c
  2124  000658  C017  FFE6         	movff	_task_running,postinc1
  2125  00065C  C018  FFE6         	movff	_task_running+1,postinc1
  2126  000660  EC7F  F00B         	call	___wmul	;wreg free
  2127  000664  0E0F               	movlw	low (_F_APTOS+15)
  2128  000666  2461               	addwf	btemp,w,c
  2129  000668  6ED9               	movwf	fsr2l,c
  2130  00066A  0E01               	movlw	high (_F_APTOS+15)
  2131  00066C  2062               	addwfc	btemp+1,w,c
  2132  00066E  6EDA               	movwf	fsr2h,c
  2133  000670  CFD8 FFDF          	movff	status,indf2	;volatile
  2134  000674  0E11               	movlw	17
  2135  000676  6EE6               	movwf	postinc1,c
  2136  000678  0E00               	movlw	0
  2137  00067A  6EE6               	movwf	postinc1,c
  2138  00067C  C017  FFE6         	movff	_task_running,postinc1
  2139  000680  C018  FFE6         	movff	_task_running+1,postinc1
  2140  000684  EC7F  F00B         	call	___wmul	;wreg free
  2141  000688  0E10               	movlw	low (_F_APTOS+16)
  2142  00068A  2461               	addwf	btemp,w,c
  2143  00068C  6ED9               	movwf	fsr2l,c
  2144  00068E  0E01               	movlw	high (_F_APTOS+16)
  2145  000690  2062               	addwfc	btemp+1,w,c
  2146  000692  6EDA               	movwf	fsr2h,c
  2147  000694  CFE8 FFDF          	movff	wreg,indf2	;volatile
  2148  000698  0E11               	movlw	17
  2149  00069A  6EE6               	movwf	postinc1,c
  2150  00069C  0E00               	movlw	0
  2151  00069E  6EE6               	movwf	postinc1,c
  2152  0006A0  C017  FFE6         	movff	_task_running,postinc1
  2153  0006A4  C018  FFE6         	movff	_task_running+1,postinc1
  2154  0006A8  EC7F  F00B         	call	___wmul	;wreg free
  2155  0006AC  0E0C               	movlw	low (_F_APTOS+12)
  2156  0006AE  2461               	addwf	btemp,w,c
  2157  0006B0  6ED9               	movwf	fsr2l,c
  2158  0006B2  0E01               	movlw	high (_F_APTOS+12)
  2159  0006B4  2062               	addwfc	btemp+1,w,c
  2160  0006B6  6EDA               	movwf	fsr2h,c
  2161  0006B8  0E00               	movlw	0
  2162  0006BA  6EDE               	movwf	postinc2,c
  2163  0006BC  0E00               	movlw	0
  2164  0006BE  6EDD               	movwf	postdec2,c
  2165  0006C0                     l1906:
  2166  0006C0  0E03               	movlw	3
  2167  0006C2  6EE6               	movwf	postinc1,c
  2168  0006C4  0E00               	movlw	0
  2169  0006C6  6EE6               	movwf	postinc1,c
  2170  0006C8  0E11               	movlw	17
  2171  0006CA  6EE6               	movwf	postinc1,c
  2172  0006CC  0E00               	movlw	0
  2173  0006CE  6EE6               	movwf	postinc1,c
  2174  0006D0  C017  FFE6         	movff	_task_running,postinc1
  2175  0006D4  C018  FFE6         	movff	_task_running+1,postinc1
  2176  0006D8  EC7F  F00B         	call	___wmul	;wreg free
  2177  0006DC  0E0C               	movlw	low (_F_APTOS+12)
  2178  0006DE  2461               	addwf	btemp,w,c
  2179  0006E0  6ED9               	movwf	fsr2l,c
  2180  0006E2  0E01               	movlw	high (_F_APTOS+12)
  2181  0006E4  2062               	addwfc	btemp+1,w,c
  2182  0006E6  6EDA               	movwf	fsr2h,c
  2183  0006E8  CFDE F062          	movff	postinc2,btemp+1
  2184  0006EC  CFDD F063          	movff	postdec2,btemp+2
  2185  0006F0  C062  FFE6         	movff	btemp+1,postinc1
  2186  0006F4  C063  FFE6         	movff	btemp+2,postinc1
  2187  0006F8  EC7F  F00B         	call	___wmul	;wreg free
  2188  0006FC  C061  F069         	movff	btemp,btemp+8
  2189  000700  C062  F06A         	movff	btemp+1,btemp+9
  2190  000704  0E11               	movlw	17
  2191  000706  6EE6               	movwf	postinc1,c
  2192  000708  0E00               	movlw	0
  2193  00070A  6EE6               	movwf	postinc1,c
  2194  00070C  C017  FFE6         	movff	_task_running,postinc1
  2195  000710  C018  FFE6         	movff	_task_running+1,postinc1
  2196  000714  EC7F  F00B         	call	___wmul	;wreg free
  2197  000718  0E00               	movlw	low _F_APTOS
  2198  00071A  6E6B               	movwf	btemp+10,c
  2199  00071C  0E01               	movlw	high _F_APTOS
  2200  00071E  6E6C               	movwf	btemp+11,c
  2201  000720  0E09               	movlw	9
  2202  000722  266B               	addwf	btemp+10,f,c
  2203  000724  0E00               	movlw	0
  2204  000726  226C               	addwfc	btemp+11,f,c
  2205  000728  5061               	movf	btemp,w,c
  2206  00072A  266B               	addwf	btemp+10,f,c
  2207  00072C  5062               	movf	btemp+1,w,c
  2208  00072E  226C               	addwfc	btemp+11,f,c
  2209  000730  5069               	movf	btemp+8,w,c
  2210  000732  246B               	addwf	btemp+10,w,c
  2211  000734  6ED9               	movwf	fsr2l,c
  2212  000736  506A               	movf	btemp+9,w,c
  2213  000738  206C               	addwfc	btemp+11,w,c
  2214  00073A  6EDA               	movwf	fsr2h,c
  2215  00073C  CFFF FFDF          	movff	tosu,indf2	;volatile
  2216  000740  0E03               	movlw	3
  2217  000742  6EE6               	movwf	postinc1,c
  2218  000744  0E00               	movlw	0
  2219  000746  6EE6               	movwf	postinc1,c
  2220  000748  0E11               	movlw	17
  2221  00074A  6EE6               	movwf	postinc1,c
  2222  00074C  0E00               	movlw	0
  2223  00074E  6EE6               	movwf	postinc1,c
  2224  000750  C017  FFE6         	movff	_task_running,postinc1
  2225  000754  C018  FFE6         	movff	_task_running+1,postinc1
  2226  000758  EC7F  F00B         	call	___wmul	;wreg free
  2227  00075C  0E0C               	movlw	low (_F_APTOS+12)
  2228  00075E  2461               	addwf	btemp,w,c
  2229  000760  6ED9               	movwf	fsr2l,c
  2230  000762  0E01               	movlw	high (_F_APTOS+12)
  2231  000764  2062               	addwfc	btemp+1,w,c
  2232  000766  6EDA               	movwf	fsr2h,c
  2233  000768  CFDE F062          	movff	postinc2,btemp+1
  2234  00076C  CFDD F063          	movff	postdec2,btemp+2
  2235  000770  C062  FFE6         	movff	btemp+1,postinc1
  2236  000774  C063  FFE6         	movff	btemp+2,postinc1
  2237  000778  EC7F  F00B         	call	___wmul	;wreg free
  2238  00077C  C061  F069         	movff	btemp,btemp+8
  2239  000780  C062  F06A         	movff	btemp+1,btemp+9
  2240  000784  0E11               	movlw	17
  2241  000786  6EE6               	movwf	postinc1,c
  2242  000788  0E00               	movlw	0
  2243  00078A  6EE6               	movwf	postinc1,c
  2244  00078C  C017  FFE6         	movff	_task_running,postinc1
  2245  000790  C018  FFE6         	movff	_task_running+1,postinc1
  2246  000794  EC7F  F00B         	call	___wmul	;wreg free
  2247  000798  0E00               	movlw	low _F_APTOS
  2248  00079A  6E6B               	movwf	btemp+10,c
  2249  00079C  0E01               	movlw	high _F_APTOS
  2250  00079E  6E6C               	movwf	btemp+11,c
  2251  0007A0  0E0A               	movlw	10
  2252  0007A2  266B               	addwf	btemp+10,f,c
  2253  0007A4  0E00               	movlw	0
  2254  0007A6  226C               	addwfc	btemp+11,f,c
  2255  0007A8  5061               	movf	btemp,w,c
  2256  0007AA  266B               	addwf	btemp+10,f,c
  2257  0007AC  5062               	movf	btemp+1,w,c
  2258  0007AE  226C               	addwfc	btemp+11,f,c
  2259  0007B0  5069               	movf	btemp+8,w,c
  2260  0007B2  246B               	addwf	btemp+10,w,c
  2261  0007B4  6ED9               	movwf	fsr2l,c
  2262  0007B6  506A               	movf	btemp+9,w,c
  2263  0007B8  206C               	addwfc	btemp+11,w,c
  2264  0007BA  6EDA               	movwf	fsr2h,c
  2265  0007BC  CFFD FFDF          	movff	tosl,indf2	;volatile
  2266  0007C0  0E03               	movlw	3
  2267  0007C2  6EE6               	movwf	postinc1,c
  2268  0007C4  0E00               	movlw	0
  2269  0007C6  6EE6               	movwf	postinc1,c
  2270  0007C8  0E11               	movlw	17
  2271  0007CA  6EE6               	movwf	postinc1,c
  2272  0007CC  0E00               	movlw	0
  2273  0007CE  6EE6               	movwf	postinc1,c
  2274  0007D0  C017  FFE6         	movff	_task_running,postinc1
  2275  0007D4  C018  FFE6         	movff	_task_running+1,postinc1
  2276  0007D8  EC7F  F00B         	call	___wmul	;wreg free
  2277  0007DC  0E0C               	movlw	low (_F_APTOS+12)
  2278  0007DE  2461               	addwf	btemp,w,c
  2279  0007E0  6ED9               	movwf	fsr2l,c
  2280  0007E2  0E01               	movlw	high (_F_APTOS+12)
  2281  0007E4  2062               	addwfc	btemp+1,w,c
  2282  0007E6  6EDA               	movwf	fsr2h,c
  2283  0007E8  CFDE F062          	movff	postinc2,btemp+1
  2284  0007EC  CFDD F063          	movff	postdec2,btemp+2
  2285  0007F0  C062  FFE6         	movff	btemp+1,postinc1
  2286  0007F4  C063  FFE6         	movff	btemp+2,postinc1
  2287  0007F8  EC7F  F00B         	call	___wmul	;wreg free
  2288  0007FC  C061  F069         	movff	btemp,btemp+8
  2289  000800  C062  F06A         	movff	btemp+1,btemp+9
  2290  000804  0E11               	movlw	17
  2291  000806  6EE6               	movwf	postinc1,c
  2292  000808  0E00               	movlw	0
  2293  00080A  6EE6               	movwf	postinc1,c
  2294  00080C  C017  FFE6         	movff	_task_running,postinc1
  2295  000810  C018  FFE6         	movff	_task_running+1,postinc1
  2296  000814  EC7F  F00B         	call	___wmul	;wreg free
  2297  000818  0E00               	movlw	low _F_APTOS
  2298  00081A  6E6B               	movwf	btemp+10,c
  2299  00081C  0E01               	movlw	high _F_APTOS
  2300  00081E  6E6C               	movwf	btemp+11,c
  2301  000820  0E0B               	movlw	11
  2302  000822  266B               	addwf	btemp+10,f,c
  2303  000824  0E00               	movlw	0
  2304  000826  226C               	addwfc	btemp+11,f,c
  2305  000828  5061               	movf	btemp,w,c
  2306  00082A  266B               	addwf	btemp+10,f,c
  2307  00082C  5062               	movf	btemp+1,w,c
  2308  00082E  226C               	addwfc	btemp+11,f,c
  2309  000830  5069               	movf	btemp+8,w,c
  2310  000832  246B               	addwf	btemp+10,w,c
  2311  000834  6ED9               	movwf	fsr2l,c
  2312  000836  506A               	movf	btemp+9,w,c
  2313  000838  206C               	addwfc	btemp+11,w,c
  2314  00083A  6EDA               	movwf	fsr2h,c
  2315  00083C  CFFE FFDF          	movff	tosh,indf2	;volatile
  2316  000840  0E11               	movlw	17
  2317  000842  6EE6               	movwf	postinc1,c
  2318  000844  0E00               	movlw	0
  2319  000846  6EE6               	movwf	postinc1,c
  2320  000848  C017  FFE6         	movff	_task_running,postinc1
  2321  00084C  C018  FFE6         	movff	_task_running+1,postinc1
  2322  000850  EC7F  F00B         	call	___wmul	;wreg free
  2323  000854  0E0C               	movlw	low (_F_APTOS+12)
  2324  000856  2461               	addwf	btemp,w,c
  2325  000858  6ED9               	movwf	fsr2l,c
  2326  00085A  0E01               	movlw	high (_F_APTOS+12)
  2327  00085C  2062               	addwfc	btemp+1,w,c
  2328  00085E  6EDA               	movwf	fsr2h,c
  2329  000860  2ADE               	incf	postinc2,f,c
  2330  000862  0E00               	movlw	0
  2331  000864  22DD               	addwfc	postdec2,f,c
  2332  000866  0006               	pop		;# 
  2333  000868  50FC               	movf	stkptr,w,c	;volatile
  2334  00086A  A4D8               	btfss	status,2,c
  2335  00086C  D729               	goto	l1906
  2336                           
  2337                           ;kernel.c: 46: task_running = rr_scheduler();
  2338  00086E  EC44  F009         	call	_rr_scheduler	;wreg free
  2339  000872  C061  F017         	movff	btemp,_task_running
  2340  000876  C062  F018         	movff	btemp+1,_task_running+1
  2341                           
  2342                           ;kernel.c: 53: \STKPTR = 0;\if (F_APTOS[task_running].task_stack.stack_size == 0) {\asm(
      +                          "PUSH");\TOS = F_APTOS[task_running].task_f;\}\else {\BSR = F_APTOS[task_running].BSR_re
      +                          gister;\STATUS = F_APTOS[task_running].STATUS_register;\WREG = F_APTOS[task_running].WOR
      +                          K
  2343  00087A  6AFC               	clrf	stkptr,c	;volatile
  2344  00087C  0E11               	movlw	17
  2345  00087E  6EE6               	movwf	postinc1,c
  2346  000880  0E00               	movlw	0
  2347  000882  6EE6               	movwf	postinc1,c
  2348  000884  C017  FFE6         	movff	_task_running,postinc1
  2349  000888  C018  FFE6         	movff	_task_running+1,postinc1
  2350  00088C  EC7F  F00B         	call	___wmul	;wreg free
  2351  000890  0E0C               	movlw	low (_F_APTOS+12)
  2352  000892  2461               	addwf	btemp,w,c
  2353  000894  6ED9               	movwf	fsr2l,c
  2354  000896  0E01               	movlw	high (_F_APTOS+12)
  2355  000898  2062               	addwfc	btemp+1,w,c
  2356  00089A  6EDA               	movwf	fsr2h,c
  2357  00089C  50DE               	movf	postinc2,w,c
  2358  00089E  10DE               	iorwf	postinc2,w,c
  2359  0008A0  A4D8               	btfss	status,2,c
  2360  0008A2  D01B               	goto	l1926
  2361  0008A4  0005               	push		;# 
  2362  0008A6  0E11               	movlw	17
  2363  0008A8  6EE6               	movwf	postinc1,c
  2364  0008AA  0E00               	movlw	0
  2365  0008AC  6EE6               	movwf	postinc1,c
  2366  0008AE  C017  FFE6         	movff	_task_running,postinc1
  2367  0008B2  C018  FFE6         	movff	_task_running+1,postinc1
  2368  0008B6  EC7F  F00B         	call	___wmul	;wreg free
  2369  0008BA  0E04               	movlw	low (_F_APTOS+4)
  2370  0008BC  2461               	addwf	btemp,w,c
  2371  0008BE  6ED9               	movwf	fsr2l,c
  2372  0008C0  0E01               	movlw	high (_F_APTOS+4)
  2373  0008C2  2062               	addwfc	btemp+1,w,c
  2374  0008C4  6EDA               	movwf	fsr2h,c
  2375  0008C6  CFDE F062          	movff	postinc2,btemp+1
  2376  0008CA  CFDD F063          	movff	postdec2,btemp+2
  2377  0008CE  C062  FFFD         	movff	btemp+1,tosl	;volatile
  2378  0008D2  C063  FFFE         	movff	btemp+2,tosh	;volatile
  2379  0008D6  6AFF               	clrf	tosu,c	;volatile
  2380  0008D8  D11F               	goto	u78_20
  2381  0008DA                     l1926:
  2382  0008DA  0E11               	movlw	17
  2383  0008DC  6EE6               	movwf	postinc1,c
  2384  0008DE  0E00               	movlw	0
  2385  0008E0  6EE6               	movwf	postinc1,c
  2386  0008E2  C017  FFE6         	movff	_task_running,postinc1
  2387  0008E6  C018  FFE6         	movff	_task_running+1,postinc1
  2388  0008EA  EC7F  F00B         	call	___wmul	;wreg free
  2389  0008EE  0E0E               	movlw	low (_F_APTOS+14)
  2390  0008F0  2461               	addwf	btemp,w,c
  2391  0008F2  6ED9               	movwf	fsr2l,c
  2392  0008F4  0E01               	movlw	high (_F_APTOS+14)
  2393  0008F6  2062               	addwfc	btemp+1,w,c
  2394  0008F8  6EDA               	movwf	fsr2h,c
  2395  0008FA  50DF               	movf	indf2,w,c
  2396  0008FC  6EE0               	movwf	bsr,c	;volatile
  2397  0008FE  0E11               	movlw	17
  2398  000900  6EE6               	movwf	postinc1,c
  2399  000902  0E00               	movlw	0
  2400  000904  6EE6               	movwf	postinc1,c
  2401  000906  C017  FFE6         	movff	_task_running,postinc1
  2402  00090A  C018  FFE6         	movff	_task_running+1,postinc1
  2403  00090E  EC7F  F00B         	call	___wmul	;wreg free
  2404  000912  0E0F               	movlw	low (_F_APTOS+15)
  2405  000914  2461               	addwf	btemp,w,c
  2406  000916  6ED9               	movwf	fsr2l,c
  2407  000918  0E01               	movlw	high (_F_APTOS+15)
  2408  00091A  2062               	addwfc	btemp+1,w,c
  2409  00091C  6EDA               	movwf	fsr2h,c
  2410  00091E  50DF               	movf	indf2,w,c
  2411  000920  6ED8               	movwf	status,c	;volatile
  2412  000922  0E11               	movlw	17
  2413  000924  6EE6               	movwf	postinc1,c
  2414  000926  0E00               	movlw	0
  2415  000928  6EE6               	movwf	postinc1,c
  2416  00092A  C017  FFE6         	movff	_task_running,postinc1
  2417  00092E  C018  FFE6         	movff	_task_running+1,postinc1
  2418  000932  EC7F  F00B         	call	___wmul	;wreg free
  2419  000936  0E10               	movlw	low (_F_APTOS+16)
  2420  000938  2461               	addwf	btemp,w,c
  2421  00093A  6ED9               	movwf	fsr2l,c
  2422  00093C  0E01               	movlw	high (_F_APTOS+16)
  2423  00093E  2062               	addwfc	btemp+1,w,c
  2424  000940  6EDA               	movwf	fsr2h,c
  2425  000942  50DF               	movf	indf2,w,c
  2426  000944  6E6C               	movwf	btemp+11,c
  2427  000946  506C               	movf	btemp+11,w,c
  2428  000948                     l94:
  2429  000948  0005               	push		;# 
  2430  00094A  0E11               	movlw	17
  2431  00094C  6EE6               	movwf	postinc1,c
  2432  00094E  0E00               	movlw	0
  2433  000950  6EE6               	movwf	postinc1,c
  2434  000952  C017  FFE6         	movff	_task_running,postinc1
  2435  000956  C018  FFE6         	movff	_task_running+1,postinc1
  2436  00095A  EC7F  F00B         	call	___wmul	;wreg free
  2437  00095E  0E0C               	movlw	low (_F_APTOS+12)
  2438  000960  2461               	addwf	btemp,w,c
  2439  000962  6ED9               	movwf	fsr2l,c
  2440  000964  0E01               	movlw	high (_F_APTOS+12)
  2441  000966  2062               	addwfc	btemp+1,w,c
  2442  000968  6EDA               	movwf	fsr2h,c
  2443  00096A  06DE               	decf	postinc2,f,c
  2444  00096C  0E00               	movlw	0
  2445  00096E  5ADD               	subwfb	postdec2,f,c
  2446  000970  0E03               	movlw	3
  2447  000972  6EE6               	movwf	postinc1,c
  2448  000974  0E00               	movlw	0
  2449  000976  6EE6               	movwf	postinc1,c
  2450  000978  0E11               	movlw	17
  2451  00097A  6EE6               	movwf	postinc1,c
  2452  00097C  0E00               	movlw	0
  2453  00097E  6EE6               	movwf	postinc1,c
  2454  000980  C017  FFE6         	movff	_task_running,postinc1
  2455  000984  C018  FFE6         	movff	_task_running+1,postinc1
  2456  000988  EC7F  F00B         	call	___wmul	;wreg free
  2457  00098C  0E0C               	movlw	low (_F_APTOS+12)
  2458  00098E  2461               	addwf	btemp,w,c
  2459  000990  6ED9               	movwf	fsr2l,c
  2460  000992  0E01               	movlw	high (_F_APTOS+12)
  2461  000994  2062               	addwfc	btemp+1,w,c
  2462  000996  6EDA               	movwf	fsr2h,c
  2463  000998  CFDE F062          	movff	postinc2,btemp+1
  2464  00099C  CFDD F063          	movff	postdec2,btemp+2
  2465  0009A0  C062  FFE6         	movff	btemp+1,postinc1
  2466  0009A4  C063  FFE6         	movff	btemp+2,postinc1
  2467  0009A8  EC7F  F00B         	call	___wmul	;wreg free
  2468  0009AC  C061  F069         	movff	btemp,btemp+8
  2469  0009B0  C062  F06A         	movff	btemp+1,btemp+9
  2470  0009B4  0E11               	movlw	17
  2471  0009B6  6EE6               	movwf	postinc1,c
  2472  0009B8  0E00               	movlw	0
  2473  0009BA  6EE6               	movwf	postinc1,c
  2474  0009BC  C017  FFE6         	movff	_task_running,postinc1
  2475  0009C0  C018  FFE6         	movff	_task_running+1,postinc1
  2476  0009C4  EC7F  F00B         	call	___wmul	;wreg free
  2477  0009C8  0E00               	movlw	low _F_APTOS
  2478  0009CA  6E6B               	movwf	btemp+10,c
  2479  0009CC  0E01               	movlw	high _F_APTOS
  2480  0009CE  6E6C               	movwf	btemp+11,c
  2481  0009D0  0E09               	movlw	9
  2482  0009D2  266B               	addwf	btemp+10,f,c
  2483  0009D4  0E00               	movlw	0
  2484  0009D6  226C               	addwfc	btemp+11,f,c
  2485  0009D8  5061               	movf	btemp,w,c
  2486  0009DA  266B               	addwf	btemp+10,f,c
  2487  0009DC  5062               	movf	btemp+1,w,c
  2488  0009DE  226C               	addwfc	btemp+11,f,c
  2489  0009E0  5069               	movf	btemp+8,w,c
  2490  0009E2  246B               	addwf	btemp+10,w,c
  2491  0009E4  6ED9               	movwf	fsr2l,c
  2492  0009E6  506A               	movf	btemp+9,w,c
  2493  0009E8  206C               	addwfc	btemp+11,w,c
  2494  0009EA  6EDA               	movwf	fsr2h,c
  2495  0009EC  50DF               	movf	indf2,w,c
  2496  0009EE  6EFF               	movwf	tosu,c	;volatile
  2497  0009F0  0E03               	movlw	3
  2498  0009F2  6EE6               	movwf	postinc1,c
  2499  0009F4  0E00               	movlw	0
  2500  0009F6  6EE6               	movwf	postinc1,c
  2501  0009F8  0E11               	movlw	17
  2502  0009FA  6EE6               	movwf	postinc1,c
  2503  0009FC  0E00               	movlw	0
  2504  0009FE  6EE6               	movwf	postinc1,c
  2505  000A00  C017  FFE6         	movff	_task_running,postinc1
  2506  000A04  C018  FFE6         	movff	_task_running+1,postinc1
  2507  000A08  EC7F  F00B         	call	___wmul	;wreg free
  2508  000A0C  0E0C               	movlw	low (_F_APTOS+12)
  2509  000A0E  2461               	addwf	btemp,w,c
  2510  000A10  6ED9               	movwf	fsr2l,c
  2511  000A12  0E01               	movlw	high (_F_APTOS+12)
  2512  000A14  2062               	addwfc	btemp+1,w,c
  2513  000A16  6EDA               	movwf	fsr2h,c
  2514  000A18  CFDE F062          	movff	postinc2,btemp+1
  2515  000A1C  CFDD F063          	movff	postdec2,btemp+2
  2516  000A20  C062  FFE6         	movff	btemp+1,postinc1
  2517  000A24  C063  FFE6         	movff	btemp+2,postinc1
  2518  000A28  EC7F  F00B         	call	___wmul	;wreg free
  2519  000A2C  C061  F069         	movff	btemp,btemp+8
  2520  000A30  C062  F06A         	movff	btemp+1,btemp+9
  2521  000A34  0E11               	movlw	17
  2522  000A36  6EE6               	movwf	postinc1,c
  2523  000A38  0E00               	movlw	0
  2524  000A3A  6EE6               	movwf	postinc1,c
  2525  000A3C  C017  FFE6         	movff	_task_running,postinc1
  2526  000A40  C018  FFE6         	movff	_task_running+1,postinc1
  2527  000A44  EC7F  F00B         	call	___wmul	;wreg free
  2528  000A48  0E00               	movlw	low _F_APTOS
  2529  000A4A  6E6B               	movwf	btemp+10,c
  2530  000A4C  0E01               	movlw	high _F_APTOS
  2531  000A4E  6E6C               	movwf	btemp+11,c
  2532  000A50  0E0A               	movlw	10
  2533  000A52  266B               	addwf	btemp+10,f,c
  2534  000A54  0E00               	movlw	0
  2535  000A56  226C               	addwfc	btemp+11,f,c
  2536  000A58  5061               	movf	btemp,w,c
  2537  000A5A  266B               	addwf	btemp+10,f,c
  2538  000A5C  5062               	movf	btemp+1,w,c
  2539  000A5E  226C               	addwfc	btemp+11,f,c
  2540  000A60  5069               	movf	btemp+8,w,c
  2541  000A62  246B               	addwf	btemp+10,w,c
  2542  000A64  6ED9               	movwf	fsr2l,c
  2543  000A66  506A               	movf	btemp+9,w,c
  2544  000A68  206C               	addwfc	btemp+11,w,c
  2545  000A6A  6EDA               	movwf	fsr2h,c
  2546  000A6C  50DF               	movf	indf2,w,c
  2547  000A6E  6EFD               	movwf	tosl,c	;volatile
  2548  000A70  0E03               	movlw	3
  2549  000A72  6EE6               	movwf	postinc1,c
  2550  000A74  0E00               	movlw	0
  2551  000A76  6EE6               	movwf	postinc1,c
  2552  000A78  0E11               	movlw	17
  2553  000A7A  6EE6               	movwf	postinc1,c
  2554  000A7C  0E00               	movlw	0
  2555  000A7E  6EE6               	movwf	postinc1,c
  2556  000A80  C017  FFE6         	movff	_task_running,postinc1
  2557  000A84  C018  FFE6         	movff	_task_running+1,postinc1
  2558  000A88  EC7F  F00B         	call	___wmul	;wreg free
  2559  000A8C  0E0C               	movlw	low (_F_APTOS+12)
  2560  000A8E  2461               	addwf	btemp,w,c
  2561  000A90  6ED9               	movwf	fsr2l,c
  2562  000A92  0E01               	movlw	high (_F_APTOS+12)
  2563  000A94  2062               	addwfc	btemp+1,w,c
  2564  000A96  6EDA               	movwf	fsr2h,c
  2565  000A98  CFDE F062          	movff	postinc2,btemp+1
  2566  000A9C  CFDD F063          	movff	postdec2,btemp+2
  2567  000AA0  C062  FFE6         	movff	btemp+1,postinc1
  2568  000AA4  C063  FFE6         	movff	btemp+2,postinc1
  2569  000AA8  EC7F  F00B         	call	___wmul	;wreg free
  2570  000AAC  C061  F069         	movff	btemp,btemp+8
  2571  000AB0  C062  F06A         	movff	btemp+1,btemp+9
  2572  000AB4  0E11               	movlw	17
  2573  000AB6  6EE6               	movwf	postinc1,c
  2574  000AB8  0E00               	movlw	0
  2575  000ABA  6EE6               	movwf	postinc1,c
  2576  000ABC  C017  FFE6         	movff	_task_running,postinc1
  2577  000AC0  C018  FFE6         	movff	_task_running+1,postinc1
  2578  000AC4  EC7F  F00B         	call	___wmul	;wreg free
  2579  000AC8  0E00               	movlw	low _F_APTOS
  2580  000ACA  6E6B               	movwf	btemp+10,c
  2581  000ACC  0E01               	movlw	high _F_APTOS
  2582  000ACE  6E6C               	movwf	btemp+11,c
  2583  000AD0  0E0B               	movlw	11
  2584  000AD2  266B               	addwf	btemp+10,f,c
  2585  000AD4  0E00               	movlw	0
  2586  000AD6  226C               	addwfc	btemp+11,f,c
  2587  000AD8  5061               	movf	btemp,w,c
  2588  000ADA  266B               	addwf	btemp+10,f,c
  2589  000ADC  5062               	movf	btemp+1,w,c
  2590  000ADE  226C               	addwfc	btemp+11,f,c
  2591  000AE0  5069               	movf	btemp+8,w,c
  2592  000AE2  246B               	addwf	btemp+10,w,c
  2593  000AE4  6ED9               	movwf	fsr2l,c
  2594  000AE6  506A               	movf	btemp+9,w,c
  2595  000AE8  206C               	addwfc	btemp+11,w,c
  2596  000AEA  6EDA               	movwf	fsr2h,c
  2597  000AEC  50DF               	movf	indf2,w,c
  2598  000AEE  6EFE               	movwf	tosh,c	;volatile
  2599  000AF0  0E11               	movlw	17
  2600  000AF2  6EE6               	movwf	postinc1,c
  2601  000AF4  0E00               	movlw	0
  2602  000AF6  6EE6               	movwf	postinc1,c
  2603  000AF8  C017  FFE6         	movff	_task_running,postinc1
  2604  000AFC  C018  FFE6         	movff	_task_running+1,postinc1
  2605  000B00  EC7F  F00B         	call	___wmul	;wreg free
  2606  000B04  0E0C               	movlw	low (_F_APTOS+12)
  2607  000B06  2461               	addwf	btemp,w,c
  2608  000B08  6ED9               	movwf	fsr2l,c
  2609  000B0A  0E01               	movlw	high (_F_APTOS+12)
  2610  000B0C  2062               	addwfc	btemp+1,w,c
  2611  000B0E  6EDA               	movwf	fsr2h,c
  2612  000B10  50DE               	movf	postinc2,w,c
  2613  000B12  10DE               	iorwf	postinc2,w,c
  2614  000B14  A4D8               	btfss	status,2,c
  2615  000B16  D718               	goto	l94
  2616  000B18                     u78_20:
  2617  000B18  0E11               	movlw	17
  2618  000B1A  6EE6               	movwf	postinc1,c
  2619  000B1C  0E00               	movlw	0
  2620  000B1E  6EE6               	movwf	postinc1,c
  2621  000B20  C017  FFE6         	movff	_task_running,postinc1
  2622  000B24  C018  FFE6         	movff	_task_running+1,postinc1
  2623  000B28  EC7F  F00B         	call	___wmul	;wreg free
  2624  000B2C  0E08               	movlw	low (_F_APTOS+8)
  2625  000B2E  2461               	addwf	btemp,w,c
  2626  000B30  6ED9               	movwf	fsr2l,c
  2627  000B32  0E01               	movlw	high (_F_APTOS+8)
  2628  000B34  2062               	addwfc	btemp+1,w,c
  2629  000B36  6EDA               	movwf	fsr2h,c
  2630  000B38  0E02               	movlw	2
  2631  000B3A  6EDF               	movwf	indf2,c
  2632  000B3C  8EF2               	bsf	intcon,7,c	;volatile
  2633                           
  2634                           ;kernel.c: 55: INTCONbits.GIE = 1;
  2635  000B3E  8EF2               	bsf	intcon,7,c	;volatile
  2636                           
  2637                           ; _dispatcher: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2638  000B40  52E5               	movf	postdec1,f,c
  2639  000B42  0012               	return		;funcret
  2640  000B44                     __end_of_dispatcher:
  2641                           	opt stack 0
  2642                           tosu	equ	0xFFF
  2643                           tosh	equ	0xFFE
  2644                           tosl	equ	0xFFD
  2645                           stkptr	equ	0xFFC
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           postdec0	equ	0xFED
  2655                           plusw0	equ	0xFEB
  2656                           fsr0h	equ	0xFEA
  2657                           fsr0l	equ	0xFE9
  2658                           wreg	equ	0xFE8
  2659                           postinc1	equ	0xFE6
  2660                           postdec1	equ	0xFE5
  2661                           plusw1	equ	0xFE3
  2662                           fsr1h	equ	0xFE2
  2663                           fsr1l	equ	0xFE1
  2664                           bsr	equ	0xFE0
  2665                           indf2	equ	0xFDF
  2666                           postinc2	equ	0xFDE
  2667                           postdec2	equ	0xFDD
  2668                           plusw2	equ	0xFDB
  2669                           fsr2h	equ	0xFDA
  2670                           fsr2l	equ	0xFD9
  2671                           status	equ	0xFD8
  2672                           
  2673 ;; *************** function _rr_scheduler *****************
  2674 ;; Defined at:
  2675 ;;		line 23 in file "scheduler.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  next_task_to    2  [STACK] unsigned int 
  2680 ;;  j               2  [STACK] unsigned int 
  2681 ;;  cont            2  [STACK] unsigned int 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2  [STACK] unsigned int 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl, prodh
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2691 ;;      Params:         0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    7
  2698 ;; This function calls:
  2699 ;;		___lwmod
  2700 ;;		___wmul
  2701 ;;		_contagemR
  2702 ;; This function is called by:
  2703 ;;		_dispatcher
  2704 ;; This function uses a reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text14
  2708  001288                     __ptext14:
  2709                           	opt stack 0
  2710  001288                     _rr_scheduler:
  2711                           	opt stack 0
  2712                           
  2713                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  2714  001288  0E06               	movlw	6
  2715  00128A  26E1               	addwf	fsr1l,f,c
  2716  00128C  0E00               	movlw	0
  2717  00128E  22E2               	addwfc	fsr1h,f,c
  2718                           
  2719                           ;scheduler.c: 26: u_int j = task_running;
  2720                           
  2721                           ;incstack = 0
  2722  001290  C017  F062         	movff	_task_running,btemp+1
  2723  001294  C018  F063         	movff	_task_running+1,btemp+2
  2724                           
  2725                           ;stkvar	rr_scheduler@j @ sp[(-6)+2]
  2726  001298  0EFC               	movlw	-4
  2727  00129A  C062  FFE3         	movff	btemp+1,plusw1
  2728  00129E  0EFD               	movlw	-3
  2729  0012A0  C063  FFE3         	movff	btemp+2,plusw1
  2730                           
  2731                           ;scheduler.c: 27: u_int cont = contagemR();
  2732  0012A4  EC82  F00A         	call	_contagemR	;wreg free
  2733                           
  2734                           ;stkvar	rr_scheduler@cont @ sp[(-6)+4]
  2735  0012A8  0EFE               	movlw	-2
  2736  0012AA  C061  FFE3         	movff	btemp,plusw1
  2737  0012AE  0EFF               	movlw	-1
  2738  0012B0  C062  FFE3         	movff	btemp+1,plusw1
  2739                           
  2740                           ;scheduler.c: 29: PORTBbits.RB0 = ~LATBbits.LATB0;
  2741  0012B4  A08A               	btfss	3978,0,c	;volatile
  2742  0012B6  D002               	goto	u63_20
  2743  0012B8  0E01               	movlw	1
  2744  0012BA  D001               	goto	u63_26
  2745  0012BC                     u63_20:
  2746  0012BC  0E00               	movlw	0
  2747  0012BE                     u63_26:
  2748  0012BE  0AFF               	xorlw	255
  2749  0012C0  6E6C               	movwf	btemp+11,c
  2750  0012C2  5081               	movf	3969,w,c	;volatile
  2751  0012C4  186C               	xorwf	btemp+11,w,c
  2752  0012C6  0BFE               	andlw	-2
  2753  0012C8  186C               	xorwf	btemp+11,w,c
  2754  0012CA  6E81               	movwf	3969,c	;volatile
  2755  0012CC                     l1780:
  2756                           
  2757                           ;scheduler.c: 32: j++;
  2758                           ;stkvar	rr_scheduler@j @ sp[(-6)+2]
  2759  0012CC  0EFC               	movlw	-4
  2760  0012CE  50E3               	movf	plusw1,w,c
  2761  0012D0  0F01               	addlw	1
  2762  0012D2  6E61               	movwf	btemp,c
  2763  0012D4  0EFC               	movlw	-4
  2764  0012D6  C061  FFE3         	movff	btemp,plusw1
  2765  0012DA  6A61               	clrf	btemp,c
  2766  0012DC  0EFD               	movlw	-3
  2767  0012DE  50E3               	movf	plusw1,w,c
  2768  0012E0  2061               	addwfc	btemp,w,c
  2769  0012E2  6E61               	movwf	btemp,c
  2770  0012E4  0EFD               	movlw	-3
  2771  0012E6  C061  FFE3         	movff	btemp,plusw1
  2772                           
  2773                           ;scheduler.c: 33: next_task_to_run = (j) % tasks_installed;
  2774  0012EA  C019  FFE6         	movff	_tasks_installed,postinc1
  2775  0012EE  C01A  FFE6         	movff	_tasks_installed+1,postinc1
  2776                           
  2777                           ;stkvar	rr_scheduler@j @ sp[(-8)+2]
  2778  0012F2  0EFA               	movlw	-6
  2779  0012F4  CFE3 FFE6          	movff	plusw1,postinc1
  2780  0012F8  CFE3 FFE6          	movff	plusw1,postinc1
  2781  0012FC  EC24  F00A         	call	___lwmod	;wreg free
  2782                           
  2783                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  2784  001300  0EFA               	movlw	-6
  2785  001302  C061  FFE3         	movff	btemp,plusw1
  2786  001306  0EFB               	movlw	-5
  2787  001308  C062  FFE3         	movff	btemp+1,plusw1
  2788                           
  2789                           ;scheduler.c: 34: } while (F_APTOS[next_task_to_run].task_state != READY || (cont>0 && n
      +                          ext_task_to_run == 0));
  2790  00130C  0E11               	movlw	17
  2791  00130E  6EE6               	movwf	postinc1,c
  2792  001310  0E00               	movlw	0
  2793  001312  6EE6               	movwf	postinc1,c
  2794                           
  2795                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-8)+0]
  2796  001314  0EF8               	movlw	-8
  2797  001316  CFE3 FFE6          	movff	plusw1,postinc1
  2798  00131A  CFE3 FFE6          	movff	plusw1,postinc1
  2799  00131E  EC7F  F00B         	call	___wmul	;wreg free
  2800  001322  0E08               	movlw	low (_F_APTOS+8)
  2801  001324  2461               	addwf	btemp,w,c
  2802  001326  6ED9               	movwf	fsr2l,c
  2803  001328  0E01               	movlw	high (_F_APTOS+8)
  2804  00132A  2062               	addwfc	btemp+1,w,c
  2805  00132C  6EDA               	movwf	fsr2h,c
  2806  00132E  04DE               	decf	postinc2,w,c
  2807  001330  A4D8               	btfss	status,2,c
  2808  001332  D7CC               	goto	l1780
  2809                           
  2810                           ;stkvar	rr_scheduler@cont @ sp[(-6)+4]
  2811  001334  0EFE               	movlw	-2
  2812  001336  CFE3 F061          	movff	plusw1,btemp
  2813  00133A  0EFF               	movlw	-1
  2814  00133C  50E3               	movf	plusw1,w,c
  2815  00133E  1061               	iorwf	btemp,w,c
  2816  001340  B4D8               	btfsc	status,2,c
  2817  001342  D008               	goto	u66_20
  2818                           
  2819                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  2820  001344  0EFA               	movlw	-6
  2821  001346  CFE3 F061          	movff	plusw1,btemp
  2822  00134A  0EFB               	movlw	-5
  2823  00134C  50E3               	movf	plusw1,w,c
  2824  00134E  1061               	iorwf	btemp,w,c
  2825  001350  B4D8               	btfsc	status,2,c
  2826  001352  D7BC               	goto	l1780
  2827  001354                     u66_20:
  2828                           
  2829                           ;scheduler.c: 36: return next_task_to_run;
  2830                           ;stkvar	rr_scheduler@next_task_to_run @ sp[(-6)+0]
  2831  001354  0EFA               	movlw	-6
  2832  001356  CFE3 F061          	movff	plusw1,btemp
  2833  00135A  0EFB               	movlw	-5
  2834  00135C  CFE3 F062          	movff	plusw1,btemp+1
  2835                           
  2836                           ; _rr_scheduler: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2837  001360  0EFA               	movlw	250
  2838  001362  26E1               	addwf	fsr1l,f,c
  2839  001364  0EFF               	movlw	255
  2840  001366  22E2               	addwfc	fsr1h,f,c
  2841  001368  0012               	return		;funcret
  2842  00136A                     __end_of_rr_scheduler:
  2843                           	opt stack 0
  2844                           tosu	equ	0xFFF
  2845                           tosh	equ	0xFFE
  2846                           tosl	equ	0xFFD
  2847                           stkptr	equ	0xFFC
  2848                           tblptru	equ	0xFF8
  2849                           tblptrh	equ	0xFF7
  2850                           tblptrl	equ	0xFF6
  2851                           tablat	equ	0xFF5
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           intcon	equ	0xFF2
  2855                           postinc0	equ	0xFEE
  2856                           postdec0	equ	0xFED
  2857                           plusw0	equ	0xFEB
  2858                           fsr0h	equ	0xFEA
  2859                           fsr0l	equ	0xFE9
  2860                           wreg	equ	0xFE8
  2861                           postinc1	equ	0xFE6
  2862                           postdec1	equ	0xFE5
  2863                           plusw1	equ	0xFE3
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           bsr	equ	0xFE0
  2867                           indf2	equ	0xFDF
  2868                           postinc2	equ	0xFDE
  2869                           postdec2	equ	0xFDD
  2870                           plusw2	equ	0xFDB
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _contagemR *****************
  2876 ;; Defined at:
  2877 ;;		line 13 in file "scheduler.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  i               2  [STACK] int 
  2882 ;;  x               2  [STACK] unsigned int 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2  [STACK] unsigned int 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+11, prodl, prodh
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2892 ;;      Params:         0       0       0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    6
  2899 ;; This function calls:
  2900 ;;		___wmul
  2901 ;; This function is called by:
  2902 ;;		_rr_scheduler
  2903 ;; This function uses a reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text15
  2907  001504                     __ptext15:
  2908                           	opt stack 0
  2909  001504                     _contagemR:
  2910                           	opt stack 0
  2911                           
  2912                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  2913  001504  52E6               	movf	postinc1,f,c
  2914  001506  52E6               	movf	postinc1,f,c
  2915  001508  52E6               	movf	postinc1,f,c
  2916  00150A  52E6               	movf	postinc1,f,c
  2917                           
  2918                           ;scheduler.c: 15: u_int x = 0;
  2919                           ;stkvar	contagemR@x @ sp[(-4)+2]
  2920                           
  2921                           ;incstack = 0
  2922  00150C  0EFE               	movlw	-2
  2923  00150E  6AE3               	clrf	plusw1,c
  2924  001510  0EFF               	movlw	-1
  2925  001512  6AE3               	clrf	plusw1,c
  2926                           
  2927                           ;scheduler.c: 16: for (int i = 1; i < 10 ; i++)
  2928  001514  0E01               	movlw	1
  2929  001516  6E62               	movwf	btemp+1,c
  2930  001518  0E00               	movlw	0
  2931  00151A  6E63               	movwf	btemp+2,c
  2932                           
  2933                           ;stkvar	contagemR@i @ sp[(-4)+0]
  2934  00151C  0EFC               	movlw	-4
  2935  00151E  C062  FFE3         	movff	btemp+1,plusw1
  2936  001522  0EFD               	movlw	-3
  2937  001524  C063  FFE3         	movff	btemp+2,plusw1
  2938  001528                     l1680:
  2939                           
  2940                           ;scheduler.c: 17: {
  2941                           ;scheduler.c: 18: if (F_APTOS[i].task_state == READY) x++;
  2942  001528  0E11               	movlw	17
  2943  00152A  6EE6               	movwf	postinc1,c
  2944  00152C  0E00               	movlw	0
  2945  00152E  6EE6               	movwf	postinc1,c
  2946                           
  2947                           ;stkvar	contagemR@i @ sp[(-6)+0]
  2948  001530  0EFA               	movlw	-6
  2949  001532  CFE3 FFE6          	movff	plusw1,postinc1
  2950  001536  CFE3 FFE6          	movff	plusw1,postinc1
  2951  00153A  EC7F  F00B         	call	___wmul	;wreg free
  2952  00153E  0E08               	movlw	low (_F_APTOS+8)
  2953  001540  2461               	addwf	btemp,w,c
  2954  001542  6ED9               	movwf	fsr2l,c
  2955  001544  0E01               	movlw	high (_F_APTOS+8)
  2956  001546  2062               	addwfc	btemp+1,w,c
  2957  001548  6EDA               	movwf	fsr2h,c
  2958  00154A  04DE               	decf	postinc2,w,c
  2959  00154C  A4D8               	btfss	status,2,c
  2960  00154E  D00F               	goto	l224
  2961                           
  2962                           ;stkvar	contagemR@x @ sp[(-4)+2]
  2963  001550  0EFE               	movlw	-2
  2964  001552  50E3               	movf	plusw1,w,c
  2965  001554  0F01               	addlw	1
  2966  001556  6E61               	movwf	btemp,c
  2967  001558  0EFE               	movlw	-2
  2968  00155A  C061  FFE3         	movff	btemp,plusw1
  2969  00155E  6A61               	clrf	btemp,c
  2970  001560  0EFF               	movlw	-1
  2971  001562  50E3               	movf	plusw1,w,c
  2972  001564  2061               	addwfc	btemp,w,c
  2973  001566  6E61               	movwf	btemp,c
  2974  001568  0EFF               	movlw	-1
  2975  00156A  C061  FFE3         	movff	btemp,plusw1
  2976  00156E                     l224:
  2977                           
  2978                           ;stkvar	contagemR@i @ sp[(-4)+0]
  2979  00156E  0EFC               	movlw	-4
  2980  001570  50E3               	movf	plusw1,w,c
  2981  001572  0F01               	addlw	1
  2982  001574  6E61               	movwf	btemp,c
  2983  001576  0EFC               	movlw	-4
  2984  001578  C061  FFE3         	movff	btemp,plusw1
  2985  00157C  6A61               	clrf	btemp,c
  2986  00157E  0EFD               	movlw	-3
  2987  001580  50E3               	movf	plusw1,w,c
  2988  001582  2061               	addwfc	btemp,w,c
  2989  001584  6E61               	movwf	btemp,c
  2990  001586  0EFD               	movlw	-3
  2991  001588  C061  FFE3         	movff	btemp,plusw1
  2992                           
  2993                           ;stkvar	contagemR@i @ sp[(-4)+0]
  2994  00158C  0EFD               	movlw	-3
  2995  00158E  BEE3               	btfsc	plusw1,7,c
  2996  001590  D7CB               	goto	l1680
  2997  001592  0EFD               	movlw	-3
  2998  001594  50E3               	movf	plusw1,w,c
  2999  001596  E107               	bnz	u52_20
  3000  001598  0EFC               	movlw	-4
  3001  00159A  CFE3 F061          	movff	plusw1,btemp
  3002  00159E  0E0A               	movlw	10
  3003  0015A0  5E61               	subwf	btemp,f,c
  3004  0015A2  A0D8               	btfss	status,0,c
  3005  0015A4  D7C1               	goto	l1680
  3006  0015A6                     u52_20:
  3007                           
  3008                           ;scheduler.c: 19: }
  3009                           ;scheduler.c: 20: return x;
  3010                           ;stkvar	contagemR@x @ sp[(-4)+2]
  3011  0015A6  0EFE               	movlw	-2
  3012  0015A8  CFE3 F061          	movff	plusw1,btemp
  3013  0015AC  0EFF               	movlw	-1
  3014  0015AE  CFE3 F062          	movff	plusw1,btemp+1
  3015                           
  3016                           ; _contagemR: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3017  0015B2  52E5               	movf	postdec1,f,c
  3018  0015B4  52E5               	movf	postdec1,f,c
  3019  0015B6  52E5               	movf	postdec1,f,c
  3020  0015B8  52E5               	movf	postdec1,f,c
  3021  0015BA  0012               	return		;funcret
  3022  0015BC                     __end_of_contagemR:
  3023                           	opt stack 0
  3024                           tosu	equ	0xFFF
  3025                           tosh	equ	0xFFE
  3026                           tosl	equ	0xFFD
  3027                           stkptr	equ	0xFFC
  3028                           tblptru	equ	0xFF8
  3029                           tblptrh	equ	0xFF7
  3030                           tblptrl	equ	0xFF6
  3031                           tablat	equ	0xFF5
  3032                           prodh	equ	0xFF4
  3033                           prodl	equ	0xFF3
  3034                           intcon	equ	0xFF2
  3035                           postinc0	equ	0xFEE
  3036                           postdec0	equ	0xFED
  3037                           plusw0	equ	0xFEB
  3038                           fsr0h	equ	0xFEA
  3039                           fsr0l	equ	0xFE9
  3040                           wreg	equ	0xFE8
  3041                           postinc1	equ	0xFE6
  3042                           postdec1	equ	0xFE5
  3043                           plusw1	equ	0xFE3
  3044                           fsr1h	equ	0xFE2
  3045                           fsr1l	equ	0xFE1
  3046                           bsr	equ	0xFE0
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           postdec2	equ	0xFDD
  3050                           plusw2	equ	0xFDB
  3051                           fsr2h	equ	0xFDA
  3052                           fsr2l	equ	0xFD9
  3053                           status	equ	0xFD8
  3054                           
  3055 ;; *************** function ___lwmod *****************
  3056 ;; Defined at:
  3057 ;;		line 8 in file "/opt/microchip/xc8/v1.45/sources/common/lwmod.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  dividend        2  [STACK] unsigned int 
  3060 ;;  divisor         2  [STACK] unsigned int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  counter         1  [STACK] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2  [STACK] unsigned int 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, prodl
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         0       0       0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    5
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_rr_scheduler
  3083 ;;		_sem_wait
  3084 ;;		_sem_post
  3085 ;;		_pipe_read
  3086 ;;		_pipe_write
  3087 ;; This function uses a reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text16
  3091  001448                     __ptext16:
  3092                           	opt stack 0
  3093  001448                     ___lwmod:
  3094                           	opt stack 0
  3095                           
  3096                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  3097  001448  52E6               	movf	postinc1,f,c
  3098                           
  3099                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3100                           
  3101                           ;incstack = 0
  3102  00144A  0EFB               	movlw	-5
  3103  00144C  CFE3 F061          	movff	plusw1,btemp
  3104  001450  0EFC               	movlw	-4
  3105  001452  50E3               	movf	plusw1,w,c
  3106  001454  1061               	iorwf	btemp,w,c
  3107  001456  B4D8               	btfsc	status,2,c
  3108  001458  D04A               	goto	u61_20
  3109                           
  3110                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3111  00145A  0EFF               	movlw	-1
  3112  00145C  6AE3               	clrf	plusw1,c
  3113  00145E  D010               	goto	L2
  3114  001460                     l1736:
  3115                           
  3116                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3117  001460  0EFB               	movlw	-5
  3118  001462  50E3               	movf	plusw1,w,c
  3119  001464  90D8               	bcf	status,0,c
  3120  001466  34E8               	rlcf	wreg,w,c
  3121  001468  6E61               	movwf	btemp,c
  3122  00146A  0EFB               	movlw	-5
  3123  00146C  C061  FFE3         	movff	btemp,plusw1
  3124  001470  0EFC               	movlw	-4
  3125  001472  50E3               	movf	plusw1,w,c
  3126  001474  34E8               	rlcf	wreg,w,c
  3127  001476  6E61               	movwf	btemp,c
  3128  001478  0EFC               	movlw	-4
  3129  00147A  C061  FFE3         	movff	btemp,plusw1
  3130                           
  3131                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3132  00147E  0EFF               	movlw	-1
  3133  001480                     L2:
  3134  001480  2AE3               	incf	plusw1,f,c
  3135                           
  3136                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3137  001482  0EFC               	movlw	-4
  3138  001484  AEE3               	btfss	plusw1,7,c
  3139  001486  D7EC               	goto	l1736
  3140  001488                     u59_20:
  3141                           
  3142                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3143  001488  0EFB               	movlw	-5
  3144  00148A  CFE3 F062          	movff	plusw1,btemp+1
  3145  00148E  0EFC               	movlw	-4
  3146  001490  CFE3 F063          	movff	plusw1,btemp+2
  3147                           
  3148                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3149  001494  0EFD               	movlw	-3
  3150  001496  CFE3 F06B          	movff	plusw1,btemp+10
  3151  00149A  0EFE               	movlw	-2
  3152  00149C  CFE3 F06C          	movff	plusw1,btemp+11
  3153  0014A0  5062               	movf	btemp+1,w,c
  3154  0014A2  5C6B               	subwf	btemp+10,w,c
  3155  0014A4  5063               	movf	btemp+2,w,c
  3156  0014A6  586C               	subwfb	btemp+11,w,c
  3157  0014A8  A0D8               	btfss	status,0,c
  3158  0014AA  D012               	goto	l1746
  3159                           
  3160                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3161                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3162  0014AC  0EFD               	movlw	-3
  3163  0014AE  50E3               	movf	plusw1,w,c
  3164  0014B0  6E61               	movwf	btemp,c
  3165  0014B2  0EFB               	movlw	-5
  3166  0014B4  50E3               	movf	plusw1,w,c
  3167  0014B6  5E61               	subwf	btemp,f,c
  3168  0014B8  0EFD               	movlw	-3
  3169  0014BA  C061  FFE3         	movff	btemp,plusw1
  3170  0014BE  0EFE               	movlw	-2
  3171  0014C0  50E3               	movf	plusw1,w,c
  3172  0014C2  6E61               	movwf	btemp,c
  3173  0014C4  0EFC               	movlw	-4
  3174  0014C6  50E3               	movf	plusw1,w,c
  3175  0014C8  5A61               	subwfb	btemp,f,c
  3176  0014CA  0EFE               	movlw	-2
  3177  0014CC  C061  FFE3         	movff	btemp,plusw1
  3178  0014D0                     l1746:
  3179                           
  3180                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
  3181  0014D0  90D8               	bcf	status,0,c
  3182  0014D2  0EFC               	movlw	-4
  3183  0014D4  32E3               	rrcf	plusw1,f,c
  3184  0014D6  0EFB               	movlw	-5
  3185  0014D8  32E3               	rrcf	plusw1,f,c
  3186                           
  3187                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
  3188  0014DA  0EFF               	movlw	-1
  3189  0014DC  50E3               	movf	plusw1,w,c
  3190  0014DE  6E61               	movwf	btemp,c
  3191  0014E0  0E01               	movlw	1
  3192  0014E2  5E61               	subwf	btemp,f,c
  3193  0014E4  0EFF               	movlw	-1
  3194  0014E6  C061  FFE3         	movff	btemp,plusw1
  3195  0014EA  A4D8               	btfss	status,2,c
  3196  0014EC  D7CD               	goto	u59_20
  3197  0014EE                     u61_20:
  3198                           
  3199                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
  3200  0014EE  0EFD               	movlw	-3
  3201  0014F0  CFE3 F061          	movff	plusw1,btemp
  3202  0014F4  0EFE               	movlw	-2
  3203  0014F6  CFE3 F062          	movff	plusw1,btemp+1
  3204                           
  3205                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
  3206  0014FA  0EFB               	movlw	251
  3207  0014FC  26E1               	addwf	fsr1l,f,c
  3208  0014FE  0EFF               	movlw	255
  3209  001500  22E2               	addwfc	fsr1h,f,c
  3210  001502  0012               	return		;funcret
  3211  001504                     __end_of___lwmod:
  3212                           	opt stack 0
  3213                           tosu	equ	0xFFF
  3214                           tosh	equ	0xFFE
  3215                           tosl	equ	0xFFD
  3216                           stkptr	equ	0xFFC
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           prodh	equ	0xFF4
  3222                           prodl	equ	0xFF3
  3223                           intcon	equ	0xFF2
  3224                           postinc0	equ	0xFEE
  3225                           postdec0	equ	0xFED
  3226                           plusw0	equ	0xFEB
  3227                           fsr0h	equ	0xFEA
  3228                           fsr0l	equ	0xFE9
  3229                           wreg	equ	0xFE8
  3230                           postinc1	equ	0xFE6
  3231                           postdec1	equ	0xFE5
  3232                           plusw1	equ	0xFE3
  3233                           fsr1h	equ	0xFE2
  3234                           fsr1l	equ	0xFE1
  3235                           bsr	equ	0xFE0
  3236                           indf2	equ	0xFDF
  3237                           postinc2	equ	0xFDE
  3238                           postdec2	equ	0xFDD
  3239                           plusw2	equ	0xFDB
  3240                           fsr2h	equ	0xFDA
  3241                           fsr2l	equ	0xFD9
  3242                           status	equ	0xFD8
  3243                           
  3244 ;; *************** function _led_1 *****************
  3245 ;; Defined at:
  3246 ;;		line 48 in file "tasks.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;		None
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;		None
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1  [STACK] void 
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3260 ;;      Params:         0       0       0       0       0       0       0
  3261 ;;      Locals:         0       0       0       0       0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0
  3263 ;;      Totals:         0       0       0       0       0       0       0
  3264 ;;Total ram usage:        0 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:   10
  3267 ;; This function calls:
  3268 ;;		_delay
  3269 ;;		_sem_post
  3270 ;;		_sem_wait
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text17
  3277  001794                     __ptext17:
  3278                           	opt stack 0
  3279  001794                     _led_1:
  3280                           	opt stack 17
  3281                           
  3282                           ;tasks.c: 51: PORTDbits.RD3 = 0;
  3283                           
  3284                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3285                           ;incstack = 0
  3286  001794  9683               	bcf	3971,3,c	;volatile
  3287                           
  3288                           ;tasks.c: 52: PORTDbits.RD6 = 0;
  3289  001796  9C83               	bcf	3971,6,c	;volatile
  3290                           
  3291                           ;tasks.c: 53: PORTDbits.RD4 = 0;
  3292  001798  9883               	bcf	3971,4,c	;volatile
  3293                           
  3294                           ;tasks.c: 54: PORTDbits.RD0 = 0;
  3295  00179A  9083               	bcf	3971,0,c	;volatile
  3296  00179C                     l179:
  3297                           
  3298                           ;tasks.c: 58: PORTDbits.RD3 = 1;
  3299  00179C  8683               	bsf	3971,3,c	;volatile
  3300                           
  3301                           ;tasks.c: 60: delay(5000);
  3302  00179E  0E88               	movlw	136
  3303  0017A0  6EE6               	movwf	postinc1,c
  3304  0017A2  0E13               	movlw	19
  3305  0017A4  6EE6               	movwf	postinc1,c
  3306  0017A6  ECAB  F00D         	call	_delay	;wreg free
  3307                           
  3308                           ;tasks.c: 62: sem_wait(&spista);
  3309  0017AA  0E2F               	movlw	low _spista
  3310  0017AC  6EE6               	movwf	postinc1,c
  3311  0017AE  0E00               	movlw	high _spista
  3312  0017B0  6EE6               	movwf	postinc1,c
  3313  0017B2  EC3D  F008         	call	_sem_wait	;wreg free
  3314                           
  3315                           ;tasks.c: 64: PORTDbits.RD3 = 0;
  3316  0017B6  9683               	bcf	3971,3,c	;volatile
  3317                           
  3318                           ;tasks.c: 66: PORTDbits.RD6 = 1;
  3319  0017B8  8C83               	bsf	3971,6,c	;volatile
  3320                           
  3321                           ;tasks.c: 68: delay(5000);
  3322  0017BA  0E88               	movlw	136
  3323  0017BC  6EE6               	movwf	postinc1,c
  3324  0017BE  0E13               	movlw	19
  3325  0017C0  6EE6               	movwf	postinc1,c
  3326  0017C2  ECAB  F00D         	call	_delay	;wreg free
  3327                           
  3328                           ;tasks.c: 71: PORTDbits.RD6 = 0;
  3329  0017C6  9C83               	bcf	3971,6,c	;volatile
  3330                           
  3331                           ;tasks.c: 74: sem_post(&spista);
  3332  0017C8  0E2F               	movlw	low _spista
  3333  0017CA  6EE6               	movwf	postinc1,c
  3334  0017CC  0E00               	movlw	high _spista
  3335  0017CE  6EE6               	movwf	postinc1,c
  3336  0017D0  EC58  F006         	call	_sem_post	;wreg free
  3337                           
  3338                           ;tasks.c: 75: delay(300);
  3339  0017D4  0E2C               	movlw	44
  3340  0017D6  6EE6               	movwf	postinc1,c
  3341  0017D8  0E01               	movlw	1
  3342  0017DA  6EE6               	movwf	postinc1,c
  3343  0017DC  ECAB  F00D         	call	_delay	;wreg free
  3344                           
  3345                           ;tasks.c: 78: PORTDbits.RD0 = 1;
  3346  0017E0  8083               	bsf	3971,0,c	;volatile
  3347                           
  3348                           ;tasks.c: 80: delay(5000);
  3349  0017E2  0E88               	movlw	136
  3350  0017E4  6EE6               	movwf	postinc1,c
  3351  0017E6  0E13               	movlw	19
  3352  0017E8  6EE6               	movwf	postinc1,c
  3353  0017EA  ECAB  F00D         	call	_delay	;wreg free
  3354                           
  3355                           ;tasks.c: 84: sem_wait(&spista);
  3356  0017EE  0E2F               	movlw	low _spista
  3357  0017F0  6EE6               	movwf	postinc1,c
  3358  0017F2  0E00               	movlw	high _spista
  3359  0017F4  6EE6               	movwf	postinc1,c
  3360  0017F6  EC3D  F008         	call	_sem_wait	;wreg free
  3361                           
  3362                           ;tasks.c: 86: PORTDbits.RD0 = 0;
  3363  0017FA  9083               	bcf	3971,0,c	;volatile
  3364                           
  3365                           ;tasks.c: 89: PORTDbits.RD4 = 1;
  3366  0017FC  8883               	bsf	3971,4,c	;volatile
  3367                           
  3368                           ;tasks.c: 91: delay(5000);
  3369  0017FE  0E88               	movlw	136
  3370  001800  6EE6               	movwf	postinc1,c
  3371  001802  0E13               	movlw	19
  3372  001804  6EE6               	movwf	postinc1,c
  3373  001806  ECAB  F00D         	call	_delay	;wreg free
  3374                           
  3375                           ;tasks.c: 93: PORTDbits.RD4 = 0;
  3376  00180A  9883               	bcf	3971,4,c	;volatile
  3377                           
  3378                           ;tasks.c: 95: sem_post(&spista);
  3379  00180C  0E2F               	movlw	low _spista
  3380  00180E  6EE6               	movwf	postinc1,c
  3381  001810  0E00               	movlw	high _spista
  3382  001812  6EE6               	movwf	postinc1,c
  3383  001814  EC58  F006         	call	_sem_post	;wreg free
  3384                           
  3385                           ;tasks.c: 96: delay(400);
  3386  001818  0E90               	movlw	144
  3387  00181A  6EE6               	movwf	postinc1,c
  3388  00181C  0E01               	movlw	1
  3389  00181E  6EE6               	movwf	postinc1,c
  3390  001820  ECAB  F00D         	call	_delay	;wreg free
  3391  001824  D7BB               	goto	l179
  3392  001826                     __end_of_led_1:
  3393                           	opt stack 0
  3394                           tosu	equ	0xFFF
  3395                           tosh	equ	0xFFE
  3396                           tosl	equ	0xFFD
  3397                           stkptr	equ	0xFFC
  3398                           tblptru	equ	0xFF8
  3399                           tblptrh	equ	0xFF7
  3400                           tblptrl	equ	0xFF6
  3401                           tablat	equ	0xFF5
  3402                           prodh	equ	0xFF4
  3403                           prodl	equ	0xFF3
  3404                           intcon	equ	0xFF2
  3405                           postinc0	equ	0xFEE
  3406                           postdec0	equ	0xFED
  3407                           plusw0	equ	0xFEB
  3408                           fsr0h	equ	0xFEA
  3409                           fsr0l	equ	0xFE9
  3410                           wreg	equ	0xFE8
  3411                           postinc1	equ	0xFE6
  3412                           postdec1	equ	0xFE5
  3413                           plusw1	equ	0xFE3
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           bsr	equ	0xFE0
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           plusw2	equ	0xFDB
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _sem_wait *****************
  3426 ;; Defined at:
  3427 ;;		line 20 in file "semaphore.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  s               2  [STACK] PTR struct sem
  3430 ;;		 -> spista(8), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  pos             2  [STACK] unsigned int 
  3433 ;;  task_pos        2    0        unsigned int 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1  [STACK] void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3443 ;;      Params:         0       0       0       0       0       0       0
  3444 ;;      Locals:         0       0       0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0
  3446 ;;      Totals:         0       0       0       0       0       0       0
  3447 ;;Total ram usage:        0 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    9
  3450 ;; This function calls:
  3451 ;;		___lwmod
  3452 ;;		_dispatcher
  3453 ;; This function is called by:
  3454 ;;		_led_1
  3455 ;;		_led_2
  3456 ;;		_led_3
  3457 ;; This function uses a reentrant model
  3458 ;;
  3459                           
  3460                           	psect	text18
  3461  00107A                     __ptext18:
  3462                           	opt stack 0
  3463  00107A                     _sem_wait:
  3464                           	opt stack 0
  3465                           
  3466                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  3467  00107A  52E6               	movf	postinc1,f,c
  3468  00107C  52E6               	movf	postinc1,f,c
  3469                           
  3470                           ;semaphore.c: 23: u_int task_pos = 0;
  3471                           
  3472                           ;incstack = 0
  3473  00107E  9EF2               	bcf	intcon,7,c	;volatile
  3474                           
  3475                           ;semaphore.c: 25: s->contador--;
  3476                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  3477  001080  0EFC               	movlw	-4
  3478  001082  CFE3 FFD9          	movff	plusw1,fsr2l
  3479  001086  0EFD               	movlw	-3
  3480  001088  CFE3 FFDA          	movff	plusw1,fsr2h
  3481  00108C  06DE               	decf	postinc2,f,c
  3482  00108E  0E00               	movlw	0
  3483  001090  5ADD               	subwfb	postdec2,f,c
  3484                           
  3485                           ;semaphore.c: 26: if (s->contador < 0) {
  3486                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  3487  001092  0EFC               	movlw	-4
  3488  001094  CFE3 FFD9          	movff	plusw1,fsr2l
  3489  001098  0EFD               	movlw	-3
  3490  00109A  CFE3 FFDA          	movff	plusw1,fsr2h
  3491  00109E  0E01               	movlw	1
  3492  0010A0  AEDB               	btfss	plusw2,7,c
  3493  0010A2  D06C               	goto	l1964
  3494                           
  3495                           ;semaphore.c: 27: u_int pos = (s->queue.size + s->queue.first) % 10;
  3496  0010A4  0E0A               	movlw	10
  3497  0010A6  6EE6               	movwf	postinc1,c
  3498  0010A8  0E00               	movlw	0
  3499  0010AA  6EE6               	movwf	postinc1,c
  3500                           
  3501                           ;stkvar	sem_wait@s @ sp[(-4)+-2]
  3502  0010AC  0EFA               	movlw	-6
  3503  0010AE  CFE3 F062          	movff	plusw1,btemp+1
  3504  0010B2  0EFB               	movlw	-5
  3505  0010B4  CFE3 F063          	movff	plusw1,btemp+2
  3506  0010B8  0E06               	movlw	6
  3507  0010BA  2462               	addwf	btemp+1,w,c
  3508  0010BC  6ED9               	movwf	fsr2l,c
  3509  0010BE  0E00               	movlw	0
  3510  0010C0  2063               	addwfc	btemp+2,w,c
  3511  0010C2  6EDA               	movwf	fsr2h,c
  3512  0010C4  CFDE F062          	movff	postinc2,btemp+1
  3513  0010C8  CFDD F063          	movff	postdec2,btemp+2
  3514                           
  3515                           ;stkvar	sem_wait@s @ sp[(-4)+-2]
  3516  0010CC  0EFA               	movlw	-6
  3517  0010CE  CFE3 F06B          	movff	plusw1,btemp+10
  3518  0010D2  0EFB               	movlw	-5
  3519  0010D4  CFE3 F06C          	movff	plusw1,btemp+11
  3520  0010D8  0E04               	movlw	4
  3521  0010DA  246B               	addwf	btemp+10,w,c
  3522  0010DC  6ED9               	movwf	fsr2l,c
  3523  0010DE  0E00               	movlw	0
  3524  0010E0  206C               	addwfc	btemp+11,w,c
  3525  0010E2  6EDA               	movwf	fsr2h,c
  3526  0010E4  CFDE F06B          	movff	postinc2,btemp+10
  3527  0010E8  CFDD F06C          	movff	postdec2,btemp+11
  3528  0010EC  5062               	movf	btemp+1,w,c
  3529  0010EE  266B               	addwf	btemp+10,f,c
  3530  0010F0  5063               	movf	btemp+2,w,c
  3531  0010F2  226C               	addwfc	btemp+11,f,c
  3532  0010F4  C06B  FFE6         	movff	btemp+10,postinc1
  3533  0010F8  C06C  FFE6         	movff	btemp+11,postinc1
  3534  0010FC  EC24  F00A         	call	___lwmod	;wreg free
  3535                           
  3536                           ;stkvar	sem_wait@pos @ sp[(-2)+0]
  3537  001100  0EFE               	movlw	-2
  3538  001102  C061  FFE3         	movff	btemp,plusw1
  3539  001106  0EFF               	movlw	-1
  3540  001108  C062  FFE3         	movff	btemp+1,plusw1
  3541                           
  3542                           ;semaphore.c: 28: s->queue.task[pos] = task_running;
  3543                           ;stkvar	sem_wait@pos @ sp[(-2)+0]
  3544  00110C  0EFE               	movlw	-2
  3545  00110E  CFE3 F06B          	movff	plusw1,btemp+10
  3546  001112  0EFF               	movlw	-1
  3547  001114  CFE3 F06C          	movff	plusw1,btemp+11
  3548  001118  90D8               	bcf	status,0,c
  3549  00111A  346B               	rlcf	btemp+10,w,c
  3550  00111C  6E62               	movwf	btemp+1,c
  3551  00111E  346C               	rlcf	btemp+11,w,c
  3552  001120  6E63               	movwf	btemp+2,c
  3553                           
  3554                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  3555  001122  0EFC               	movlw	-4
  3556  001124  CFE3 F06B          	movff	plusw1,btemp+10
  3557  001128  0EFD               	movlw	-3
  3558  00112A  CFE3 F06C          	movff	plusw1,btemp+11
  3559  00112E  0E02               	movlw	2
  3560  001130  246B               	addwf	btemp+10,w,c
  3561  001132  6ED9               	movwf	fsr2l,c
  3562  001134  0E00               	movlw	0
  3563  001136  206C               	addwfc	btemp+11,w,c
  3564  001138  6EDA               	movwf	fsr2h,c
  3565  00113A  CFDE F06B          	movff	postinc2,btemp+10
  3566  00113E  CFDD F06C          	movff	postdec2,btemp+11
  3567  001142  5062               	movf	btemp+1,w,c
  3568  001144  246B               	addwf	btemp+10,w,c
  3569  001146  6ED9               	movwf	fsr2l,c
  3570  001148  5063               	movf	btemp+2,w,c
  3571  00114A  206C               	addwfc	btemp+11,w,c
  3572  00114C  6EDA               	movwf	fsr2h,c
  3573  00114E  C017  FFDE         	movff	_task_running,postinc2
  3574  001152  C018  FFDD         	movff	_task_running+1,postdec2
  3575                           
  3576                           ;semaphore.c: 29: s->queue.size++;
  3577                           ;stkvar	sem_wait@s @ sp[(-2)+-2]
  3578  001156  0EFC               	movlw	-4
  3579  001158  CFE3 F062          	movff	plusw1,btemp+1
  3580  00115C  0EFD               	movlw	-3
  3581  00115E  CFE3 F063          	movff	plusw1,btemp+2
  3582  001162  0E04               	movlw	4
  3583  001164  2462               	addwf	btemp+1,w,c
  3584  001166  6ED9               	movwf	fsr2l,c
  3585  001168  0E00               	movlw	0
  3586  00116A  2063               	addwfc	btemp+2,w,c
  3587  00116C  6EDA               	movwf	fsr2h,c
  3588  00116E  2ADE               	incf	postinc2,f,c
  3589  001170  0E00               	movlw	0
  3590  001172  22DD               	addwfc	postdec2,f,c
  3591                           
  3592                           ;semaphore.c: 32: dispatcher(WAITING);
  3593  001174  0E04               	movlw	4
  3594  001176  6EE6               	movwf	postinc1,c
  3595  001178  EC02  F003         	call	_dispatcher	;wreg free
  3596  00117C                     l1964:
  3597                           
  3598                           ;semaphore.c: 33: }
  3599                           ;semaphore.c: 35: INTCONbits.GIE = 1;
  3600  00117C  8EF2               	bsf	intcon,7,c	;volatile
  3601                           
  3602                           ; _sem_wait: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3603  00117E  52E5               	movf	postdec1,f,c
  3604  001180  52E5               	movf	postdec1,f,c
  3605  001182  52E5               	movf	postdec1,f,c
  3606  001184  52E5               	movf	postdec1,f,c
  3607  001186  0012               	return		;funcret
  3608  001188                     __end_of_sem_wait:
  3609                           	opt stack 0
  3610                           tosu	equ	0xFFF
  3611                           tosh	equ	0xFFE
  3612                           tosl	equ	0xFFD
  3613                           stkptr	equ	0xFFC
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           intcon	equ	0xFF2
  3621                           postinc0	equ	0xFEE
  3622                           postdec0	equ	0xFED
  3623                           plusw0	equ	0xFEB
  3624                           fsr0h	equ	0xFEA
  3625                           fsr0l	equ	0xFE9
  3626                           wreg	equ	0xFE8
  3627                           postinc1	equ	0xFE6
  3628                           postdec1	equ	0xFE5
  3629                           plusw1	equ	0xFE3
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           bsr	equ	0xFE0
  3633                           indf2	equ	0xFDF
  3634                           postinc2	equ	0xFDE
  3635                           postdec2	equ	0xFDD
  3636                           plusw2	equ	0xFDB
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _sem_post *****************
  3642 ;; Defined at:
  3643 ;;		line 38 in file "semaphore.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  s               2  [STACK] PTR struct sem
  3646 ;;		 -> spista(8), 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  value           2  [STACK] unsigned int 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1  [STACK] void 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3658 ;;      Params:         0       0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    9
  3665 ;; This function calls:
  3666 ;;		___lwmod
  3667 ;;		___wmul
  3668 ;;		_dispatcher
  3669 ;; This function is called by:
  3670 ;;		_led_1
  3671 ;;		_led_2
  3672 ;;		_led_3
  3673 ;; This function uses a reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text19
  3677  000CB0                     __ptext19:
  3678                           	opt stack 0
  3679  000CB0                     _sem_post:
  3680                           	opt stack 0
  3681                           
  3682                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  3683  000CB0  52E6               	movf	postinc1,f,c
  3684  000CB2  52E6               	movf	postinc1,f,c
  3685                           
  3686                           ;semaphore.c: 40: INTCONbits.GIE = 0;
  3687                           
  3688                           ;incstack = 0
  3689  000CB4  9EF2               	bcf	intcon,7,c	;volatile
  3690                           
  3691                           ;semaphore.c: 42: s->contador++;
  3692                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3693  000CB6  0EFC               	movlw	-4
  3694  000CB8  CFE3 FFD9          	movff	plusw1,fsr2l
  3695  000CBC  0EFD               	movlw	-3
  3696  000CBE  CFE3 FFDA          	movff	plusw1,fsr2h
  3697  000CC2  2ADE               	incf	postinc2,f,c
  3698  000CC4  0E00               	movlw	0
  3699  000CC6  22DD               	addwfc	postdec2,f,c
  3700                           
  3701                           ;semaphore.c: 43: if (s->contador <= 0) {
  3702                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3703  000CC8  0EFC               	movlw	-4
  3704  000CCA  CFE3 FFD9          	movff	plusw1,fsr2l
  3705  000CCE  0EFD               	movlw	-3
  3706  000CD0  CFE3 FFDA          	movff	plusw1,fsr2h
  3707  000CD4  0E01               	movlw	1
  3708  000CD6  BEDB               	btfsc	plusw2,7,c
  3709  000CD8  D006               	goto	u80_20
  3710  000CDA  0E01               	movlw	1
  3711  000CDC  50DB               	movf	plusw2,w,c
  3712  000CDE  E102               	bnz	u80_21
  3713  000CE0  04DE               	decf	postinc2,w,c
  3714  000CE2  B0D8               	btfsc	status,0,c
  3715  000CE4                     u80_21:
  3716  000CE4  D089               	goto	l1982
  3717  000CE6                     u80_20:
  3718                           
  3719                           ;semaphore.c: 44: u_int value = s->queue.task[s->queue.first];
  3720                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3721  000CE6  0EFC               	movlw	-4
  3722  000CE8  CFE3 F062          	movff	plusw1,btemp+1
  3723  000CEC  0EFD               	movlw	-3
  3724  000CEE  CFE3 F063          	movff	plusw1,btemp+2
  3725  000CF2  0E06               	movlw	6
  3726  000CF4  2462               	addwf	btemp+1,w,c
  3727  000CF6  6ED9               	movwf	fsr2l,c
  3728  000CF8  0E00               	movlw	0
  3729  000CFA  2063               	addwfc	btemp+2,w,c
  3730  000CFC  6EDA               	movwf	fsr2h,c
  3731  000CFE  CFDE F06B          	movff	postinc2,btemp+10
  3732  000D02  CFDD F06C          	movff	postdec2,btemp+11
  3733  000D06  90D8               	bcf	status,0,c
  3734  000D08  346B               	rlcf	btemp+10,w,c
  3735  000D0A  6E62               	movwf	btemp+1,c
  3736  000D0C  346C               	rlcf	btemp+11,w,c
  3737  000D0E  6E63               	movwf	btemp+2,c
  3738                           
  3739                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3740  000D10  0EFC               	movlw	-4
  3741  000D12  CFE3 F06B          	movff	plusw1,btemp+10
  3742  000D16  0EFD               	movlw	-3
  3743  000D18  CFE3 F06C          	movff	plusw1,btemp+11
  3744  000D1C  0E02               	movlw	2
  3745  000D1E  246B               	addwf	btemp+10,w,c
  3746  000D20  6ED9               	movwf	fsr2l,c
  3747  000D22  0E00               	movlw	0
  3748  000D24  206C               	addwfc	btemp+11,w,c
  3749  000D26  6EDA               	movwf	fsr2h,c
  3750  000D28  CFDE F06B          	movff	postinc2,btemp+10
  3751  000D2C  CFDD F06C          	movff	postdec2,btemp+11
  3752  000D30  5062               	movf	btemp+1,w,c
  3753  000D32  246B               	addwf	btemp+10,w,c
  3754  000D34  6ED9               	movwf	fsr2l,c
  3755  000D36  5063               	movf	btemp+2,w,c
  3756  000D38  206C               	addwfc	btemp+11,w,c
  3757  000D3A  6EDA               	movwf	fsr2h,c
  3758  000D3C  CFDE F062          	movff	postinc2,btemp+1
  3759  000D40  CFDD F063          	movff	postdec2,btemp+2
  3760                           
  3761                           ;stkvar	sem_post@value @ sp[(-2)+0]
  3762  000D44  0EFE               	movlw	-2
  3763  000D46  C062  FFE3         	movff	btemp+1,plusw1
  3764  000D4A  0EFF               	movlw	-1
  3765  000D4C  C063  FFE3         	movff	btemp+2,plusw1
  3766                           
  3767                           ;semaphore.c: 45: s->queue.first = (s->queue.first + 1) % 10;
  3768  000D50  0E0A               	movlw	10
  3769  000D52  6EE6               	movwf	postinc1,c
  3770  000D54  0E00               	movlw	0
  3771  000D56  6EE6               	movwf	postinc1,c
  3772                           
  3773                           ;stkvar	sem_post@s @ sp[(-4)+-2]
  3774  000D58  0EFA               	movlw	-6
  3775  000D5A  CFE3 F062          	movff	plusw1,btemp+1
  3776  000D5E  0EFB               	movlw	-5
  3777  000D60  CFE3 F063          	movff	plusw1,btemp+2
  3778  000D64  0E06               	movlw	6
  3779  000D66  2462               	addwf	btemp+1,w,c
  3780  000D68  6ED9               	movwf	fsr2l,c
  3781  000D6A  0E00               	movlw	0
  3782  000D6C  2063               	addwfc	btemp+2,w,c
  3783  000D6E  6EDA               	movwf	fsr2h,c
  3784  000D70  CFDE F062          	movff	postinc2,btemp+1
  3785  000D74  CFDD F063          	movff	postdec2,btemp+2
  3786  000D78  0E01               	movlw	1
  3787  000D7A  2662               	addwf	btemp+1,f,c
  3788  000D7C  0E00               	movlw	0
  3789  000D7E  2263               	addwfc	btemp+2,f,c
  3790  000D80  C062  FFE6         	movff	btemp+1,postinc1
  3791  000D84  C063  FFE6         	movff	btemp+2,postinc1
  3792  000D88  EC24  F00A         	call	___lwmod	;wreg free
  3793                           
  3794                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3795  000D8C  0EFC               	movlw	-4
  3796  000D8E  CFE3 F06B          	movff	plusw1,btemp+10
  3797  000D92  0EFD               	movlw	-3
  3798  000D94  CFE3 F06C          	movff	plusw1,btemp+11
  3799  000D98  0E06               	movlw	6
  3800  000D9A  246B               	addwf	btemp+10,w,c
  3801  000D9C  6ED9               	movwf	fsr2l,c
  3802  000D9E  0E00               	movlw	0
  3803  000DA0  206C               	addwfc	btemp+11,w,c
  3804  000DA2  6EDA               	movwf	fsr2h,c
  3805  000DA4  C061  FFDE         	movff	btemp,postinc2
  3806  000DA8  C062  FFDD         	movff	btemp+1,postdec2
  3807                           
  3808                           ;semaphore.c: 46: s->queue.size--;
  3809                           ;stkvar	sem_post@s @ sp[(-2)+-2]
  3810  000DAC  0EFC               	movlw	-4
  3811  000DAE  CFE3 F062          	movff	plusw1,btemp+1
  3812  000DB2  0EFD               	movlw	-3
  3813  000DB4  CFE3 F063          	movff	plusw1,btemp+2
  3814  000DB8  0E04               	movlw	4
  3815  000DBA  2462               	addwf	btemp+1,w,c
  3816  000DBC  6ED9               	movwf	fsr2l,c
  3817  000DBE  0E00               	movlw	0
  3818  000DC0  2063               	addwfc	btemp+2,w,c
  3819  000DC2  6EDA               	movwf	fsr2h,c
  3820  000DC4  06DE               	decf	postinc2,f,c
  3821  000DC6  0E00               	movlw	0
  3822  000DC8  5ADD               	subwfb	postdec2,f,c
  3823                           
  3824                           ;semaphore.c: 47: F_APTOS[value].task_state = READY;
  3825  000DCA  0E11               	movlw	17
  3826  000DCC  6EE6               	movwf	postinc1,c
  3827  000DCE  0E00               	movlw	0
  3828  000DD0  6EE6               	movwf	postinc1,c
  3829                           
  3830                           ;stkvar	sem_post@value @ sp[(-4)+0]
  3831  000DD2  0EFC               	movlw	-4
  3832  000DD4  CFE3 FFE6          	movff	plusw1,postinc1
  3833  000DD8  CFE3 FFE6          	movff	plusw1,postinc1
  3834  000DDC  EC7F  F00B         	call	___wmul	;wreg free
  3835  000DE0  0E08               	movlw	low (_F_APTOS+8)
  3836  000DE2  2461               	addwf	btemp,w,c
  3837  000DE4  6ED9               	movwf	fsr2l,c
  3838  000DE6  0E01               	movlw	high (_F_APTOS+8)
  3839  000DE8  2062               	addwfc	btemp+1,w,c
  3840  000DEA  6EDA               	movwf	fsr2h,c
  3841  000DEC  0E01               	movlw	1
  3842  000DEE  6EDF               	movwf	indf2,c
  3843                           
  3844                           ;semaphore.c: 50: dispatcher(READY);
  3845  000DF0  0E01               	movlw	1
  3846  000DF2  6EE6               	movwf	postinc1,c
  3847  000DF4  EC02  F003         	call	_dispatcher	;wreg free
  3848  000DF8                     l1982:
  3849                           
  3850                           ;semaphore.c: 51: }
  3851                           ;semaphore.c: 53: INTCONbits.GIE = 1;
  3852  000DF8  8EF2               	bsf	intcon,7,c	;volatile
  3853                           
  3854                           ; _sem_post: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  3855  000DFA  52E5               	movf	postdec1,f,c
  3856  000DFC  52E5               	movf	postdec1,f,c
  3857  000DFE  52E5               	movf	postdec1,f,c
  3858  000E00  52E5               	movf	postdec1,f,c
  3859  000E02  0012               	return		;funcret
  3860  000E04                     __end_of_sem_post:
  3861                           	opt stack 0
  3862                           tosu	equ	0xFFF
  3863                           tosh	equ	0xFFE
  3864                           tosl	equ	0xFFD
  3865                           stkptr	equ	0xFFC
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           postinc0	equ	0xFEE
  3874                           postdec0	equ	0xFED
  3875                           plusw0	equ	0xFEB
  3876                           fsr0h	equ	0xFEA
  3877                           fsr0l	equ	0xFE9
  3878                           wreg	equ	0xFE8
  3879                           postinc1	equ	0xFE6
  3880                           postdec1	equ	0xFE5
  3881                           plusw1	equ	0xFE3
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           bsr	equ	0xFE0
  3885                           indf2	equ	0xFDF
  3886                           postinc2	equ	0xFDE
  3887                           postdec2	equ	0xFDD
  3888                           plusw2	equ	0xFDB
  3889                           fsr2h	equ	0xFDA
  3890                           fsr2l	equ	0xFD9
  3891                           status	equ	0xFD8
  3892                           
  3893 ;; *************** function _led_2 *****************
  3894 ;; Defined at:
  3895 ;;		line 101 in file "tasks.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1  [STACK] void 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3909 ;;      Params:         0       0       0       0       0       0       0
  3910 ;;      Locals:         0       0       0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0
  3912 ;;      Totals:         0       0       0       0       0       0       0
  3913 ;;Total ram usage:        0 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:   10
  3916 ;; This function calls:
  3917 ;;		_delay
  3918 ;;		_sem_post
  3919 ;;		_sem_wait
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text20
  3926  001826                     __ptext20:
  3927                           	opt stack 0
  3928  001826                     _led_2:
  3929                           	opt stack 17
  3930                           
  3931                           ;tasks.c: 104: PORTDbits.RD5 = 0;
  3932                           
  3933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  3934                           ;incstack = 0
  3935  001826  9A83               	bcf	3971,5,c	;volatile
  3936                           
  3937                           ;tasks.c: 105: PORTDbits.RD6 = 0;
  3938  001828  9C83               	bcf	3971,6,c	;volatile
  3939                           
  3940                           ;tasks.c: 106: PORTDbits.RD4 = 0;
  3941  00182A  9883               	bcf	3971,4,c	;volatile
  3942                           
  3943                           ;tasks.c: 107: PORTDbits.RD1 = 0;
  3944  00182C  9283               	bcf	3971,1,c	;volatile
  3945  00182E                     l185:
  3946                           
  3947                           ;tasks.c: 110: {
  3948                           ;tasks.c: 112: PORTDbits.RD5 = 1;
  3949  00182E  8A83               	bsf	3971,5,c	;volatile
  3950                           
  3951                           ;tasks.c: 114: delay(6000);
  3952  001830  0E70               	movlw	112
  3953  001832  6EE6               	movwf	postinc1,c
  3954  001834  0E17               	movlw	23
  3955  001836  6EE6               	movwf	postinc1,c
  3956  001838  ECAB  F00D         	call	_delay	;wreg free
  3957                           
  3958                           ;tasks.c: 116: sem_wait(&spista);
  3959  00183C  0E2F               	movlw	low _spista
  3960  00183E  6EE6               	movwf	postinc1,c
  3961  001840  0E00               	movlw	high _spista
  3962  001842  6EE6               	movwf	postinc1,c
  3963  001844  EC3D  F008         	call	_sem_wait	;wreg free
  3964                           
  3965                           ;tasks.c: 118: PORTDbits.RD5 = 0;
  3966  001848  9A83               	bcf	3971,5,c	;volatile
  3967                           
  3968                           ;tasks.c: 120: PORTDbits.RD6 = 1;
  3969  00184A  8C83               	bsf	3971,6,c	;volatile
  3970                           
  3971                           ;tasks.c: 122: delay(6000);
  3972  00184C  0E70               	movlw	112
  3973  00184E  6EE6               	movwf	postinc1,c
  3974  001850  0E17               	movlw	23
  3975  001852  6EE6               	movwf	postinc1,c
  3976  001854  ECAB  F00D         	call	_delay	;wreg free
  3977                           
  3978                           ;tasks.c: 125: PORTDbits.RD6 = 0;
  3979  001858  9C83               	bcf	3971,6,c	;volatile
  3980                           
  3981                           ;tasks.c: 128: sem_post(&spista);
  3982  00185A  0E2F               	movlw	low _spista
  3983  00185C  6EE6               	movwf	postinc1,c
  3984  00185E  0E00               	movlw	high _spista
  3985  001860  6EE6               	movwf	postinc1,c
  3986  001862  EC58  F006         	call	_sem_post	;wreg free
  3987                           
  3988                           ;tasks.c: 129: delay(300);
  3989  001866  0E2C               	movlw	44
  3990  001868  6EE6               	movwf	postinc1,c
  3991  00186A  0E01               	movlw	1
  3992  00186C  6EE6               	movwf	postinc1,c
  3993  00186E  ECAB  F00D         	call	_delay	;wreg free
  3994                           
  3995                           ;tasks.c: 131: PORTDbits.RD1 = 1;
  3996  001872  8283               	bsf	3971,1,c	;volatile
  3997                           
  3998                           ;tasks.c: 132: delay(6000);
  3999  001874  0E70               	movlw	112
  4000  001876  6EE6               	movwf	postinc1,c
  4001  001878  0E17               	movlw	23
  4002  00187A  6EE6               	movwf	postinc1,c
  4003  00187C  ECAB  F00D         	call	_delay	;wreg free
  4004                           
  4005                           ;tasks.c: 134: sem_wait(&spista);
  4006  001880  0E2F               	movlw	low _spista
  4007  001882  6EE6               	movwf	postinc1,c
  4008  001884  0E00               	movlw	high _spista
  4009  001886  6EE6               	movwf	postinc1,c
  4010  001888  EC3D  F008         	call	_sem_wait	;wreg free
  4011                           
  4012                           ;tasks.c: 136: PORTDbits.RD1 = 0;
  4013  00188C  9283               	bcf	3971,1,c	;volatile
  4014                           
  4015                           ;tasks.c: 138: PORTDbits.RD4 = 1;
  4016  00188E  8883               	bsf	3971,4,c	;volatile
  4017                           
  4018                           ;tasks.c: 140: delay(6000);
  4019  001890  0E70               	movlw	112
  4020  001892  6EE6               	movwf	postinc1,c
  4021  001894  0E17               	movlw	23
  4022  001896  6EE6               	movwf	postinc1,c
  4023  001898  ECAB  F00D         	call	_delay	;wreg free
  4024                           
  4025                           ;tasks.c: 142: PORTDbits.RD4 = 0;
  4026  00189C  9883               	bcf	3971,4,c	;volatile
  4027                           
  4028                           ;tasks.c: 144: sem_post(&spista);
  4029  00189E  0E2F               	movlw	low _spista
  4030  0018A0  6EE6               	movwf	postinc1,c
  4031  0018A2  0E00               	movlw	high _spista
  4032  0018A4  6EE6               	movwf	postinc1,c
  4033  0018A6  EC58  F006         	call	_sem_post	;wreg free
  4034  0018AA  D7C1               	goto	l185
  4035  0018AC                     __end_of_led_2:
  4036                           	opt stack 0
  4037                           tosu	equ	0xFFF
  4038                           tosh	equ	0xFFE
  4039                           tosl	equ	0xFFD
  4040                           stkptr	equ	0xFFC
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           postdec0	equ	0xFED
  4050                           plusw0	equ	0xFEB
  4051                           fsr0h	equ	0xFEA
  4052                           fsr0l	equ	0xFE9
  4053                           wreg	equ	0xFE8
  4054                           postinc1	equ	0xFE6
  4055                           postdec1	equ	0xFE5
  4056                           plusw1	equ	0xFE3
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           bsr	equ	0xFE0
  4060                           indf2	equ	0xFDF
  4061                           postinc2	equ	0xFDE
  4062                           postdec2	equ	0xFDD
  4063                           plusw2	equ	0xFDB
  4064                           fsr2h	equ	0xFDA
  4065                           fsr2l	equ	0xFD9
  4066                           status	equ	0xFD8
  4067                           
  4068 ;; *************** function _led_3 *****************
  4069 ;; Defined at:
  4070 ;;		line 151 in file "tasks.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1  [STACK] void 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4084 ;;      Params:         0       0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:   10
  4091 ;; This function calls:
  4092 ;;		_delay
  4093 ;;		_sem_post
  4094 ;;		_sem_wait
  4095 ;; This function is called by:
  4096 ;;		_main
  4097 ;; This function uses a reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text21
  4101  001928                     __ptext21:
  4102                           	opt stack 0
  4103  001928                     _led_3:
  4104                           	opt stack 17
  4105                           
  4106                           ;tasks.c: 154: PORTDbits.RD7 = 0;
  4107                           
  4108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4109                           ;incstack = 0
  4110  001928  9E83               	bcf	3971,7,c	;volatile
  4111                           
  4112                           ;tasks.c: 155: PORTDbits.RD6 = 0;
  4113  00192A  9C83               	bcf	3971,6,c	;volatile
  4114                           
  4115                           ;tasks.c: 156: PORTDbits.RD4 = 0;
  4116  00192C  9883               	bcf	3971,4,c	;volatile
  4117                           
  4118                           ;tasks.c: 157: PORTDbits.RD2 = 0;
  4119  00192E  9483               	bcf	3971,2,c	;volatile
  4120  001930                     l191:
  4121                           
  4122                           ;tasks.c: 161: PORTDbits.RD7 = 1;
  4123  001930  8E83               	bsf	3971,7,c	;volatile
  4124                           
  4125                           ;tasks.c: 163: delay(6000);
  4126  001932  0E70               	movlw	112
  4127  001934  6EE6               	movwf	postinc1,c
  4128  001936  0E17               	movlw	23
  4129  001938  6EE6               	movwf	postinc1,c
  4130  00193A  ECAB  F00D         	call	_delay	;wreg free
  4131                           
  4132                           ;tasks.c: 165: sem_wait(&spista);
  4133  00193E  0E2F               	movlw	low _spista
  4134  001940  6EE6               	movwf	postinc1,c
  4135  001942  0E00               	movlw	high _spista
  4136  001944  6EE6               	movwf	postinc1,c
  4137  001946  EC3D  F008         	call	_sem_wait	;wreg free
  4138                           
  4139                           ;tasks.c: 167: PORTDbits.RD7 = 0;
  4140  00194A  9E83               	bcf	3971,7,c	;volatile
  4141                           
  4142                           ;tasks.c: 169: PORTDbits.RD6 = 1;
  4143  00194C  8C83               	bsf	3971,6,c	;volatile
  4144                           
  4145                           ;tasks.c: 171: delay(6000);
  4146  00194E  0E70               	movlw	112
  4147  001950  6EE6               	movwf	postinc1,c
  4148  001952  0E17               	movlw	23
  4149  001954  6EE6               	movwf	postinc1,c
  4150  001956  ECAB  F00D         	call	_delay	;wreg free
  4151                           
  4152                           ;tasks.c: 174: PORTDbits.RD6 = 0;
  4153  00195A  9C83               	bcf	3971,6,c	;volatile
  4154                           
  4155                           ;tasks.c: 177: sem_post(&spista);
  4156  00195C  0E2F               	movlw	low _spista
  4157  00195E  6EE6               	movwf	postinc1,c
  4158  001960  0E00               	movlw	high _spista
  4159  001962  6EE6               	movwf	postinc1,c
  4160  001964  EC58  F006         	call	_sem_post	;wreg free
  4161                           
  4162                           ;tasks.c: 181: PORTDbits.RD2 = 1;
  4163  001968  8483               	bsf	3971,2,c	;volatile
  4164                           
  4165                           ;tasks.c: 183: delay(6000);
  4166  00196A  0E70               	movlw	112
  4167  00196C  6EE6               	movwf	postinc1,c
  4168  00196E  0E17               	movlw	23
  4169  001970  6EE6               	movwf	postinc1,c
  4170  001972  ECAB  F00D         	call	_delay	;wreg free
  4171                           
  4172                           ;tasks.c: 187: sem_wait(&spista);
  4173  001976  0E2F               	movlw	low _spista
  4174  001978  6EE6               	movwf	postinc1,c
  4175  00197A  0E00               	movlw	high _spista
  4176  00197C  6EE6               	movwf	postinc1,c
  4177  00197E  EC3D  F008         	call	_sem_wait	;wreg free
  4178                           
  4179                           ;tasks.c: 189: PORTDbits.RD2 = 0;
  4180  001982  9483               	bcf	3971,2,c	;volatile
  4181                           
  4182                           ;tasks.c: 192: PORTDbits.RD4 = 1;
  4183  001984  8883               	bsf	3971,4,c	;volatile
  4184                           
  4185                           ;tasks.c: 194: delay(6000);
  4186  001986  0E70               	movlw	112
  4187  001988  6EE6               	movwf	postinc1,c
  4188  00198A  0E17               	movlw	23
  4189  00198C  6EE6               	movwf	postinc1,c
  4190  00198E  ECAB  F00D         	call	_delay	;wreg free
  4191                           
  4192                           ;tasks.c: 196: PORTDbits.RD4 = 0;
  4193  001992  9883               	bcf	3971,4,c	;volatile
  4194                           
  4195                           ;tasks.c: 198: sem_post(&spista);
  4196  001994  0E2F               	movlw	low _spista
  4197  001996  6EE6               	movwf	postinc1,c
  4198  001998  0E00               	movlw	high _spista
  4199  00199A  6EE6               	movwf	postinc1,c
  4200  00199C  EC58  F006         	call	_sem_post	;wreg free
  4201  0019A0  D7C7               	goto	l191
  4202  0019A2                     __end_of_led_3:
  4203                           	opt stack 0
  4204                           tosu	equ	0xFFF
  4205                           tosh	equ	0xFFE
  4206                           tosl	equ	0xFFD
  4207                           stkptr	equ	0xFFC
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           intcon	equ	0xFF2
  4215                           postinc0	equ	0xFEE
  4216                           postdec0	equ	0xFED
  4217                           plusw0	equ	0xFEB
  4218                           fsr0h	equ	0xFEA
  4219                           fsr0l	equ	0xFE9
  4220                           wreg	equ	0xFE8
  4221                           postinc1	equ	0xFE6
  4222                           postdec1	equ	0xFE5
  4223                           plusw1	equ	0xFE3
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           bsr	equ	0xFE0
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           plusw2	equ	0xFDB
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _dianoite *****************
  4236 ;; Defined at:
  4237 ;;		line 208 in file "tasks.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1  [STACK] void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:         0       0       0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0
  4254 ;;      Totals:         0       0       0       0       0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   10
  4258 ;; This function calls:
  4259 ;;		_delay
  4260 ;;		_pipe_write
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text22
  4267  001BBC                     __ptext22:
  4268                           	opt stack 0
  4269  001BBC                     _dianoite:
  4270                           	opt stack 17
  4271                           
  4272                           ;tasks.c: 212: {
  4273                           ;tasks.c: 213: pipe_write(&testL, 't');
  4274                           
  4275                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4276                           ;incstack = 0
  4277                           ;tasks.c: 211: while(1)
  4278  001BBC  0E74               	movlw	116
  4279  001BBE  6EE6               	movwf	postinc1,c
  4280  001BC0  0E1B               	movlw	low _testL
  4281  001BC2  6EE6               	movwf	postinc1,c
  4282  001BC4  0E00               	movlw	high _testL
  4283  001BC6  6EE6               	movwf	postinc1,c
  4284  001BC8  EC02  F007         	call	_pipe_write	;wreg free
  4285                           
  4286                           ;tasks.c: 215: delay(1000);
  4287  001BCC  0EE8               	movlw	232
  4288  001BCE  6EE6               	movwf	postinc1,c
  4289  001BD0  0E03               	movlw	3
  4290  001BD2  6EE6               	movwf	postinc1,c
  4291  001BD4  ECAB  F00D         	call	_delay	;wreg free
  4292  001BD8  D7F1               	goto	_dianoite
  4293  001BDA                     __end_of_dianoite:
  4294                           	opt stack 0
  4295                           tosu	equ	0xFFF
  4296                           tosh	equ	0xFFE
  4297                           tosl	equ	0xFFD
  4298                           stkptr	equ	0xFFC
  4299                           tblptru	equ	0xFF8
  4300                           tblptrh	equ	0xFF7
  4301                           tblptrl	equ	0xFF6
  4302                           tablat	equ	0xFF5
  4303                           prodh	equ	0xFF4
  4304                           prodl	equ	0xFF3
  4305                           intcon	equ	0xFF2
  4306                           postinc0	equ	0xFEE
  4307                           postdec0	equ	0xFED
  4308                           plusw0	equ	0xFEB
  4309                           fsr0h	equ	0xFEA
  4310                           fsr0l	equ	0xFE9
  4311                           wreg	equ	0xFE8
  4312                           postinc1	equ	0xFE6
  4313                           postdec1	equ	0xFE5
  4314                           plusw1	equ	0xFE3
  4315                           fsr1h	equ	0xFE2
  4316                           fsr1l	equ	0xFE1
  4317                           bsr	equ	0xFE0
  4318                           indf2	equ	0xFDF
  4319                           postinc2	equ	0xFDE
  4320                           postdec2	equ	0xFDD
  4321                           plusw2	equ	0xFDB
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function _pipe_write *****************
  4327 ;; Defined at:
  4328 ;;		line 121 in file "pipe.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  pipe            2  [STACK] PTR struct pipe
  4331 ;;		 -> testL(12), 
  4332 ;;  msg             1  [STACK] unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1  [STACK] void 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4344 ;;      Params:         0       0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    9
  4351 ;; This function calls:
  4352 ;;		___lwmod
  4353 ;;		_dispatcher
  4354 ;;		_libera_processos
  4355 ;; This function is called by:
  4356 ;;		_dianoite
  4357 ;; This function uses a reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text23
  4361  000E04                     __ptext23:
  4362                           	opt stack 0
  4363  000E04                     _pipe_write:
  4364                           	opt stack 17
  4365                           
  4366                           ;pipe.c: 123: INTCONbits.GIE = 0;
  4367                           
  4368                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
  4369                           ;incstack = 0
  4370  000E04  9EF2               	bcf	intcon,7,c	;volatile
  4371                           
  4372                           ;pipe.c: 125: if (pipe->p_count == pipe->p_size) {
  4373                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4374  000E06  0EFE               	movlw	-2
  4375  000E08  CFE3 F062          	movff	plusw1,btemp+1
  4376  000E0C  0EFF               	movlw	-1
  4377  000E0E  CFE3 F063          	movff	plusw1,btemp+2
  4378  000E12  0E08               	movlw	8
  4379  000E14  2462               	addwf	btemp+1,w,c
  4380  000E16  6ED9               	movwf	fsr2l,c
  4381  000E18  0E00               	movlw	0
  4382  000E1A  2063               	addwfc	btemp+2,w,c
  4383  000E1C  6EDA               	movwf	fsr2h,c
  4384                           
  4385                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4386  000E1E  0EFE               	movlw	-2
  4387  000E20  CFE3 F062          	movff	plusw1,btemp+1
  4388  000E24  0EFF               	movlw	-1
  4389  000E26  CFE3 F063          	movff	plusw1,btemp+2
  4390  000E2A  0E0A               	movlw	10
  4391  000E2C  2462               	addwf	btemp+1,w,c
  4392  000E2E  6EE9               	movwf	fsr0l,c
  4393  000E30  0E00               	movlw	0
  4394  000E32  2063               	addwfc	btemp+2,w,c
  4395  000E34  6EEA               	movwf	fsr0h,c
  4396  000E36  50DE               	movf	postinc2,w,c
  4397  000E38  18EE               	xorwf	postinc0,w,c
  4398  000E3A  E109               	bnz	l1990
  4399  000E3C  50DE               	movf	postinc2,w,c
  4400  000E3E  18EE               	xorwf	postinc0,w,c
  4401  000E40  A4D8               	btfss	status,2,c
  4402  000E42  D005               	goto	l1990
  4403                           
  4404                           ;pipe.c: 128: dispatcher(WAITING_PIPE);
  4405  000E44  0E05               	movlw	5
  4406  000E46  6EE6               	movwf	postinc1,c
  4407  000E48  EC02  F003         	call	_dispatcher	;wreg free
  4408                           
  4409                           ;pipe.c: 129: }
  4410  000E4C  D078               	goto	l1998
  4411  000E4E                     l1990:
  4412                           
  4413                           ;pipe.c: 130: else {
  4414                           ;pipe.c: 131: pipe->p_msg_queue[pipe->p_pos_write] = msg;
  4415                           ;stkvar	pipe_write@msg @ sp[(0)+-3]
  4416                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4417  000E4E  0EFE               	movlw	-2
  4418  000E50  CFE3 F062          	movff	plusw1,btemp+1
  4419  000E54  0EFF               	movlw	-1
  4420  000E56  CFE3 F063          	movff	plusw1,btemp+2
  4421  000E5A  0E04               	movlw	4
  4422  000E5C  2462               	addwf	btemp+1,w,c
  4423  000E5E  6ED9               	movwf	fsr2l,c
  4424  000E60  0E00               	movlw	0
  4425  000E62  2063               	addwfc	btemp+2,w,c
  4426  000E64  6EDA               	movwf	fsr2h,c
  4427  000E66  CFDE F062          	movff	postinc2,btemp+1
  4428  000E6A  CFDD F063          	movff	postdec2,btemp+2
  4429                           
  4430                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4431  000E6E  0EFE               	movlw	-2
  4432  000E70  CFE3 F06B          	movff	plusw1,btemp+10
  4433  000E74  0EFF               	movlw	-1
  4434  000E76  CFE3 F06C          	movff	plusw1,btemp+11
  4435  000E7A  0E02               	movlw	2
  4436  000E7C  246B               	addwf	btemp+10,w,c
  4437  000E7E  6ED9               	movwf	fsr2l,c
  4438  000E80  0E00               	movlw	0
  4439  000E82  206C               	addwfc	btemp+11,w,c
  4440  000E84  6EDA               	movwf	fsr2h,c
  4441  000E86  CFDE F06B          	movff	postinc2,btemp+10
  4442  000E8A  CFDD F06C          	movff	postdec2,btemp+11
  4443  000E8E  5062               	movf	btemp+1,w,c
  4444  000E90  246B               	addwf	btemp+10,w,c
  4445  000E92  6ED9               	movwf	fsr2l,c
  4446  000E94  5063               	movf	btemp+2,w,c
  4447  000E96  206C               	addwfc	btemp+11,w,c
  4448  000E98  6EDA               	movwf	fsr2h,c
  4449  000E9A  0EFD               	movlw	-3
  4450  000E9C  CFE3 FFDF          	movff	plusw1,indf2
  4451                           
  4452                           ;pipe.c: 132: pipe->p_pos_write = (pipe->p_pos_write + 1) % pipe->p_size;
  4453                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4454  000EA0  0EFE               	movlw	-2
  4455  000EA2  CFE3 F062          	movff	plusw1,btemp+1
  4456  000EA6  0EFF               	movlw	-1
  4457  000EA8  CFE3 F063          	movff	plusw1,btemp+2
  4458  000EAC  0E08               	movlw	8
  4459  000EAE  2462               	addwf	btemp+1,w,c
  4460  000EB0  6ED9               	movwf	fsr2l,c
  4461  000EB2  0E00               	movlw	0
  4462  000EB4  2063               	addwfc	btemp+2,w,c
  4463  000EB6  6EDA               	movwf	fsr2h,c
  4464  000EB8  CFDE F062          	movff	postinc2,btemp+1
  4465  000EBC  CFDD F063          	movff	postdec2,btemp+2
  4466  000EC0  C062  FFE6         	movff	btemp+1,postinc1
  4467  000EC4  C063  FFE6         	movff	btemp+2,postinc1
  4468                           
  4469                           ;stkvar	pipe_write@pipe @ sp[(-2)+-2]
  4470  000EC8  0EFC               	movlw	-4
  4471  000ECA  CFE3 F062          	movff	plusw1,btemp+1
  4472  000ECE  0EFD               	movlw	-3
  4473  000ED0  CFE3 F063          	movff	plusw1,btemp+2
  4474  000ED4  0E04               	movlw	4
  4475  000ED6  2462               	addwf	btemp+1,w,c
  4476  000ED8  6ED9               	movwf	fsr2l,c
  4477  000EDA  0E00               	movlw	0
  4478  000EDC  2063               	addwfc	btemp+2,w,c
  4479  000EDE  6EDA               	movwf	fsr2h,c
  4480  000EE0  CFDE F062          	movff	postinc2,btemp+1
  4481  000EE4  CFDD F063          	movff	postdec2,btemp+2
  4482  000EE8  0E01               	movlw	1
  4483  000EEA  2662               	addwf	btemp+1,f,c
  4484  000EEC  0E00               	movlw	0
  4485  000EEE  2263               	addwfc	btemp+2,f,c
  4486  000EF0  C062  FFE6         	movff	btemp+1,postinc1
  4487  000EF4  C063  FFE6         	movff	btemp+2,postinc1
  4488  000EF8  EC24  F00A         	call	___lwmod	;wreg free
  4489                           
  4490                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4491  000EFC  0EFE               	movlw	-2
  4492  000EFE  CFE3 F06B          	movff	plusw1,btemp+10
  4493  000F02  0EFF               	movlw	-1
  4494  000F04  CFE3 F06C          	movff	plusw1,btemp+11
  4495  000F08  0E04               	movlw	4
  4496  000F0A  246B               	addwf	btemp+10,w,c
  4497  000F0C  6ED9               	movwf	fsr2l,c
  4498  000F0E  0E00               	movlw	0
  4499  000F10  206C               	addwfc	btemp+11,w,c
  4500  000F12  6EDA               	movwf	fsr2h,c
  4501  000F14  C061  FFDE         	movff	btemp,postinc2
  4502  000F18  C062  FFDD         	movff	btemp+1,postdec2
  4503                           
  4504                           ;pipe.c: 133: pipe->p_count++;
  4505                           ;stkvar	pipe_write@pipe @ sp[(0)+-2]
  4506  000F1C  0EFE               	movlw	-2
  4507  000F1E  CFE3 F062          	movff	plusw1,btemp+1
  4508  000F22  0EFF               	movlw	-1
  4509  000F24  CFE3 F063          	movff	plusw1,btemp+2
  4510  000F28  0E0A               	movlw	10
  4511  000F2A  2462               	addwf	btemp+1,w,c
  4512  000F2C  6ED9               	movwf	fsr2l,c
  4513  000F2E  0E00               	movlw	0
  4514  000F30  2063               	addwfc	btemp+2,w,c
  4515  000F32  6EDA               	movwf	fsr2h,c
  4516  000F34  2ADE               	incf	postinc2,f,c
  4517  000F36  0E00               	movlw	0
  4518  000F38  22DD               	addwfc	postdec2,f,c
  4519                           
  4520                           ;pipe.c: 135: libera_processos();
  4521  000F3A  EC32  F00B         	call	_libera_processos	;wreg free
  4522  000F3E                     l1998:
  4523                           
  4524                           ;pipe.c: 136: }
  4525                           ;pipe.c: 138: INTCONbits.GIE = 1;
  4526  000F3E  8EF2               	bsf	intcon,7,c	;volatile
  4527                           
  4528                           ; _pipe_write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4529  000F40  52E5               	movf	postdec1,f,c
  4530  000F42  52E5               	movf	postdec1,f,c
  4531  000F44  52E5               	movf	postdec1,f,c
  4532  000F46  0012               	return		;funcret
  4533  000F48                     __end_of_pipe_write:
  4534                           	opt stack 0
  4535                           tosu	equ	0xFFF
  4536                           tosh	equ	0xFFE
  4537                           tosl	equ	0xFFD
  4538                           stkptr	equ	0xFFC
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           postinc0	equ	0xFEE
  4547                           postdec0	equ	0xFED
  4548                           plusw0	equ	0xFEB
  4549                           fsr0h	equ	0xFEA
  4550                           fsr0l	equ	0xFE9
  4551                           wreg	equ	0xFE8
  4552                           postinc1	equ	0xFE6
  4553                           postdec1	equ	0xFE5
  4554                           plusw1	equ	0xFE3
  4555                           fsr1h	equ	0xFE2
  4556                           fsr1l	equ	0xFE1
  4557                           bsr	equ	0xFE0
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           plusw2	equ	0xFDB
  4562                           fsr2h	equ	0xFDA
  4563                           fsr2l	equ	0xFD9
  4564                           status	equ	0xFD8
  4565                           
  4566 ;; *************** function _libera_processos *****************
  4567 ;; Defined at:
  4568 ;;		line 146 in file "pipe.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  i               2  [STACK] int 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1  [STACK] void 
  4575 ;; Registers used:
  4576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4582 ;;      Params:         0       0       0       0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0
  4585 ;;      Totals:         0       0       0       0       0       0       0
  4586 ;;Total ram usage:        0 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    6
  4589 ;; This function calls:
  4590 ;;		___wmul
  4591 ;; This function is called by:
  4592 ;;		_pipe_read
  4593 ;;		_pipe_write
  4594 ;; This function uses a reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text24
  4598  001664                     __ptext24:
  4599                           	opt stack 0
  4600  001664                     _libera_processos:
  4601                           	opt stack 0
  4602                           
  4603                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4604  001664  52E6               	movf	postinc1,f,c
  4605  001666  52E6               	movf	postinc1,f,c
  4606                           
  4607                           ;pipe.c: 148: int i;
  4608                           ;pipe.c: 149: for (i = 0; i < tasks_installed; i++)
  4609                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4610                           
  4611                           ;incstack = 0
  4612  001668  0EFE               	movlw	-2
  4613  00166A  6AE3               	clrf	plusw1,c
  4614  00166C  0EFF               	movlw	-1
  4615  00166E  6AE3               	clrf	plusw1,c
  4616  001670  D037               	goto	l1848
  4617  001672                     l1842:
  4618                           
  4619                           ;pipe.c: 150: if (F_APTOS[i].task_state == WAITING_PIPE)
  4620  001672  0E11               	movlw	17
  4621  001674  6EE6               	movwf	postinc1,c
  4622  001676  0E00               	movlw	0
  4623  001678  6EE6               	movwf	postinc1,c
  4624                           
  4625                           ;stkvar	libera_processos@i @ sp[(-4)+0]
  4626  00167A  0EFC               	movlw	-4
  4627  00167C  CFE3 FFE6          	movff	plusw1,postinc1
  4628  001680  CFE3 FFE6          	movff	plusw1,postinc1
  4629  001684  EC7F  F00B         	call	___wmul	;wreg free
  4630  001688  0E08               	movlw	low (_F_APTOS+8)
  4631  00168A  2461               	addwf	btemp,w,c
  4632  00168C  6ED9               	movwf	fsr2l,c
  4633  00168E  0E01               	movlw	high (_F_APTOS+8)
  4634  001690  2062               	addwfc	btemp+1,w,c
  4635  001692  6EDA               	movwf	fsr2h,c
  4636  001694  0E05               	movlw	5
  4637  001696  18DE               	xorwf	postinc2,w,c
  4638  001698  A4D8               	btfss	status,2,c
  4639  00169A  D013               	goto	l1846
  4640                           
  4641                           ;pipe.c: 151: F_APTOS[i].task_state = READY;
  4642  00169C  0E11               	movlw	17
  4643  00169E  6EE6               	movwf	postinc1,c
  4644  0016A0  0E00               	movlw	0
  4645  0016A2  6EE6               	movwf	postinc1,c
  4646                           
  4647                           ;stkvar	libera_processos@i @ sp[(-4)+0]
  4648  0016A4  0EFC               	movlw	-4
  4649  0016A6  CFE3 FFE6          	movff	plusw1,postinc1
  4650  0016AA  CFE3 FFE6          	movff	plusw1,postinc1
  4651  0016AE  EC7F  F00B         	call	___wmul	;wreg free
  4652  0016B2  0E08               	movlw	low (_F_APTOS+8)
  4653  0016B4  2461               	addwf	btemp,w,c
  4654  0016B6  6ED9               	movwf	fsr2l,c
  4655  0016B8  0E01               	movlw	high (_F_APTOS+8)
  4656  0016BA  2062               	addwfc	btemp+1,w,c
  4657  0016BC  6EDA               	movwf	fsr2h,c
  4658  0016BE  0E01               	movlw	1
  4659  0016C0  6EDF               	movwf	indf2,c
  4660  0016C2                     l1846:
  4661                           
  4662                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4663  0016C2  0EFE               	movlw	-2
  4664  0016C4  50E3               	movf	plusw1,w,c
  4665  0016C6  0F01               	addlw	1
  4666  0016C8  6E61               	movwf	btemp,c
  4667  0016CA  0EFE               	movlw	-2
  4668  0016CC  C061  FFE3         	movff	btemp,plusw1
  4669  0016D0  6A61               	clrf	btemp,c
  4670  0016D2  0EFF               	movlw	-1
  4671  0016D4  50E3               	movf	plusw1,w,c
  4672  0016D6  2061               	addwfc	btemp,w,c
  4673  0016D8  6E61               	movwf	btemp,c
  4674  0016DA  0EFF               	movlw	-1
  4675  0016DC  C061  FFE3         	movff	btemp,plusw1
  4676  0016E0                     l1848:
  4677                           
  4678                           ;stkvar	libera_processos@i @ sp[(-2)+0]
  4679  0016E0  0EFE               	movlw	-2
  4680  0016E2  CFE3 F061          	movff	plusw1,btemp
  4681  0016E6  5019               	movf	_tasks_installed,w,c
  4682  0016E8  5C61               	subwf	btemp,w,c
  4683  0016EA  0EFF               	movlw	-1
  4684  0016EC  CFE3 F061          	movff	plusw1,btemp
  4685  0016F0  501A               	movf	_tasks_installed+1,w,c
  4686  0016F2  5861               	subwfb	btemp,w,c
  4687  0016F4  A0D8               	btfss	status,0,c
  4688  0016F6  D7BD               	goto	l1842
  4689                           
  4690                           ; _libera_processos: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4691  0016F8  52E5               	movf	postdec1,f,c
  4692  0016FA  52E5               	movf	postdec1,f,c
  4693  0016FC  0012               	return		;funcret
  4694  0016FE                     __end_of_libera_processos:
  4695                           	opt stack 0
  4696                           tosu	equ	0xFFF
  4697                           tosh	equ	0xFFE
  4698                           tosl	equ	0xFFD
  4699                           stkptr	equ	0xFFC
  4700                           tblptru	equ	0xFF8
  4701                           tblptrh	equ	0xFF7
  4702                           tblptrl	equ	0xFF6
  4703                           tablat	equ	0xFF5
  4704                           prodh	equ	0xFF4
  4705                           prodl	equ	0xFF3
  4706                           intcon	equ	0xFF2
  4707                           postinc0	equ	0xFEE
  4708                           postdec0	equ	0xFED
  4709                           plusw0	equ	0xFEB
  4710                           fsr0h	equ	0xFEA
  4711                           fsr0l	equ	0xFE9
  4712                           wreg	equ	0xFE8
  4713                           postinc1	equ	0xFE6
  4714                           postdec1	equ	0xFE5
  4715                           plusw1	equ	0xFE3
  4716                           fsr1h	equ	0xFE2
  4717                           fsr1l	equ	0xFE1
  4718                           bsr	equ	0xFE0
  4719                           indf2	equ	0xFDF
  4720                           postinc2	equ	0xFDE
  4721                           postdec2	equ	0xFDD
  4722                           plusw2	equ	0xFDB
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _acender *****************
  4728 ;; Defined at:
  4729 ;;		line 219 in file "tasks.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;		None
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;  dado            1  [STACK] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1  [STACK] void 
  4736 ;; Registers used:
  4737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4743 ;;      Params:         0       0       0       0       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0       0
  4746 ;;      Totals:         0       0       0       0       0       0       0
  4747 ;;Total ram usage:        0 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:   10
  4750 ;; This function calls:
  4751 ;;		_delay
  4752 ;;		_pipe_read
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text25
  4759  001AAC                     __ptext25:
  4760                           	opt stack 0
  4761  001AAC                     _acender:
  4762                           	opt stack 0
  4763                           
  4764                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4765  001AAC  52E6               	movf	postinc1,f,c
  4766                           
  4767                           ;tasks.c: 221: TRISCbits.RC5 = 0;
  4768                           
  4769                           ;incstack = 0
  4770  001AAE  9A94               	bcf	3988,5,c	;volatile
  4771                           
  4772                           ;tasks.c: 222: PORTCbits.RC5 = 0;
  4773  001AB0  9A82               	bcf	3970,5,c	;volatile
  4774                           
  4775                           ;tasks.c: 223: byte dado;
  4776                           ;tasks.c: 224: LATCbits.LATC5 =0;
  4777  001AB2  9A8B               	bcf	3979,5,c	;volatile
  4778  001AB4                     l2186:
  4779                           
  4780                           ;tasks.c: 227: {
  4781                           ;tasks.c: 228: pipe_read(&testL, &dado);
  4782                           ;stkvar	acender@dado @ sp[(-1)+0]
  4783  001AB4  0EFF               	movlw	255
  4784  001AB6  24E1               	addwf	fsr1l,w,c
  4785  001AB8  6EE6               	movwf	postinc1,c
  4786  001ABA  0EFF               	movlw	255
  4787  001ABC  20E2               	addwfc	fsr1h,w,c
  4788  001ABE  6EE6               	movwf	postinc1,c
  4789  001AC0  0E1B               	movlw	low _testL
  4790  001AC2  6EE6               	movwf	postinc1,c
  4791  001AC4  0E00               	movlw	high _testL
  4792  001AC6  6EE6               	movwf	postinc1,c
  4793  001AC8  ECA4  F007         	call	_pipe_read	;wreg free
  4794                           
  4795                           ;tasks.c: 230: if(dado == 't')
  4796                           ;stkvar	acender@dado @ sp[(-1)+0]
  4797  001ACC  0EFF               	movlw	-1
  4798  001ACE  CFE3 F061          	movff	plusw1,btemp
  4799  001AD2  0E74               	movlw	116
  4800  001AD4  1861               	xorwf	btemp,w,c
  4801  001AD6  A4D8               	btfss	status,2,c
  4802  001AD8  D7ED               	goto	l2186
  4803                           
  4804                           ;tasks.c: 231: {
  4805                           ;tasks.c: 233: PORTCbits.RC5 = ~LATCbits.LATC5;
  4806  001ADA  AA8B               	btfss	3979,5,c	;volatile
  4807  001ADC  D002               	goto	u89_20
  4808  001ADE  0E01               	movlw	1
  4809  001AE0  D001               	goto	u89_26
  4810  001AE2                     u89_20:
  4811  001AE2  0E00               	movlw	0
  4812  001AE4                     u89_26:
  4813  001AE4  0AFF               	xorlw	255
  4814  001AE6  6E6C               	movwf	btemp+11,c
  4815  001AE8  3A6C               	swapf	btemp+11,f,c
  4816  001AEA  466C               	rlncf	btemp+11,f,c
  4817  001AEC  5082               	movf	3970,w,c	;volatile
  4818  001AEE  186C               	xorwf	btemp+11,w,c
  4819  001AF0  0BDF               	andlw	-33
  4820  001AF2  186C               	xorwf	btemp+11,w,c
  4821  001AF4  6E82               	movwf	3970,c	;volatile
  4822                           
  4823                           ;tasks.c: 234: delay(1000);
  4824  001AF6  0EE8               	movlw	232
  4825  001AF8  6EE6               	movwf	postinc1,c
  4826  001AFA  0E03               	movlw	3
  4827  001AFC  6EE6               	movwf	postinc1,c
  4828  001AFE  ECAB  F00D         	call	_delay	;wreg free
  4829  001B02  D7D8               	goto	l2186
  4830  001B04                     __end_of_acender:
  4831                           	opt stack 0
  4832                           tosu	equ	0xFFF
  4833                           tosh	equ	0xFFE
  4834                           tosl	equ	0xFFD
  4835                           stkptr	equ	0xFFC
  4836                           tblptru	equ	0xFF8
  4837                           tblptrh	equ	0xFF7
  4838                           tblptrl	equ	0xFF6
  4839                           tablat	equ	0xFF5
  4840                           prodh	equ	0xFF4
  4841                           prodl	equ	0xFF3
  4842                           intcon	equ	0xFF2
  4843                           postinc0	equ	0xFEE
  4844                           postdec0	equ	0xFED
  4845                           plusw0	equ	0xFEB
  4846                           fsr0h	equ	0xFEA
  4847                           fsr0l	equ	0xFE9
  4848                           wreg	equ	0xFE8
  4849                           postinc1	equ	0xFE6
  4850                           postdec1	equ	0xFE5
  4851                           plusw1	equ	0xFE3
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           bsr	equ	0xFE0
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           plusw2	equ	0xFDB
  4859                           fsr2h	equ	0xFDA
  4860                           fsr2l	equ	0xFD9
  4861                           status	equ	0xFD8
  4862                           
  4863 ;; *************** function _pipe_read *****************
  4864 ;; Defined at:
  4865 ;;		line 101 in file "pipe.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  pipe            2  [STACK] PTR struct pipe
  4868 ;;		 -> testL(12), 
  4869 ;;  msg             2  [STACK] PTR unsigned char 
  4870 ;;		 -> acender@dado(1), 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1  [STACK] void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, prodl, prodh
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4882 ;;      Params:         0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    9
  4889 ;; This function calls:
  4890 ;;		___lwmod
  4891 ;;		_dispatcher
  4892 ;;		_libera_processos
  4893 ;; This function is called by:
  4894 ;;		_acender
  4895 ;; This function uses a reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text26
  4899  000F48                     __ptext26:
  4900                           	opt stack 0
  4901  000F48                     _pipe_read:
  4902                           	opt stack 17
  4903                           
  4904                           ;pipe.c: 103: INTCONbits.GIE = 0;
  4905                           
  4906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  4907                           ;incstack = 0
  4908  000F48  9EF2               	bcf	intcon,7,c	;volatile
  4909                           
  4910                           ;pipe.c: 105: if (pipe->p_count == 0) {
  4911                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  4912  000F4A  0EFE               	movlw	-2
  4913  000F4C  CFE3 F062          	movff	plusw1,btemp+1
  4914  000F50  0EFF               	movlw	-1
  4915  000F52  CFE3 F063          	movff	plusw1,btemp+2
  4916  000F56  0E0A               	movlw	10
  4917  000F58  2462               	addwf	btemp+1,w,c
  4918  000F5A  6ED9               	movwf	fsr2l,c
  4919  000F5C  0E00               	movlw	0
  4920  000F5E  2063               	addwfc	btemp+2,w,c
  4921  000F60  6EDA               	movwf	fsr2h,c
  4922  000F62  50DE               	movf	postinc2,w,c
  4923  000F64  10DE               	iorwf	postinc2,w,c
  4924  000F66  A4D8               	btfss	status,2,c
  4925  000F68  D005               	goto	l2006
  4926                           
  4927                           ;pipe.c: 108: dispatcher(WAITING_PIPE);
  4928  000F6A  0E05               	movlw	5
  4929  000F6C  6EE6               	movwf	postinc1,c
  4930  000F6E  EC02  F003         	call	_dispatcher	;wreg free
  4931                           
  4932                           ;pipe.c: 109: }
  4933  000F72  D07D               	goto	l2014
  4934  000F74                     l2006:
  4935                           
  4936                           ;pipe.c: 110: else {
  4937                           ;pipe.c: 111: *msg = pipe->p_msg_queue[pipe->p_pos_read];
  4938                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  4939  000F74  0EFE               	movlw	-2
  4940  000F76  CFE3 F062          	movff	plusw1,btemp+1
  4941  000F7A  0EFF               	movlw	-1
  4942  000F7C  CFE3 F063          	movff	plusw1,btemp+2
  4943  000F80  0E06               	movlw	6
  4944  000F82  2462               	addwf	btemp+1,w,c
  4945  000F84  6ED9               	movwf	fsr2l,c
  4946  000F86  0E00               	movlw	0
  4947  000F88  2063               	addwfc	btemp+2,w,c
  4948  000F8A  6EDA               	movwf	fsr2h,c
  4949  000F8C  CFDE F062          	movff	postinc2,btemp+1
  4950  000F90  CFDD F063          	movff	postdec2,btemp+2
  4951                           
  4952                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  4953  000F94  0EFE               	movlw	-2
  4954  000F96  CFE3 F06B          	movff	plusw1,btemp+10
  4955  000F9A  0EFF               	movlw	-1
  4956  000F9C  CFE3 F06C          	movff	plusw1,btemp+11
  4957  000FA0  0E02               	movlw	2
  4958  000FA2  246B               	addwf	btemp+10,w,c
  4959  000FA4  6ED9               	movwf	fsr2l,c
  4960  000FA6  0E00               	movlw	0
  4961  000FA8  206C               	addwfc	btemp+11,w,c
  4962  000FAA  6EDA               	movwf	fsr2h,c
  4963  000FAC  CFDE F06B          	movff	postinc2,btemp+10
  4964  000FB0  CFDD F06C          	movff	postdec2,btemp+11
  4965  000FB4  5062               	movf	btemp+1,w,c
  4966  000FB6  246B               	addwf	btemp+10,w,c
  4967  000FB8  6ED9               	movwf	fsr2l,c
  4968  000FBA  5063               	movf	btemp+2,w,c
  4969  000FBC  206C               	addwfc	btemp+11,w,c
  4970  000FBE  6EDA               	movwf	fsr2h,c
  4971                           
  4972                           ;stkvar	pipe_read@msg @ sp[(0)+-4]
  4973  000FC0  0EFC               	movlw	-4
  4974  000FC2  CFE3 FFE9          	movff	plusw1,fsr0l
  4975  000FC6  0EFD               	movlw	-3
  4976  000FC8  CFE3 FFEA          	movff	plusw1,fsr0h
  4977  000FCC  CFDF FFEF          	movff	indf2,indf0
  4978                           
  4979                           ;pipe.c: 112: pipe->p_pos_read = (pipe->p_pos_read + 1) % pipe->p_size;
  4980                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  4981  000FD0  0EFE               	movlw	-2
  4982  000FD2  CFE3 F062          	movff	plusw1,btemp+1
  4983  000FD6  0EFF               	movlw	-1
  4984  000FD8  CFE3 F063          	movff	plusw1,btemp+2
  4985  000FDC  0E08               	movlw	8
  4986  000FDE  2462               	addwf	btemp+1,w,c
  4987  000FE0  6ED9               	movwf	fsr2l,c
  4988  000FE2  0E00               	movlw	0
  4989  000FE4  2063               	addwfc	btemp+2,w,c
  4990  000FE6  6EDA               	movwf	fsr2h,c
  4991  000FE8  CFDE F062          	movff	postinc2,btemp+1
  4992  000FEC  CFDD F063          	movff	postdec2,btemp+2
  4993  000FF0  C062  FFE6         	movff	btemp+1,postinc1
  4994  000FF4  C063  FFE6         	movff	btemp+2,postinc1
  4995                           
  4996                           ;stkvar	pipe_read@pipe @ sp[(-2)+-2]
  4997  000FF8  0EFC               	movlw	-4
  4998  000FFA  CFE3 F062          	movff	plusw1,btemp+1
  4999  000FFE  0EFD               	movlw	-3
  5000  001000  CFE3 F063          	movff	plusw1,btemp+2
  5001  001004  0E06               	movlw	6
  5002  001006  2462               	addwf	btemp+1,w,c
  5003  001008  6ED9               	movwf	fsr2l,c
  5004  00100A  0E00               	movlw	0
  5005  00100C  2063               	addwfc	btemp+2,w,c
  5006  00100E  6EDA               	movwf	fsr2h,c
  5007  001010  CFDE F062          	movff	postinc2,btemp+1
  5008  001014  CFDD F063          	movff	postdec2,btemp+2
  5009  001018  0E01               	movlw	1
  5010  00101A  2662               	addwf	btemp+1,f,c
  5011  00101C  0E00               	movlw	0
  5012  00101E  2263               	addwfc	btemp+2,f,c
  5013  001020  C062  FFE6         	movff	btemp+1,postinc1
  5014  001024  C063  FFE6         	movff	btemp+2,postinc1
  5015  001028  EC24  F00A         	call	___lwmod	;wreg free
  5016                           
  5017                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  5018  00102C  0EFE               	movlw	-2
  5019  00102E  CFE3 F06B          	movff	plusw1,btemp+10
  5020  001032  0EFF               	movlw	-1
  5021  001034  CFE3 F06C          	movff	plusw1,btemp+11
  5022  001038  0E06               	movlw	6
  5023  00103A  246B               	addwf	btemp+10,w,c
  5024  00103C  6ED9               	movwf	fsr2l,c
  5025  00103E  0E00               	movlw	0
  5026  001040  206C               	addwfc	btemp+11,w,c
  5027  001042  6EDA               	movwf	fsr2h,c
  5028  001044  C061  FFDE         	movff	btemp,postinc2
  5029  001048  C062  FFDD         	movff	btemp+1,postdec2
  5030                           
  5031                           ;pipe.c: 113: pipe->p_count--;
  5032                           ;stkvar	pipe_read@pipe @ sp[(0)+-2]
  5033  00104C  0EFE               	movlw	-2
  5034  00104E  CFE3 F062          	movff	plusw1,btemp+1
  5035  001052  0EFF               	movlw	-1
  5036  001054  CFE3 F063          	movff	plusw1,btemp+2
  5037  001058  0E0A               	movlw	10
  5038  00105A  2462               	addwf	btemp+1,w,c
  5039  00105C  6ED9               	movwf	fsr2l,c
  5040  00105E  0E00               	movlw	0
  5041  001060  2063               	addwfc	btemp+2,w,c
  5042  001062  6EDA               	movwf	fsr2h,c
  5043  001064  06DE               	decf	postinc2,f,c
  5044  001066  0E00               	movlw	0
  5045  001068  5ADD               	subwfb	postdec2,f,c
  5046                           
  5047                           ;pipe.c: 115: libera_processos();
  5048  00106A  EC32  F00B         	call	_libera_processos	;wreg free
  5049  00106E                     l2014:
  5050                           
  5051                           ;pipe.c: 116: }
  5052                           ;pipe.c: 118: INTCONbits.GIE = 1;
  5053  00106E  8EF2               	bsf	intcon,7,c	;volatile
  5054                           
  5055                           ; _pipe_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  5056  001070  52E5               	movf	postdec1,f,c
  5057  001072  52E5               	movf	postdec1,f,c
  5058  001074  52E5               	movf	postdec1,f,c
  5059  001076  52E5               	movf	postdec1,f,c
  5060  001078  0012               	return		;funcret
  5061  00107A                     __end_of_pipe_read:
  5062                           	opt stack 0
  5063                           tosu	equ	0xFFF
  5064                           tosh	equ	0xFFE
  5065                           tosl	equ	0xFFD
  5066                           stkptr	equ	0xFFC
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           indf0	equ	0xFEF
  5075                           postinc0	equ	0xFEE
  5076                           postdec0	equ	0xFED
  5077                           plusw0	equ	0xFEB
  5078                           fsr0h	equ	0xFEA
  5079                           fsr0l	equ	0xFE9
  5080                           wreg	equ	0xFE8
  5081                           postinc1	equ	0xFE6
  5082                           postdec1	equ	0xFE5
  5083                           plusw1	equ	0xFE3
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           bsr	equ	0xFE0
  5087                           indf2	equ	0xFDF
  5088                           postinc2	equ	0xFDE
  5089                           postdec2	equ	0xFDD
  5090                           plusw2	equ	0xFDB
  5091                           fsr2h	equ	0xFDA
  5092                           fsr2l	equ	0xFD9
  5093                           status	equ	0xFD8
  5094                           
  5095 ;; *************** function _int_high *****************
  5096 ;; Defined at:
  5097 ;;		line 129 in file "kernel.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  i               2   15[COMRAM] unsigned int 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+8, btemp+9, btemp+10, btemp+11,
      + prodl, prodh
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5111 ;;      Params:         0       0       0       0       0       0       0
  5112 ;;      Locals:         2       0       0       0       0       0       0
  5113 ;;      Temps:         15       0       0       0       0       0       0
  5114 ;;      Totals:        17       0       0       0       0       0       0
  5115 ;;Total ram usage:       17 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    4
  5118 ;; This function calls:
  5119 ;;		___wmul
  5120 ;;		_dispatcher
  5121 ;; This function is called by:
  5122 ;;		Interrupt level 2
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	intcode
  5127  000008                     __pintcode:
  5128                           	opt stack 0
  5129  000008                     _int_high:
  5130                           	opt stack 17
  5131                           
  5132                           ;incstack = 0
  5133  000008  EDA2  F005         	call	int_func,f	;refresh shadow registers
  5134                           tosu	equ	0xFFF
  5135                           tosh	equ	0xFFE
  5136                           tosl	equ	0xFFD
  5137                           stkptr	equ	0xFFC
  5138                           tblptru	equ	0xFF8
  5139                           tblptrh	equ	0xFF7
  5140                           tblptrl	equ	0xFF6
  5141                           tablat	equ	0xFF5
  5142                           prodh	equ	0xFF4
  5143                           prodl	equ	0xFF3
  5144                           intcon	equ	0xFF2
  5145                           indf0	equ	0xFEF
  5146                           postinc0	equ	0xFEE
  5147                           postdec0	equ	0xFED
  5148                           plusw0	equ	0xFEB
  5149                           fsr0h	equ	0xFEA
  5150                           fsr0l	equ	0xFE9
  5151                           wreg	equ	0xFE8
  5152                           postinc1	equ	0xFE6
  5153                           postdec1	equ	0xFE5
  5154                           plusw1	equ	0xFE3
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           bsr	equ	0xFE0
  5158                           indf2	equ	0xFDF
  5159                           postinc2	equ	0xFDE
  5160                           postdec2	equ	0xFDD
  5161                           plusw2	equ	0xFDB
  5162                           fsr2h	equ	0xFDA
  5163                           fsr2l	equ	0xFD9
  5164                           status	equ	0xFD8
  5165                           
  5166                           	psect	intcode_body
  5167  000B44                     __pintcode_body:
  5168                           	opt stack 17
  5169  000B44                     int_func:
  5170                           	opt stack 17
  5171  000B44  0006               	pop		; remove dummy address from shadow register refresh
  5172  000B46  CFE1 F039          	movff	fsr1l,??_int_high+2
  5173  000B4A  CFE2 F03A          	movff	fsr1h,??_int_high+3
  5174  000B4E  CFD9 F03B          	movff	fsr2l,??_int_high+4
  5175  000B52  CFDA F03C          	movff	fsr2h,??_int_high+5
  5176  000B56  CFF3 F03D          	movff	prodl,??_int_high+6
  5177  000B5A  CFF4 F03E          	movff	prodh,??_int_high+7
  5178  000B5E  C061  F03F         	movff	btemp,??_int_high+8
  5179  000B62  C062  F040         	movff	btemp+1,??_int_high+9
  5180  000B66  C063  F041         	movff	btemp+2,??_int_high+10
  5181  000B6A  C069  F042         	movff	btemp+8,??_int_high+11
  5182  000B6E  C06A  F043         	movff	btemp+9,??_int_high+12
  5183  000B72  C06B  F044         	movff	btemp+10,??_int_high+13
  5184  000B76  C06C  F045         	movff	btemp+11,??_int_high+14
  5185  000B7A  EE14  F072         	lfsr	1,___inthi_sp
  5186                           
  5187                           ;kernel.c: 131: u_int i;
  5188                           ;kernel.c: 133: if (INTCONbits.TMR0IF) {
  5189  000B7E  A4F2               	btfss	intcon,2,c	;volatile
  5190  000B80  D07C               	goto	i2l122
  5191                           
  5192                           ;kernel.c: 134: INTCONbits.TMR0IF = 0;
  5193  000B82  94F2               	bcf	intcon,2,c	;volatile
  5194                           
  5195                           ;kernel.c: 135: TMR0L = 252;
  5196  000B84  0EFC               	movlw	252
  5197  000B86  6ED6               	movwf	4054,c	;volatile
  5198                           
  5199                           ;kernel.c: 138: for (i = 1; i < tasks_installed; i++) {
  5200  000B88  0E00               	movlw	0
  5201  000B8A  6E47               	movwf	int_high@i+1,c
  5202  000B8C  0E01               	movlw	1
  5203  000B8E  6E46               	movwf	int_high@i,c
  5204  000B90  D05F               	goto	i2l117
  5205  000B92                     
  5206                           ;kernel.c: 139: if (F_APTOS[i].task_state == SLEEPING) {
  5207  000B92  0E11               	movlw	17
  5208  000B94  6EE6               	movwf	postinc1,c
  5209  000B96  0E00               	movlw	0
  5210  000B98  6EE6               	movwf	postinc1,c
  5211  000B9A  C046  FFE6         	movff	int_high@i,postinc1
  5212  000B9E  C047  FFE6         	movff	int_high@i+1,postinc1
  5213  000BA2  EC7F  F00B         	call	___wmul	;wreg free
  5214  000BA6  0E08               	movlw	8
  5215  000BA8  2661               	addwf	btemp,f,c
  5216  000BAA  0E00               	movlw	0
  5217  000BAC  2262               	addwfc	btemp+1,f,c
  5218  000BAE  0E00               	movlw	low _F_APTOS
  5219  000BB0  2461               	addwf	btemp,w,c
  5220  000BB2  6ED9               	movwf	fsr2l,c
  5221  000BB4  0E01               	movlw	high _F_APTOS
  5222  000BB6  2062               	addwfc	btemp+1,w,c
  5223  000BB8  6EDA               	movwf	fsr2h,c
  5224  000BBA  0E03               	movlw	3
  5225  000BBC  18DE               	xorwf	postinc2,w,c
  5226  000BBE  A4D8               	btfss	status,2,c
  5227  000BC0  D045               	goto	i2l120
  5228                           
  5229                           ;kernel.c: 140: F_APTOS[i].delay_time--;
  5230  000BC2  0E11               	movlw	17
  5231  000BC4  6EE6               	movwf	postinc1,c
  5232  000BC6  0E00               	movlw	0
  5233  000BC8  6EE6               	movwf	postinc1,c
  5234  000BCA  C046  FFE6         	movff	int_high@i,postinc1
  5235  000BCE  C047  FFE6         	movff	int_high@i+1,postinc1
  5236  000BD2  EC7F  F00B         	call	___wmul	;wreg free
  5237  000BD6  0E06               	movlw	6
  5238  000BD8  2661               	addwf	btemp,f,c
  5239  000BDA  0E00               	movlw	0
  5240  000BDC  2262               	addwfc	btemp+1,f,c
  5241  000BDE  0E00               	movlw	low _F_APTOS
  5242  000BE0  2461               	addwf	btemp,w,c
  5243  000BE2  6ED9               	movwf	fsr2l,c
  5244  000BE4  0E01               	movlw	high _F_APTOS
  5245  000BE6  2062               	addwfc	btemp+1,w,c
  5246  000BE8  6EDA               	movwf	fsr2h,c
  5247  000BEA  06DE               	decf	postinc2,f,c
  5248  000BEC  0E00               	movlw	0
  5249  000BEE  5ADD               	subwfb	postdec2,f,c
  5250                           
  5251                           ;kernel.c: 141: if (F_APTOS[i].delay_time == 0) {
  5252  000BF0  0E11               	movlw	17
  5253  000BF2  6EE6               	movwf	postinc1,c
  5254  000BF4  0E00               	movlw	0
  5255  000BF6  6EE6               	movwf	postinc1,c
  5256  000BF8  C046  FFE6         	movff	int_high@i,postinc1
  5257  000BFC  C047  FFE6         	movff	int_high@i+1,postinc1
  5258  000C00  EC7F  F00B         	call	___wmul	;wreg free
  5259  000C04  0E06               	movlw	6
  5260  000C06  2661               	addwf	btemp,f,c
  5261  000C08  0E00               	movlw	0
  5262  000C0A  2262               	addwfc	btemp+1,f,c
  5263  000C0C  0E00               	movlw	low _F_APTOS
  5264  000C0E  2461               	addwf	btemp,w,c
  5265  000C10  6ED9               	movwf	fsr2l,c
  5266  000C12  0E01               	movlw	high _F_APTOS
  5267  000C14  2062               	addwfc	btemp+1,w,c
  5268  000C16  6EDA               	movwf	fsr2h,c
  5269  000C18  50DE               	movf	postinc2,w,c
  5270  000C1A  10DE               	iorwf	postinc2,w,c
  5271  000C1C  A4D8               	btfss	status,2,c
  5272  000C1E  D016               	goto	i2l120
  5273                           
  5274                           ;kernel.c: 142: F_APTOS[i].task_state = READY;
  5275  000C20  0E11               	movlw	17
  5276  000C22  6EE6               	movwf	postinc1,c
  5277  000C24  0E00               	movlw	0
  5278  000C26  6EE6               	movwf	postinc1,c
  5279  000C28  C046  FFE6         	movff	int_high@i,postinc1
  5280  000C2C  C047  FFE6         	movff	int_high@i+1,postinc1
  5281  000C30  EC7F  F00B         	call	___wmul	;wreg free
  5282  000C34  0E08               	movlw	8
  5283  000C36  2661               	addwf	btemp,f,c
  5284  000C38  0E00               	movlw	0
  5285  000C3A  2262               	addwfc	btemp+1,f,c
  5286  000C3C  0E00               	movlw	low _F_APTOS
  5287  000C3E  2461               	addwf	btemp,w,c
  5288  000C40  6ED9               	movwf	fsr2l,c
  5289  000C42  0E01               	movlw	high _F_APTOS
  5290  000C44  2062               	addwfc	btemp+1,w,c
  5291  000C46  6EDA               	movwf	fsr2h,c
  5292  000C48  0E01               	movlw	1
  5293  000C4A  6EDF               	movwf	indf2,c
  5294  000C4C                     i2l120:
  5295  000C4C  4A46               	infsnz	int_high@i,f,c
  5296  000C4E  2A47               	incf	int_high@i+1,f,c
  5297  000C50                     i2l117:
  5298  000C50  5019               	movf	_tasks_installed,w,c
  5299  000C52  5C46               	subwf	int_high@i,w,c
  5300  000C54  501A               	movf	_tasks_installed+1,w,c
  5301  000C56  5847               	subwfb	int_high@i+1,w,c
  5302  000C58  A0D8               	btfss	status,0,c
  5303  000C5A  D79B               	goto	i2l118
  5304                           
  5305                           ;kernel.c: 143: }
  5306                           ;kernel.c: 144: }
  5307                           ;kernel.c: 145: }
  5308                           ;kernel.c: 147: quantum--;
  5309  000C5C  066D               	decf	_quantum,f,c
  5310  000C5E  A0D8               	btfss	status,0,c
  5311  000C60  066E               	decf	_quantum+1,f,c
  5312                           
  5313                           ;kernel.c: 148: if (quantum == 0) {
  5314  000C62  506D               	movf	_quantum,w,c
  5315  000C64  106E               	iorwf	_quantum+1,w,c
  5316  000C66  A4D8               	btfss	status,2,c
  5317  000C68  D008               	goto	i2l122
  5318                           
  5319                           ;kernel.c: 149: quantum = 4;
  5320  000C6A  0E00               	movlw	0
  5321  000C6C  6E6E               	movwf	_quantum+1,c
  5322  000C6E  0E04               	movlw	4
  5323  000C70  6E6D               	movwf	_quantum,c
  5324                           
  5325                           ;kernel.c: 150: dispatcher(READY);
  5326  000C72  0E01               	movlw	1
  5327  000C74  6EE6               	movwf	postinc1,c
  5328  000C76  EC02  F003         	call	_dispatcher	;wreg free
  5329  000C7A                     i2l122:
  5330  000C7A  C045  F06C         	movff	??_int_high+14,btemp+11
  5331  000C7E  C044  F06B         	movff	??_int_high+13,btemp+10
  5332  000C82  C043  F06A         	movff	??_int_high+12,btemp+9
  5333  000C86  C042  F069         	movff	??_int_high+11,btemp+8
  5334  000C8A  C041  F063         	movff	??_int_high+10,btemp+2
  5335  000C8E  C040  F062         	movff	??_int_high+9,btemp+1
  5336  000C92  C03F  F061         	movff	??_int_high+8,btemp
  5337  000C96  C03E  FFF4         	movff	??_int_high+7,prodh
  5338  000C9A  C03D  FFF3         	movff	??_int_high+6,prodl
  5339  000C9E  C03C  FFDA         	movff	??_int_high+5,fsr2h
  5340  000CA2  C03B  FFD9         	movff	??_int_high+4,fsr2l
  5341  000CA6  C03A  FFE2         	movff	??_int_high+3,fsr1h
  5342  000CAA  C039  FFE1         	movff	??_int_high+2,fsr1l
  5343  000CAE  0011               	retfie		f
  5344  000CB0                     __end_of_int_high:
  5345                           	opt stack 0
  5346                           tosu	equ	0xFFF
  5347                           tosh	equ	0xFFE
  5348                           tosl	equ	0xFFD
  5349                           stkptr	equ	0xFFC
  5350                           tblptru	equ	0xFF8
  5351                           tblptrh	equ	0xFF7
  5352                           tblptrl	equ	0xFF6
  5353                           tablat	equ	0xFF5
  5354                           prodh	equ	0xFF4
  5355                           prodl	equ	0xFF3
  5356                           intcon	equ	0xFF2
  5357                           indf0	equ	0xFEF
  5358                           postinc0	equ	0xFEE
  5359                           postdec0	equ	0xFED
  5360                           plusw0	equ	0xFEB
  5361                           fsr0h	equ	0xFEA
  5362                           fsr0l	equ	0xFE9
  5363                           wreg	equ	0xFE8
  5364                           postinc1	equ	0xFE6
  5365                           postdec1	equ	0xFE5
  5366                           plusw1	equ	0xFE3
  5367                           fsr1h	equ	0xFE2
  5368                           fsr1l	equ	0xFE1
  5369                           bsr	equ	0xFE0
  5370                           indf2	equ	0xFDF
  5371                           postinc2	equ	0xFDE
  5372                           postdec2	equ	0xFDD
  5373                           plusw2	equ	0xFDB
  5374                           fsr2h	equ	0xFDA
  5375                           fsr2l	equ	0xFD9
  5376                           status	equ	0xFD8
  5377                           tosu	equ	0xFFF
  5378                           tosh	equ	0xFFE
  5379                           tosl	equ	0xFFD
  5380                           stkptr	equ	0xFFC
  5381                           tblptru	equ	0xFF8
  5382                           tblptrh	equ	0xFF7
  5383                           tblptrl	equ	0xFF6
  5384                           tablat	equ	0xFF5
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           indf0	equ	0xFEF
  5389                           postinc0	equ	0xFEE
  5390                           postdec0	equ	0xFED
  5391                           plusw0	equ	0xFEB
  5392                           fsr0h	equ	0xFEA
  5393                           fsr0l	equ	0xFE9
  5394                           wreg	equ	0xFE8
  5395                           postinc1	equ	0xFE6
  5396                           postdec1	equ	0xFE5
  5397                           plusw1	equ	0xFE3
  5398                           fsr1h	equ	0xFE2
  5399                           fsr1l	equ	0xFE1
  5400                           bsr	equ	0xFE0
  5401                           indf2	equ	0xFDF
  5402                           postinc2	equ	0xFDE
  5403                           postdec2	equ	0xFDD
  5404                           plusw2	equ	0xFDB
  5405                           fsr2h	equ	0xFDA
  5406                           fsr2l	equ	0xFD9
  5407                           status	equ	0xFD8
  5408                           
  5409                           	psect	rparam
  5410  0000                     tosu	equ	0xFFF
  5411                           tosh	equ	0xFFE
  5412                           tosl	equ	0xFFD
  5413                           stkptr	equ	0xFFC
  5414                           tblptru	equ	0xFF8
  5415                           tblptrh	equ	0xFF7
  5416                           tblptrl	equ	0xFF6
  5417                           tablat	equ	0xFF5
  5418                           prodh	equ	0xFF4
  5419                           prodl	equ	0xFF3
  5420                           intcon	equ	0xFF2
  5421                           indf0	equ	0xFEF
  5422                           postinc0	equ	0xFEE
  5423                           postdec0	equ	0xFED
  5424                           plusw0	equ	0xFEB
  5425                           fsr0h	equ	0xFEA
  5426                           fsr0l	equ	0xFE9
  5427                           wreg	equ	0xFE8
  5428                           postinc1	equ	0xFE6
  5429                           postdec1	equ	0xFE5
  5430                           plusw1	equ	0xFE3
  5431                           fsr1h	equ	0xFE2
  5432                           fsr1l	equ	0xFE1
  5433                           bsr	equ	0xFE0
  5434                           indf2	equ	0xFDF
  5435                           postinc2	equ	0xFDE
  5436                           postdec2	equ	0xFDD
  5437                           plusw2	equ	0xFDB
  5438                           fsr2h	equ	0xFDA
  5439                           fsr2l	equ	0xFD9
  5440                           status	equ	0xFD8
  5441                           
  5442                           	psect	temp
  5443  000061                     btemp:
  5444                           	opt stack 0
  5445  000061                     	ds	12
  5446  0000                     wtemp0	set	btemp
  5447  0000                     wtemp1	set	btemp+2
  5448  0000                     wtemp2	set	btemp+4
  5449  0000                     wtemp3	set	btemp+6
  5450  0000                     wtemp4	set	btemp+8
  5451  0000                     wtemp5	set	btemp+10
  5452  0000                     wtemp6	set	btemp+1
  5453  0000                     ttemp0	set	btemp
  5454  0000                     ttemp1	set	btemp+3
  5455  0000                     ttemp2	set	btemp+6
  5456  0000                     ttemp3	set	btemp+9
  5457  0000                     ltemp0	set	btemp
  5458  0000                     ltemp1	set	btemp+4
  5459  0000                     ltemp2	set	btemp+8
  5460                           tosu	equ	0xFFF
  5461                           tosh	equ	0xFFE
  5462                           tosl	equ	0xFFD
  5463                           stkptr	equ	0xFFC
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           prodh	equ	0xFF4
  5469                           prodl	equ	0xFF3
  5470                           intcon	equ	0xFF2
  5471                           indf0	equ	0xFEF
  5472                           postinc0	equ	0xFEE
  5473                           postdec0	equ	0xFED
  5474                           plusw0	equ	0xFEB
  5475                           fsr0h	equ	0xFEA
  5476                           fsr0l	equ	0xFE9
  5477                           wreg	equ	0xFE8
  5478                           postinc1	equ	0xFE6
  5479                           postdec1	equ	0xFE5
  5480                           plusw1	equ	0xFE3
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           bsr	equ	0xFE0
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           plusw2	equ	0xFDB
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    2
    Data        2
    BSS         736
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     42      98
    BANK0           128      0       0
    BANK1           256      0     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    _SRAMmerge@pSegA	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMInitHeap@pHeap	near PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@pHeap	near PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_destroy@pipe.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_write@pipe.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_write@pipe	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    pipe_read@msg	PTR unsigned char  size(2) Largest target is 1
		 -> acender@dado(UNKNOWN), 

    pipe_read@pipe.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_read@pipe	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    pipe_create@pipe.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_create@pipe	PTR struct pipe size(2) Largest target is 13
		 -> testL(COMRAM[12]), 

    s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_post@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_post@s	PTR struct sem size(2) Largest target is 9
		 -> spista(COMRAM[8]), 

    sem_wait@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_wait@s	PTR struct sem size(2) Largest target is 9
		 -> spista(COMRAM[8]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_init@s.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    sem_init@s	PTR struct sem size(2) Largest target is 9
		 -> t1(COMRAM[8]), spista(COMRAM[8]), 

    pipeluzes.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    F_APTOS.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> acender(), dianoite(), led_3(), led_2(), 
		 -> led_1(), aviaoidle(), 

    create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> acender(), dianoite(), led_3(), led_2(), 
		 -> led_1(), aviaoidle(), 

    S190tcb$task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> acender(), dianoite(), led_3(), led_2(), 
		 -> led_1(), aviaoidle(), 

    task.task_f	PTR PTR FTN()void  size(2) Largest target is 1
		 -> acender(), dianoite(), led_3(), led_2(), 
		 -> led_1(), aviaoidle(), 

    S36pipe$p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    testL.p_msg_queue	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    t2.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    t1.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S29_queue$task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    spista.queue.task	PTR unsigned int  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_pipe_create
    _setupOS->_SRAMInitHeap
    _sem_init->_SRAMalloc
    _pipe_create->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _aviaoidle in COMRAM

    None.

Critical Paths under _led_1 in COMRAM

    None.

Critical Paths under _led_2 in COMRAM

    None.

Critical Paths under _led_3 in COMRAM

    None.

Critical Paths under _dianoite in COMRAM

    None.

Critical Paths under _acender in COMRAM

    None.

Critical Paths under _aviaoidle in COMRAM

    None.

Critical Paths under _led_1 in COMRAM

    None.

Critical Paths under _led_2 in COMRAM

    None.

Critical Paths under _led_3 in COMRAM

    None.

Critical Paths under _dianoite in COMRAM

    None.

Critical Paths under _acender in COMRAM

    None.

Critical Paths under _int_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _aviaoidle in BANK0

    None.

Critical Paths under _led_1 in BANK0

    None.

Critical Paths under _led_2 in BANK0

    None.

Critical Paths under _led_3 in BANK0

    None.

Critical Paths under _dianoite in BANK0

    None.

Critical Paths under _acender in BANK0

    None.

Critical Paths under _aviaoidle in BANK0

    None.

Critical Paths under _led_1 in BANK0

    None.

Critical Paths under _led_2 in BANK0

    None.

Critical Paths under _led_3 in BANK0

    None.

Critical Paths under _dianoite in BANK0

    None.

Critical Paths under _acender in BANK0

    None.

Critical Paths under _int_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _aviaoidle in BANK1

    None.

Critical Paths under _led_1 in BANK1

    None.

Critical Paths under _led_2 in BANK1

    None.

Critical Paths under _led_3 in BANK1

    None.

Critical Paths under _dianoite in BANK1

    None.

Critical Paths under _acender in BANK1

    None.

Critical Paths under _aviaoidle in BANK1

    None.

Critical Paths under _led_1 in BANK1

    None.

Critical Paths under _led_2 in BANK1

    None.

Critical Paths under _led_3 in BANK1

    None.

Critical Paths under _dianoite in BANK1

    None.

Critical Paths under _acender in BANK1

    None.

Critical Paths under _int_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _aviaoidle in BANK2

    None.

Critical Paths under _led_1 in BANK2

    None.

Critical Paths under _led_2 in BANK2

    None.

Critical Paths under _led_3 in BANK2

    None.

Critical Paths under _dianoite in BANK2

    None.

Critical Paths under _acender in BANK2

    None.

Critical Paths under _aviaoidle in BANK2

    None.

Critical Paths under _led_1 in BANK2

    None.

Critical Paths under _led_2 in BANK2

    None.

Critical Paths under _led_3 in BANK2

    None.

Critical Paths under _dianoite in BANK2

    None.

Critical Paths under _acender in BANK2

    None.

Critical Paths under _int_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _aviaoidle in BANK3

    None.

Critical Paths under _led_1 in BANK3

    None.

Critical Paths under _led_2 in BANK3

    None.

Critical Paths under _led_3 in BANK3

    None.

Critical Paths under _dianoite in BANK3

    None.

Critical Paths under _acender in BANK3

    None.

Critical Paths under _aviaoidle in BANK3

    None.

Critical Paths under _led_1 in BANK3

    None.

Critical Paths under _led_2 in BANK3

    None.

Critical Paths under _led_3 in BANK3

    None.

Critical Paths under _dianoite in BANK3

    None.

Critical Paths under _acender in BANK3

    None.

Critical Paths under _int_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _aviaoidle in BANK4

    None.

Critical Paths under _led_1 in BANK4

    None.

Critical Paths under _led_2 in BANK4

    None.

Critical Paths under _led_3 in BANK4

    None.

Critical Paths under _dianoite in BANK4

    None.

Critical Paths under _acender in BANK4

    None.

Critical Paths under _aviaoidle in BANK4

    None.

Critical Paths under _led_1 in BANK4

    None.

Critical Paths under _led_2 in BANK4

    None.

Critical Paths under _led_3 in BANK4

    None.

Critical Paths under _dianoite in BANK4

    None.

Critical Paths under _acender in BANK4

    None.

Critical Paths under _int_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _aviaoidle in BANK5

    None.

Critical Paths under _led_1 in BANK5

    None.

Critical Paths under _led_2 in BANK5

    None.

Critical Paths under _led_3 in BANK5

    None.

Critical Paths under _dianoite in BANK5

    None.

Critical Paths under _acender in BANK5

    None.

Critical Paths under _aviaoidle in BANK5

    None.

Critical Paths under _led_1 in BANK5

    None.

Critical Paths under _led_2 in BANK5

    None.

Critical Paths under _led_3 in BANK5

    None.

Critical Paths under _dianoite in BANK5

    None.

Critical Paths under _acender in BANK5

    None.

Critical Paths under _int_high in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5934
                       _SRAMInitHeap
                         _confi_port
                        _create_task
                        _pipe_create
                           _sem_init
                            _setupOS
                           _start_os
 ---------------------------------------------------------------------------------
 (1) _start_os                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupOS                                              0     0      0     158
                       _SRAMInitHeap
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     158
                                             17 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _sem_init                                             4     0      4    1383
                                             36 COMRAM     4     0      4
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (1) _pipe_create                                          6     0      6    1395
                                             36 COMRAM     6     0      6
                          _SRAMalloc
 ---------------------------------------------------------------------------------
 (2) _SRAMalloc                                           11     9      2     969
                                             25 COMRAM    11     9      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (3) __SRAMmerge                                           8     6      2     478
                                             17 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _create_task                                         23    17      6    2840
                                             17 COMRAM    23    17      6
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (1) _confi_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviaoidle                                            0     0      0    5918
                              _delay
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_1                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_2                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_3                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _dianoite                                             0     0      0   12143
                              _delay
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           3     0      3    6225
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1355
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _acender                                              1     1      0   12167
                              _delay
                          _pipe_read
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4    6203
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1355
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _aviaoidle                                            0     0      0    5918
                              _delay
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_1                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_2                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _led_3                                                0     0      0   16977
                              _delay
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             6     4      2    4875
                            ___lwmod
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _sem_post                                             4     2      2    6184
                            ___lwmod
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _dianoite                                             0     0      0   12143
                              _delay
                         _pipe_write
 ---------------------------------------------------------------------------------
 (5) _pipe_write                                           3     0      3    6225
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1355
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _acender                                              1     1      0   12167
                              _delay
                          _pipe_read
 ---------------------------------------------------------------------------------
 (5) _pipe_read                                            4     0      4    6203
                            ___lwmod
                         _dispatcher
                   _libera_processos
 ---------------------------------------------------------------------------------
 (6) _libera_processos                                     2     2      0    1355
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _delay                                                2     0      2    5918
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _int_high                                           17    17      0    5768
                                              0 COMRAM    17    17      0
                             ___wmul
                         _dispatcher
 ---------------------------------------------------------------------------------
 (11) _dispatcher                                          1     0      1    4369
                             ___wmul
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (12) _rr_scheduler                                        6     6      0    3060
                            ___lwmod
                             ___wmul
                          _contagemR
 ---------------------------------------------------------------------------------
 (13) _contagemR                                           4     4      0    1379
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1287
 ---------------------------------------------------------------------------------
 (13) ___lwmod                                             5     1      4     279
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SRAMInitHeap
   _confi_port
   _create_task
     ___wmul
   _pipe_create
     _SRAMalloc
       __SRAMmerge
   _sem_init
     _SRAMalloc
       __SRAMmerge
   _setupOS
     _SRAMInitHeap
   _start_os

 _aviaoidle (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _dianoite (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_write
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _acender (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_read
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _aviaoidle (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_1 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_2 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _led_3 (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_post
     ___lwmod
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _sem_wait
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul

 _dianoite (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_write
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _acender (ROOT)
   _delay
     ___wmul
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
   _pipe_read
     ___lwmod
     _dispatcher
       ___wmul
       _rr_scheduler
         ___lwmod
         ___wmul
         _contagemR
           ___wmul
     _libera_processos
       ___wmul

 _int_high (ROOT)
   ___wmul
   _dispatcher
     ___wmul
     _rr_scheduler
       ___lwmod
       ___wmul
       _contagemR
         ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      17       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      AA       7       66.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     2A      62       1       85.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       4       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      15        0.0%
DATA                 0      0     310       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Nov 23 18:43:10 2018

                       l43 1286                         l94 0948                         _t1 0027  
                       _t2 000D  __size_of_libera_processos 009A              SRAMalloc@temp 0056  
                      l224 156E                        l320 13EA                        l312 137C  
                      l314 1384                        l330 19B0                        l315 13AA  
                      l331 19DE                        l340 1606                        l316 1434  
                      l317 13CA                        l191 1930                        l343 1614  
                      l344 1654                        l185 182E                        l338 15FA  
                      l179 179C                        _BSR 000FE0                        u620 19BC  
                      u550 1602                        u751 1A9E                        _TOS 000FFD  
            create_task@id 0048                        wreg 000FE8             SRAMalloc@pHeap 0059  
        SRAMInitHeap@pHeap 004A          SRAMInitHeap@count 0048                       l2014 106E  
                     l2006 0F74                       l2186 1AB4                       l1736 1460  
                     l1680 1528                       l1842 1672                       l1746 14D0  
                     l1906 06C0                       l1780 12CC                       l1846 16C2  
                     l1926 08DA                       l1848 16E0                       l1964 117C  
                     l1990 0E4E                       l1982 0DF8                       l1998 0F3E  
                     _TOSH 000FFE                       _TOSL 000FFD                       _WREG 000FE8  
                     _TOSU 000FFF                       _cont 0015                       _main 1188  
                     fsr0h 000FEA                       fsr1h 000FE2                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 0061  
                     prodh 000FF4                       prodl 000FF3                       start 000C  
          SRAMalloc@nBytes 0058               ___param_bank 000000            SRAMalloc@segLen 0054  
                    ?_main 0037            _tasks_installed 0019                      i2l120 0C4C  
          __end_of___lwmod 1504                      i2l122 0C7A                      i2l117 0C50  
                    i2l118 0B92            __end_of_acender 1B04                      _TMR0L 000FD6  
                    u52_20 15A6                      u61_20 14EE                      u63_20 12BC  
                    u63_26 12BE                      u80_20 0CE6                      u80_21 0CE4  
                    _TRISD 000F95                      u66_20 1354                      u59_20 1488  
                    u78_20 0B18                      u89_20 1AE2                      u89_26 1AE4  
               __SRAMmerge 15BC                      _delay 1B56                      _led_1 1794  
                    _led_2 1826                      _led_3 1928                      _testL 001B  
          create_task@task 004E         __size_of_SRAMalloc 00DE                      tablat 000FF5  
                    ltemp0 0061                      ltemp1 0065                      ltemp2 0069  
          __end_of_setupOS 1BBC                      plusw0 000FEB                      plusw1 000FE3  
                    plusw2 000FDB                      ttemp0 0061                      ttemp1 0064  
                    ttemp2 0067                      ttemp3 006A                      status 000FD8  
                    wtemp0 0061                      wtemp1 0063                      wtemp2 0065  
                    wtemp3 0067                      wtemp4 0069                      wtemp5 006B  
                    wtemp6 0062            __initialization 1B04               __end_of_main 1288  
                   ??_main 0061              __activetblptr 000001               ?_pipe_create 005B  
                   _STATUS 000FD8                     _STKPTR 000FFC           __end_of_dianoite 1BDA  
     __size_of_create_task 0058                     ___wmul 16FE          __end_of_SRAMalloc 1448  
                   clear_0 1B24                     clear_1 1B36                     clear_2 1B42  
         __end_of_int_high 0CB0           _libera_processos 1664           create_task@prior 004A  
                   _spista 002F           __end_of_sem_init 1A54           __end_of_sem_wait 1188  
         __end_of_sem_post 0E04               __pdataCOMRAM 006D               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_setupOS 004C                ?__SRAMmerge 0048           __end_of_start_os 1BF8  
               __accesstop 0080    __end_of__initialization 1B48              ___rparam_used 000001  
           __pcstackCOMRAM 0037                 ___inthi_sp 0472              __end_of_delay 1B9E  
            __end_of_led_1 1826              __end_of_led_2 18AC              __end_of_led_3 19A2  
          __SRAMmerge@uSum 004B         __size_of_aviaoidle 0014         __size_of_contagemR 00B8  
               __pbssBANK1 0100              __uDynamicHeap 01AA        __size_of__SRAMmerge 00A8  
       __size_of_pipe_read 0132                    _F_APTOS 0100                 _confi_port 1BEE  
               _dispatcher 0604       __size_of_pipe_create 007C                  ?_int_high 0037  
                  __Hparam 0000                  ?_sem_init 005B                    __Lparam 0000  
       __end_of_STACK_SIZE 0603          __end_of_aviaoidle 1BEE            __size_of___wmul 0096  
        __end_of_contagemR 15BC                    ___lwmod 1448                    _acender 1AAC  
             __psmallconst 0600                  ?_start_os 0037                    __pcinit 1B04  
                  __ramtop 0600              ?_SRAMInitHeap 0037                    __ptext0 1188  
                  __ptext1 1BF4                    __ptext2 1B9E                    __ptext3 19A2  
                  __ptext4 19FC                    __ptext5 18AC                    __ptext6 136A  
                  __ptext7 15BC                    __ptext8 1A54                    __ptext9 16FE  
                _T0CONbits 000FD5                    _setupOS 1B9E          create_task@task_f 004C  
                  _quantum 006D             __pintcode_body 0B44       end_of_initialization 1B48  
        __end_of_pipe_read 107A   __end_of_libera_processos 16FE                    int_func 0B44  
               ??_int_high 0037                 _pipe_write 0E04              pipe_create@id 005D  
               ??_sem_init 005F                    postdec0 000FED                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc1 000FE6  
                  postinc2 000FDE                 ??_start_os 0048             ??_SRAMInitHeap 0048  
                _PORTBbits 000F81                  _PORTCbits 000F82                  _PORTDbits 000F83  
                _PORTEbits 000F84                  _SRAMalloc 136A                  _TRISBbits 000F93  
                _TRISCbits 000F94                ?_confi_port 0037               ??__SRAMmerge 004A  
            sem_init@value 005D              ??_create_task 004E         __end_of__SRAMmerge 1664  
           __end_of___wmul 1794              __pidataCOMRAM 1BF8                 ?_SRAMalloc 0050  
      start_initialization 1B04         SRAMalloc@segHeader 0055           __SRAMmerge@pSegA 0048  
         __SRAMmerge@pSegB 004E           __SRAMmerge@uSegA 004C           __SRAMmerge@uSegB 004D  
      __end_of_create_task 1AAC        __size_of_confi_port 0006        __size_of_dispatcher 0540  
              __pbssBIGRAM 01AA                __pbssCOMRAM 0001          __size_of_dianoite 001E  
     __end_of_SRAMInitHeap 19FC          __size_of_int_high 0CA8                  __pintcode 0008  
        __size_of_sem_init 0058          __size_of_sem_wait 010E          __size_of_sem_post 0154  
                _aviaoidle 1BDA          __size_of_start_os 0004                  _contagemR 1504  
              __smallconst 0600                ??_SRAMalloc 0052        __size_of_pipe_write 0144  
            ??_pipe_create 0061                   ?_setupOS 0037             __size_of_delay 0048  
           __size_of_led_1 0092             __size_of_led_2 0086             __size_of_led_3 007A  
     __end_of_rr_scheduler 136A                _create_task 1A54                   _LATBbits 000F8A  
                 _LATCbits 000F8B                  _pipe_read 0F48                  _pipeluzes 0001  
             ??_confi_port 0048        __end_of_pipe_create 1928                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0600         __end_of_confi_port 1BF4  
                int_high@i 0046         __end_of_dispatcher 0B44           __size_of___lwmod 00BC  
         __size_of_acender 0058            pipe_create@pipe 005B            pipe_create@size 005F  
                 _dianoite 1BBC      __size_of_SRAMInitHeap 005A                   __ptext10 1BEE  
                 __ptext11 1BDA                   __ptext20 1826                   __ptext12 1B56  
                 __ptext21 1928                   __ptext13 0604                   __ptext22 1BBC  
                 __ptext14 1288                   __ptext23 0E04                   __ptext15 1504  
                 __ptext24 1664                   __ptext16 1448                   __ptext25 1AAC  
                 __ptext17 1794                   __ptext26 0F48                   __ptext18 107A  
                 __ptext19 0CB0           __size_of_setupOS 001E                  sem_init@s 005B  
            __size_of_main 0100                   _int_high 0008                   _sem_init 19FC  
                 _sem_wait 107A                   _sem_post 0CB0               _task_running 0017  
                 _start_os 1BF4               _SRAMInitHeap 19A2      __size_of_rr_scheduler 00E2  
               _INTCONbits 000FF2         __end_of_pipe_write 0F48                _pipe_create 18AC  
                 intlevel1 0000                   intlevel2 0000               _rr_scheduler 1288  
               _STACK_SIZE 0601               ?_create_task 0048  
