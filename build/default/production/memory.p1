Version 3.2 HI-TECH Software Intermediate Code
"119 memory.c
[s S2 :7 `uc 1 :1 `uc 1 ]
[n S2 _BITS count alloc ]
"116
[u S1 `uc 1 `S2 1 ]
[n S1 _SALLOC byte bits ]
[v F19 `*S1 ~T0 @X0 1 t ]
[v F20 `(uc ~T0 @X0 1 tf1`N*S1 ]
"148
[v __SRAMmerge `NF20 ~T0 @X0 0 e ]
[v F6 `*uc ~T0 @X0 1 t ]
[; ;memory.h: 22: unsigned char * near SRAMalloc(near unsigned char nBytes);
[; ;memory.h: 23: void SRAMfree(unsigned char * near pSRAM);
[; ;memory.h: 24: void SRAMInitHeap(void);
[; ;memory.c: 116: typedef union _SALLOC
[; ;memory.c: 117: {
[; ;memory.c: 118: unsigned char byte;
[; ;memory.c: 119: struct _BITS
[; ;memory.c: 120: {
[; ;memory.c: 121: unsigned count:7;
[; ;memory.c: 122: unsigned alloc:1;
[; ;memory.c: 123: }bits;
[; ;memory.c: 124: }SALLOC;
"131 memory.c
[v __uDynamicHeap `uc ~T0 @X0 -> 512 `i e ]
[; ;memory.c: 131: unsigned char _uDynamicHeap[0x200];
[; ;memory.c: 148: near unsigned char _SRAMmerge(SALLOC * near pSegA);
[v F2 `(*uc ~T0 @X0 1 tf1`Nuc ]
"178
[v _SRAMalloc `NF2 ~T0 @X0 1 e ]
"179
{
[; ;memory.c: 178: unsigned char * near SRAMalloc(near unsigned char nBytes)
[; ;memory.c: 179: {
[e :U _SRAMalloc ]
"178
[v _nBytes `Nuc ~T0 @X0 1 r1 ]
"179
[f ]
[v F24 `*S1 ~T0 @X0 1 t ]
"180
[v _pHeap `N*S1 ~T0 @X0 1 a ]
[v F26 `*S1 ~T0 @X0 1 t ]
"181
[v _temp `N*S1 ~T0 @X0 1 a ]
"182
[v _segHeader `S1 ~T0 @X0 1 a ]
"183
[v _segLen `uc ~T0 @X0 1 a ]
[; ;memory.c: 180: SALLOC * near pHeap;
[; ;memory.c: 181: SALLOC * near temp;
[; ;memory.c: 182: near SALLOC segHeader;
[; ;memory.c: 183: near unsigned char segLen;
[; ;memory.c: 186: if (nBytes > (0x7F - 1)) return (0);
"186
[e $ ! > -> _nBytes `i - -> 127 `i -> 1 `i 4  ]
[e ) -> -> 0 `i `*uc ]
[e $UE 3  ]
[e :U 4 ]
[; ;memory.c: 189: pHeap = (SALLOC *)_uDynamicHeap;
"189
[e = _pHeap -> -> &U __uDynamicHeap `*S1 `N*S1 ]
[; ;memory.c: 191: while (1)
"191
[e :U 6 ]
[; ;memory.c: 192: {
"192
{
[; ;memory.c: 194: segHeader = *pHeap;
"194
[e = _segHeader *U _pHeap ]
[; ;memory.c: 197: segLen = segHeader.bits.count - 1;
"197
[e = _segLen -> - -> . . _segHeader 1 0 `i -> 1 `i `uc ]
[; ;memory.c: 200: if (segHeader.byte == 0) return (0);
"200
[e $ ! == -> . _segHeader 0 `i -> 0 `i 8  ]
[e ) -> -> 0 `i `*uc ]
[e $UE 3  ]
[e :U 8 ]
[; ;memory.c: 203: if (!(segHeader.bits.alloc))
"203
[e $ ! ! != -> . . _segHeader 1 1 `i -> -> -> 0 `i `uc `i 9  ]
[; ;memory.c: 204: {
"204
{
[; ;memory.c: 206: if (nBytes > segLen)
"206
[e $ ! > -> _nBytes `i -> _segLen `i 10  ]
[; ;memory.c: 207: {
"207
{
[; ;memory.c: 209: if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
"209
[e $ ! ! != -> ( __SRAMmerge (1 _pHeap `i -> -> -> 0 `i `uc `i 11  ]
[e =+ _pHeap * -> . . _segHeader 1 0 `ux -> -> # *U _pHeap `ui `ux ]
[e :U 11 ]
"210
}
[; ;memory.c: 210: }
[e $U 12  ]
"211
[e :U 10 ]
[; ;memory.c: 211: else
[; ;memory.c: 215: if (nBytes == segLen)
"215
[e $ ! == -> _nBytes `i -> _segLen `i 13  ]
[; ;memory.c: 216: {
"216
{
[; ;memory.c: 218: (*pHeap).bits.alloc = 1;
"218
[e = . . *U _pHeap 1 1 -> -> 1 `i `uc ]
[; ;memory.c: 221: return ((unsigned char *)(pHeap + 1));
"221
[e ) -> + _pHeap * -> -> 1 `i `x -> -> # *U _pHeap `i `x `*uc ]
[e $UE 3  ]
"222
}
[; ;memory.c: 222: }
[e $U 14  ]
"225
[e :U 13 ]
[; ;memory.c: 225: else
[; ;memory.c: 226: {
"226
{
[; ;memory.c: 228: (*pHeap).byte = nBytes + 0x81;
"228
[e = . *U _pHeap 0 -> + -> _nBytes `i -> 129 `i `uc ]
[; ;memory.c: 231: temp = pHeap + 1;
"231
[e = _temp + _pHeap * -> -> 1 `i `x -> -> # *U _pHeap `i `x ]
[; ;memory.c: 234: pHeap += (nBytes + 1);
"234
[e =+ _pHeap * -> + -> _nBytes `i -> 1 `i `x -> -> # *U _pHeap `i `x ]
[; ;memory.c: 237: (*pHeap).byte = segLen - nBytes;
"237
[e = . *U _pHeap 0 -> - -> _segLen `i -> _nBytes `i `uc ]
[; ;memory.c: 240: return ((unsigned char *) temp);
"240
[e ) -> _temp `*uc ]
[e $UE 3  ]
"241
}
[e :U 14 ]
[e :U 12 ]
"242
}
[; ;memory.c: 241: }
[; ;memory.c: 242: }
[e $U 15  ]
"245
[e :U 9 ]
[; ;memory.c: 245: else
[; ;memory.c: 246: {
"246
{
[; ;memory.c: 247: pHeap += segHeader.bits.count;
"247
[e =+ _pHeap * -> . . _segHeader 1 0 `ux -> -> # *U _pHeap `ui `ux ]
"248
}
[e :U 15 ]
"249
}
[e :U 5 ]
"191
[e $U 6  ]
[e :U 7 ]
[; ;memory.c: 248: }
[; ;memory.c: 249: }
[; ;memory.c: 250: }
"250
[e :UE 3 ]
}
"274
[v _SRAMfree `(v ~T0 @X0 1 ef1`N*uc ]
"275
{
[; ;memory.c: 274: void SRAMfree(unsigned char * near pSRAM)
[; ;memory.c: 275: {
[e :U _SRAMfree ]
[v F33 `*uc ~T0 @X0 1 t ]
"274
[v _pSRAM `N*uc ~T0 @X0 1 r1 ]
"275
[f ]
[; ;memory.c: 277: (*(SALLOC *)(pSRAM - 1)).bits.alloc = 0;
"277
[e = . . *U -> - _pSRAM * -> -> 1 `i `x -> -> # *U _pSRAM `i `x `*S1 1 1 -> -> 0 `i `uc ]
[; ;memory.c: 278: }
"278
[e :UE 16 ]
}
"300
[v _SRAMInitHeap `(v ~T0 @X0 1 ef ]
"301
{
[; ;memory.c: 300: void SRAMInitHeap(void)
[; ;memory.c: 301: {
[e :U _SRAMInitHeap ]
[f ]
[v F37 `*uc ~T0 @X0 1 t ]
"302
[v _pHeap `N*uc ~T0 @X0 1 a ]
"303
[v _count `ui ~T0 @X0 1 a ]
[; ;memory.c: 302: unsigned char * near pHeap;
[; ;memory.c: 303: near unsigned int count;
[; ;memory.c: 305: pHeap = _uDynamicHeap;
"305
[e = _pHeap -> &U __uDynamicHeap `N*uc ]
[; ;memory.c: 306: count = 0x200-1;
"306
[e = _count -> - -> 512 `i -> 1 `i `ui ]
[; ;memory.c: 308: while (1)
"308
[e :U 19 ]
[; ;memory.c: 309: {
"309
{
[; ;memory.c: 310: if (count > 0x7F)
"310
[e $ ! > _count -> -> 127 `i `ui 21  ]
[; ;memory.c: 311: {
"311
{
[; ;memory.c: 312: *pHeap = 0x7F;
"312
[e = *U _pHeap -> -> 127 `i `uc ]
[; ;memory.c: 313: pHeap += 0x7F;
"313
[e =+ _pHeap * -> -> 127 `i `x -> -> # *U _pHeap `i `x ]
[; ;memory.c: 314: count = count - 0x7F;
"314
[e = _count - _count -> -> 127 `i `ui ]
"315
}
[; ;memory.c: 315: }
[e $U 22  ]
"316
[e :U 21 ]
[; ;memory.c: 316: else
[; ;memory.c: 317: {
"317
{
[; ;memory.c: 318: *pHeap = count;
"318
[e = *U _pHeap -> _count `uc ]
[; ;memory.c: 319: *(pHeap + count) = 0;
"319
[e = *U + _pHeap * -> _count `ux -> -> # *U _pHeap `ui `ux -> -> 0 `i `uc ]
[; ;memory.c: 320: return;
"320
[e $UE 17  ]
"321
}
[e :U 22 ]
"322
}
[e :U 18 ]
"308
[e $U 19  ]
[e :U 20 ]
[; ;memory.c: 321: }
[; ;memory.c: 322: }
[; ;memory.c: 323: }
"323
[e :UE 17 ]
}
"346
[v __SRAMmerge `NF20 ~T0 @X0 1 e ]
"347
{
[; ;memory.c: 346: near unsigned char _SRAMmerge(SALLOC * near pSegA)
[; ;memory.c: 347: {
[e :U __SRAMmerge ]
[v F40 `*S1 ~T0 @X0 1 t ]
"346
[v _pSegA `N*S1 ~T0 @X0 1 r1 ]
"347
[f ]
[v F43 `*S1 ~T0 @X0 1 t ]
"348
[v _pSegB `N*S1 ~T0 @X0 1 a ]
"349
[v _uSegA `S1 ~T0 @X0 1 a ]
[v _uSegB `S1 ~T0 @X0 1 a ]
[v _uSum `S1 ~T0 @X0 1 a ]
[; ;memory.c: 348: SALLOC * near pSegB;
[; ;memory.c: 349: near SALLOC uSegA, uSegB, uSum;
[; ;memory.c: 353: pSegB = pSegA + (*pSegA).byte;
"353
[e = _pSegB + _pSegA * -> . *U _pSegA 0 `ux -> -> # *U _pSegA `ui `ux ]
[; ;memory.c: 356: uSegA = *pSegA;
"356
[e = _uSegA *U _pSegA ]
[; ;memory.c: 357: uSegB = *pSegB;
"357
[e = _uSegB *U _pSegB ]
[; ;memory.c: 360: if (uSegB.byte == 0) return (0);
"360
[e $ ! == -> . _uSegB 0 `i -> 0 `i 24  ]
[e ) -> -> 0 `i `uc ]
[e $UE 23  ]
[e :U 24 ]
[; ;memory.c: 363: if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
"363
[e $ ! || != -> . . _uSegA 1 1 `i -> -> -> 0 `i `uc `i != -> . . _uSegB 1 1 `i -> -> -> 0 `i `uc `i 25  ]
[e ) -> -> 0 `i `uc ]
[e $UE 23  ]
[e :U 25 ]
[; ;memory.c: 366: if (uSegA.bits.count == 0x7F) return (0);
"366
[e $ ! == -> . . _uSegA 1 0 `i -> 127 `i 26  ]
[e ) -> -> 0 `i `uc ]
[e $UE 23  ]
[e :U 26 ]
[; ;memory.c: 369: uSum.byte = uSegA.byte + uSegB.byte;
"369
[e = . _uSum 0 -> + -> . _uSegA 0 `i -> . _uSegB 0 `i `uc ]
[; ;memory.c: 375: if ((uSum.byte) > 0x7F)
"375
[e $ ! > -> . _uSum 0 `i -> 127 `i 27  ]
[; ;memory.c: 376: {
"376
{
[; ;memory.c: 377: (*pSegA).byte = 0x7F;
"377
[e = . *U _pSegA 0 -> -> 127 `i `uc ]
[; ;memory.c: 378: pSegA += 0x7F;
"378
[e =+ _pSegA * -> -> 127 `i `x -> -> # *U _pSegA `i `x ]
[; ;memory.c: 379: pSegB += uSegB.byte;
"379
[e =+ _pSegB * -> . _uSegB 0 `ux -> -> # *U _pSegB `ui `ux ]
[; ;memory.c: 380: (*pSegA).byte = pSegB - pSegA;
"380
[e = . *U _pSegA 0 -> / - -> _pSegB `x -> _pSegA `x -> -> # *U _pSegB `i `x `uc ]
[; ;memory.c: 382: return (0x7F);
"382
[e ) -> -> 127 `i `uc ]
[e $UE 23  ]
"383
}
[; ;memory.c: 383: }
[e $U 28  ]
"386
[e :U 27 ]
[; ;memory.c: 386: else
[; ;memory.c: 387: {
"387
{
[; ;memory.c: 388: return ((*pSegA).byte = uSum.byte);
"388
[e ) = . *U _pSegA 0 . _uSum 0 ]
[e $UE 23  ]
"389
}
[e :U 28 ]
[; ;memory.c: 389: }
[; ;memory.c: 390: }
"390
[e :UE 23 ]
}
